{
  "filepath": "../implementations/go/lnd/channeldb/migration12/migration.go",
  "package": "migration12",
  "sections": [
    {
      "slug": "func MigrateInvoiceTLV(tx kvdb.RwTx) error {",
      "content": "func MigrateInvoiceTLV(tx kvdb.RwTx) error {\n\tlog.Infof(\"Migrating invoice bodies to TLV, \" +\n\t\t\"adding payment addresses and feature vectors.\")\n\n\tinvoiceB := tx.ReadWriteBucket(invoiceBucket)\n\tif invoiceB == nil {\n\t\treturn nil\n\t}\n\n\ttype keyedInvoice struct {\n\t\tkey     []byte\n\t\tinvoice Invoice\n\t}\n\n\t// Read in all existing invoices using the old format.\n\tvar invoices []keyedInvoice\n\terr := invoiceB.ForEach(func(k, v []byte) error {\n\t\tif v == nil {\n\t\t\treturn nil\n\t\t}\n\n\t\tinvoiceReader := bytes.NewReader(v)\n\t\tinvoice, err := LegacyDeserializeInvoice(invoiceReader)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\t// Insert an empty feature vector on all old payments.\n\t\tinvoice.Terms.Features = emptyFeatures\n\n\t\tinvoices = append(invoices, keyedInvoice{\n\t\t\tkey:     k,\n\t\t\tinvoice: invoice,\n\t\t})\n\n\t\treturn nil\n\t})\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t// Write out each one under its original key using TLV.\n\tfor _, ki := range invoices {\n\t\tvar b bytes.Buffer\n\t\terr = SerializeInvoice(&b, &ki.invoice)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\terr = invoiceB.Put(ki.key, b.Bytes())\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\n\tlog.Infof(\"Migration to TLV invoice bodies, \" +\n\t\t\"payment address, and features complete!\")\n\n\treturn nil\n}\n",
      "length": 1112,
      "tokens": 170,
      "embedding": []
    }
  ]
}