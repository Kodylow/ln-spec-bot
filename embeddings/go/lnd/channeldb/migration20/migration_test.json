{
  "filepath": "../implementations/go/lnd/channeldb/migration20/migration_test.go",
  "package": "migration20",
  "sections": [
    {
      "slug": "func TestMigrateOutpointIndex(t *testing.T) {",
      "content": "func TestMigrateOutpointIndex(t *testing.T) {\n\t// Prime the database with both the openChannel and closedChannel data.\n\t// We also create the outpointBucket since migration19 creates it and\n\t// migration20 assumes it exists.\n\tbefore := func(tx kvdb.RwTx) error {\n\t\terr := migtest.RestoreDB(tx, openChanBucket, openChannel)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\terr = migtest.RestoreDB(tx, closedChannelBucket, closedChannel)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\treturn migtest.RestoreDB(tx, outpointBucket, outpointData)\n\t}\n\n\t// Make sure that the openChanBucket and closedChannelBuckets are untouched\n\t// and that the outpoint index is populated correctly.\n\tafter := func(tx kvdb.RwTx) error {\n\t\terr := migtest.VerifyDB(tx, openChanBucket, openChannel)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\terr = migtest.VerifyDB(tx, closedChannelBucket, closedChannel)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\treturn migtest.VerifyDB(tx, outpointBucket, post)\n\t}\n\n\tmigtest.ApplyMigration(t, before, after, MigrateOutpointIndex, false)\n}\n",
      "length": 944,
      "tokens": 126,
      "embedding": []
    }
  ]
}