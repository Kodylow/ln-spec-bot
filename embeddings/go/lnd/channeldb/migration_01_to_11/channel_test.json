{
  "filepath": "../implementations/go/lnd/channeldb/migration_01_to_11/channel_test.go",
  "package": "migration_01_to_11",
  "sections": [
    {
      "slug": "func makeTestDB(t *testing.T) (*DB, error) {",
      "content": "func makeTestDB(t *testing.T) (*DB, error) {\n\t// Create channeldb for the first time.\n\tcdb, err := Open(t.TempDir())\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tt.Cleanup(func() {\n\t\tcdb.Close()\n\t})\n\n\treturn cdb, nil\n}\n",
      "length": 157,
      "tokens": 28,
      "embedding": []
    },
    {
      "slug": "func createTestChannelState(cdb *DB) (*OpenChannel, error) {",
      "content": "func createTestChannelState(cdb *DB) (*OpenChannel, error) {\n\t// Simulate 1000 channel updates.\n\tproducer, err := shachain.NewRevocationProducerFromBytes(key[:])\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tstore := shachain.NewRevocationStore()\n\tfor i := 0; i < 1; i++ {\n\t\tpreImage, err := producer.AtIndex(uint64(i))\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\n\t\tif err := store.AddNextEntry(preImage); err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t}\n\n\tlocalCfg := ChannelConfig{\n\t\tChannelConstraints: ChannelConstraints{\n\t\t\tDustLimit:        btcutil.Amount(rand.Int63()),\n\t\t\tMaxPendingAmount: lnwire.MilliSatoshi(rand.Int63()),\n\t\t\tChanReserve:      btcutil.Amount(rand.Int63()),\n\t\t\tMinHTLC:          lnwire.MilliSatoshi(rand.Int63()),\n\t\t\tMaxAcceptedHtlcs: uint16(rand.Int31()),\n\t\t\tCsvDelay:         uint16(rand.Int31()),\n\t\t},\n\t\tMultiSigKey: keychain.KeyDescriptor{\n\t\t\tPubKey: privKey.PubKey(),\n\t\t},\n\t\tRevocationBasePoint: keychain.KeyDescriptor{\n\t\t\tPubKey: privKey.PubKey(),\n\t\t},\n\t\tPaymentBasePoint: keychain.KeyDescriptor{\n\t\t\tPubKey: privKey.PubKey(),\n\t\t},\n\t\tDelayBasePoint: keychain.KeyDescriptor{\n\t\t\tPubKey: privKey.PubKey(),\n\t\t},\n\t\tHtlcBasePoint: keychain.KeyDescriptor{\n\t\t\tPubKey: privKey.PubKey(),\n\t\t},\n\t}\n\tremoteCfg := ChannelConfig{\n\t\tChannelConstraints: ChannelConstraints{\n\t\t\tDustLimit:        btcutil.Amount(rand.Int63()),\n\t\t\tMaxPendingAmount: lnwire.MilliSatoshi(rand.Int63()),\n\t\t\tChanReserve:      btcutil.Amount(rand.Int63()),\n\t\t\tMinHTLC:          lnwire.MilliSatoshi(rand.Int63()),\n\t\t\tMaxAcceptedHtlcs: uint16(rand.Int31()),\n\t\t\tCsvDelay:         uint16(rand.Int31()),\n\t\t},\n\t\tMultiSigKey: keychain.KeyDescriptor{\n\t\t\tPubKey: privKey.PubKey(),\n\t\t\tKeyLocator: keychain.KeyLocator{\n\t\t\t\tFamily: keychain.KeyFamilyMultiSig,\n\t\t\t\tIndex:  9,\n\t\t\t},\n\t\t},\n\t\tRevocationBasePoint: keychain.KeyDescriptor{\n\t\t\tPubKey: privKey.PubKey(),\n\t\t\tKeyLocator: keychain.KeyLocator{\n\t\t\t\tFamily: keychain.KeyFamilyRevocationBase,\n\t\t\t\tIndex:  8,\n\t\t\t},\n\t\t},\n\t\tPaymentBasePoint: keychain.KeyDescriptor{\n\t\t\tPubKey: privKey.PubKey(),\n\t\t\tKeyLocator: keychain.KeyLocator{\n\t\t\t\tFamily: keychain.KeyFamilyPaymentBase,\n\t\t\t\tIndex:  7,\n\t\t\t},\n\t\t},\n\t\tDelayBasePoint: keychain.KeyDescriptor{\n\t\t\tPubKey: privKey.PubKey(),\n\t\t\tKeyLocator: keychain.KeyLocator{\n\t\t\t\tFamily: keychain.KeyFamilyDelayBase,\n\t\t\t\tIndex:  6,\n\t\t\t},\n\t\t},\n\t\tHtlcBasePoint: keychain.KeyDescriptor{\n\t\t\tPubKey: privKey.PubKey(),\n\t\t\tKeyLocator: keychain.KeyLocator{\n\t\t\t\tFamily: keychain.KeyFamilyHtlcBase,\n\t\t\t\tIndex:  5,\n\t\t\t},\n\t\t},\n\t}\n\n\tchanID := lnwire.NewShortChanIDFromInt(uint64(rand.Int63()))\n\n\treturn &OpenChannel{\n\t\tChanType:          SingleFunder,\n\t\tChainHash:         key,\n\t\tFundingOutpoint:   wire.OutPoint{Hash: key, Index: rand.Uint32()},\n\t\tShortChannelID:    chanID,\n\t\tIsInitiator:       true,\n\t\tIsPending:         true,\n\t\tIdentityPub:       pubKey,\n\t\tCapacity:          btcutil.Amount(10000),\n\t\tLocalChanCfg:      localCfg,\n\t\tRemoteChanCfg:     remoteCfg,\n\t\tTotalMSatSent:     8,\n\t\tTotalMSatReceived: 2,\n\t\tLocalCommitment: ChannelCommitment{\n\t\t\tCommitHeight:  0,\n\t\t\tLocalBalance:  lnwire.MilliSatoshi(9000),\n\t\t\tRemoteBalance: lnwire.MilliSatoshi(3000),\n\t\t\tCommitFee:     btcutil.Amount(rand.Int63()),\n\t\t\tFeePerKw:      btcutil.Amount(5000),\n\t\t\tCommitTx:      testTx,\n\t\t\tCommitSig:     bytes.Repeat([]byte{1}, 71),\n\t\t},\n\t\tRemoteCommitment: ChannelCommitment{\n\t\t\tCommitHeight:  0,\n\t\t\tLocalBalance:  lnwire.MilliSatoshi(3000),\n\t\t\tRemoteBalance: lnwire.MilliSatoshi(9000),\n\t\t\tCommitFee:     btcutil.Amount(rand.Int63()),\n\t\t\tFeePerKw:      btcutil.Amount(5000),\n\t\t\tCommitTx:      testTx,\n\t\t\tCommitSig:     bytes.Repeat([]byte{1}, 71),\n\t\t},\n\t\tNumConfsRequired:        4,\n\t\tRemoteCurrentRevocation: privKey.PubKey(),\n\t\tRemoteNextRevocation:    privKey.PubKey(),\n\t\tRevocationProducer:      producer,\n\t\tRevocationStore:         store,\n\t\tDb:                      cdb,\n\t\tFundingTxn:              testTx,\n\t}, nil\n}\n",
      "length": 3646,
      "tokens": 264,
      "embedding": []
    }
  ]
}