{
  "filepath": "../implementations/go/lnd/channeldb/migration/lnwire21/gossip_timestamp_range.go",
  "package": "lnwire",
  "sections": [
    {
      "slug": "type GossipTimestampRange struct {",
      "content": "type GossipTimestampRange struct {\n\t// ChainHash denotes the chain that the sender wishes to restrict the\n\t// set of received announcements of.\n\tChainHash chainhash.Hash\n\n\t// FirstTimestamp is the timestamp of the earliest announcement message\n\t// that should be sent by the receiver.\n\tFirstTimestamp uint32\n\n\t// TimestampRange is the horizon beyond the FirstTimestamp that any\n\t// announcement messages should be sent for. The receiving node MUST\n\t// NOT send any announcements that have a timestamp greater than\n\t// FirstTimestamp + TimestampRange.\n\tTimestampRange uint32\n}\n\n// NewGossipTimestampRange creates a new empty GossipTimestampRange message.",
      "length": 603,
      "tokens": 87,
      "embedding": []
    },
    {
      "slug": "func NewGossipTimestampRange() *GossipTimestampRange {",
      "content": "func NewGossipTimestampRange() *GossipTimestampRange {\n\treturn &GossipTimestampRange{}\n}\n\n// A compile time check to ensure GossipTimestampRange implements the\n// lnwire.Message interface.\nvar _ Message = (*GossipTimestampRange)(nil)\n\n// Decode deserializes a serialized GossipTimestampRange message stored in the\n// passed io.Reader observing the specified protocol version.\n//\n// This is part of the lnwire.Message interface.",
      "length": 362,
      "tokens": 48,
      "embedding": []
    },
    {
      "slug": "func (g *GossipTimestampRange) Decode(r io.Reader, pver uint32) error {",
      "content": "func (g *GossipTimestampRange) Decode(r io.Reader, pver uint32) error {\n\treturn ReadElements(r,\n\t\tg.ChainHash[:],\n\t\t&g.FirstTimestamp,\n\t\t&g.TimestampRange,\n\t)\n}\n\n// Encode serializes the target GossipTimestampRange into the passed io.Writer\n// observing the protocol version specified.\n//\n// This is part of the lnwire.Message interface.",
      "length": 255,
      "tokens": 32,
      "embedding": []
    },
    {
      "slug": "func (g *GossipTimestampRange) Encode(w io.Writer, pver uint32) error {",
      "content": "func (g *GossipTimestampRange) Encode(w io.Writer, pver uint32) error {\n\treturn WriteElements(w,\n\t\tg.ChainHash[:],\n\t\tg.FirstTimestamp,\n\t\tg.TimestampRange,\n\t)\n}\n\n// MsgType returns the integer uniquely identifying this message type on the\n// wire.\n//\n// This is part of the lnwire.Message interface.",
      "length": 216,
      "tokens": 30,
      "embedding": []
    },
    {
      "slug": "func (g *GossipTimestampRange) MsgType() MessageType {",
      "content": "func (g *GossipTimestampRange) MsgType() MessageType {\n\treturn MsgGossipTimestampRange\n}\n\n// MaxPayloadLength returns the maximum allowed payload size for a\n// GossipTimestampRange complete message observing the specified protocol\n// version.\n//\n// This is part of the lnwire.Message interface.",
      "length": 232,
      "tokens": 32,
      "embedding": []
    },
    {
      "slug": "func (g *GossipTimestampRange) MaxPayloadLength(uint32) uint32 {",
      "content": "func (g *GossipTimestampRange) MaxPayloadLength(uint32) uint32 {\n\t// 32 + 4 + 4\n\t//\n\t// TODO(roasbeef): update to 8 byte timestamps?\n\treturn 40\n}\n",
      "length": 76,
      "tokens": 17,
      "embedding": []
    }
  ]
}