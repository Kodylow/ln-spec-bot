{
  "filepath": "../implementations/go/lnd/lncfg/protocol_legacy_off.go",
  "package": "lncfg",
  "sections": [
    {
      "slug": "//go:build !dev",
      "content": "//go:build !dev\n// +build !dev\n\npackage lncfg\n\n// Legacy is a sub-config that houses all the legacy protocol options.  These\n// are mostly used for integration tests as most modern nodes should always run\n// with them on by default.",
      "length": 210,
      "tokens": 38,
      "embedding": []
    },
    {
      "slug": "type LegacyProtocol struct {",
      "content": "type LegacyProtocol struct {\n}\n\n// LegacyOnion returns true if the old legacy onion format should be used when\n// we're an intermediate or final hop. This controls if we set the\n// TLVOnionPayloadOptional bit or not.",
      "length": 183,
      "tokens": 33,
      "embedding": []
    },
    {
      "slug": "func (l *LegacyProtocol) LegacyOnion() bool {",
      "content": "func (l *LegacyProtocol) LegacyOnion() bool {\n\treturn false\n}\n\n// NoStaticRemoteKey returns true if the old commitment format with a tweaked\n// remote key should be used for new funded channels.",
      "length": 144,
      "tokens": 25,
      "embedding": []
    },
    {
      "slug": "func (l *LegacyProtocol) NoStaticRemoteKey() bool {",
      "content": "func (l *LegacyProtocol) NoStaticRemoteKey() bool {\n\treturn false\n}\n",
      "length": 14,
      "tokens": 3,
      "embedding": []
    }
  ]
}