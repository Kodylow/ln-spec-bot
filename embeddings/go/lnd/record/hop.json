{
  "filepath": "../implementations/go/lnd/record/hop.go",
  "package": "record",
  "sections": [
    {
      "slug": "func NewAmtToFwdRecord(amt *uint64) tlv.Record {",
      "content": "func NewAmtToFwdRecord(amt *uint64) tlv.Record {\n\treturn tlv.MakeDynamicRecord(\n\t\tAmtOnionType, amt, func() uint64 {\n\t\t\treturn tlv.SizeTUint64(*amt)\n\t\t},\n\t\ttlv.ETUint64, tlv.DTUint64,\n\t)\n}\n\n// NewLockTimeRecord creates a tlv.Record that encodes the outgoing_cltv_value\n// (type 4) for an onion payload.",
      "length": 244,
      "tokens": 30,
      "embedding": []
    },
    {
      "slug": "func NewLockTimeRecord(lockTime *uint32) tlv.Record {",
      "content": "func NewLockTimeRecord(lockTime *uint32) tlv.Record {\n\treturn tlv.MakeDynamicRecord(\n\t\tLockTimeOnionType, lockTime, func() uint64 {\n\t\t\treturn tlv.SizeTUint32(*lockTime)\n\t\t},\n\t\ttlv.ETUint32, tlv.DTUint32,\n\t)\n}\n\n// NewNextHopIDRecord creates a tlv.Record that encodes the short_channel_id\n// (type 6) for an onion payload.",
      "length": 257,
      "tokens": 30,
      "embedding": []
    },
    {
      "slug": "func NewNextHopIDRecord(cid *uint64) tlv.Record {",
      "content": "func NewNextHopIDRecord(cid *uint64) tlv.Record {\n\treturn tlv.MakePrimitiveRecord(NextHopOnionType, cid)\n}\n\n// NewMetadataRecord creates a tlv.Record that encodes the metadata (type 10)\n// for an onion payload.",
      "length": 156,
      "tokens": 20,
      "embedding": []
    },
    {
      "slug": "func NewMetadataRecord(metadata *[]byte) tlv.Record {",
      "content": "func NewMetadataRecord(metadata *[]byte) tlv.Record {\n\treturn tlv.MakeDynamicRecord(\n\t\tMetadataOnionType, metadata,\n\t\tfunc() uint64 {\n\t\t\treturn uint64(len(*metadata))\n\t\t},\n\t\ttlv.EVarBytes, tlv.DVarBytes,\n\t)\n}\n",
      "length": 147,
      "tokens": 14,
      "embedding": []
    }
  ]
}