{
  "filepath": "../implementations/go/lnd/lnwire/closing_signed.go",
  "package": "lnwire",
  "sections": [
    {
      "slug": "type ClosingSigned struct {",
      "content": "type ClosingSigned struct {\n\t// ChannelID serves to identify which channel is to be closed.\n\tChannelID ChannelID\n\n\t// FeeSatoshis is the total fee in satoshis that the party to the\n\t// channel would like to propose for the close transaction.\n\tFeeSatoshis btcutil.Amount\n\n\t// Signature is for the proposed channel close transaction.\n\tSignature Sig\n\n\t// ExtraData is the set of data that was appended to this message to\n\t// fill out the full maximum transport message size. These fields can\n\t// be used to specify optional data such as custom TLV fields.\n\tExtraData ExtraOpaqueData\n}\n\n// NewClosingSigned creates a new empty ClosingSigned message.",
      "length": 601,
      "tokens": 98,
      "embedding": []
    },
    {
      "slug": "func NewClosingSigned(cid ChannelID, fs btcutil.Amount,",
      "content": "func NewClosingSigned(cid ChannelID, fs btcutil.Amount,\n\tsig Sig) *ClosingSigned {\n\n\treturn &ClosingSigned{\n\t\tChannelID:   cid,\n\t\tFeeSatoshis: fs,\n\t\tSignature:   sig,\n\t}\n}\n\n// A compile time check to ensure ClosingSigned implements the lnwire.Message\n// interface.\nvar _ Message = (*ClosingSigned)(nil)\n\n// Decode deserializes a serialized ClosingSigned message stored in the passed\n// io.Reader observing the specified protocol version.\n//\n// This is part of the lnwire.Message interface.",
      "length": 417,
      "tokens": 59,
      "embedding": []
    },
    {
      "slug": "func (c *ClosingSigned) Decode(r io.Reader, pver uint32) error {",
      "content": "func (c *ClosingSigned) Decode(r io.Reader, pver uint32) error {\n\treturn ReadElements(\n\t\tr, &c.ChannelID, &c.FeeSatoshis, &c.Signature, &c.ExtraData,\n\t)\n}\n\n// Encode serializes the target ClosingSigned into the passed io.Writer\n// observing the protocol version specified.\n//\n// This is part of the lnwire.Message interface.",
      "length": 251,
      "tokens": 34,
      "embedding": []
    },
    {
      "slug": "func (c *ClosingSigned) Encode(w *bytes.Buffer, pver uint32) error {",
      "content": "func (c *ClosingSigned) Encode(w *bytes.Buffer, pver uint32) error {\n\tif err := WriteChannelID(w, c.ChannelID); err != nil {\n\t\treturn err\n\t}\n\n\tif err := WriteSatoshi(w, c.FeeSatoshis); err != nil {\n\t\treturn err\n\t}\n\n\tif err := WriteSig(w, c.Signature); err != nil {\n\t\treturn err\n\t}\n\n\treturn WriteBytes(w, c.ExtraData)\n}\n\n// MsgType returns the integer uniquely identifying this message type on the\n// wire.\n//\n// This is part of the lnwire.Message interface.",
      "length": 370,
      "tokens": 63,
      "embedding": []
    },
    {
      "slug": "func (c *ClosingSigned) MsgType() MessageType {",
      "content": "func (c *ClosingSigned) MsgType() MessageType {\n\treturn MsgClosingSigned\n}\n",
      "length": 25,
      "tokens": 3,
      "embedding": []
    }
  ]
}