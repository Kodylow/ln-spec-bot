{
  "filepath": "../implementations/go/lnd/lnwire/ping.go",
  "package": "lnwire",
  "sections": [
    {
      "slug": "type PingPayload []byte",
      "content": "type PingPayload []byte\n\n// Ping defines a message which is sent by peers periodically to determine if\n// the connection is still valid. Each ping message carries the number of bytes\n// to pad the pong response with, and also a number of bytes to be ignored at\n// the end of the ping message (which is padding).",
      "length": 283,
      "tokens": 55,
      "embedding": []
    },
    {
      "slug": "type Ping struct {",
      "content": "type Ping struct {\n\t// NumPongBytes is the number of bytes the pong response to this\n\t// message should carry.\n\tNumPongBytes uint16\n\n\t// PaddingBytes is a set of opaque bytes used to pad out this ping\n\t// message. Using this field in conjunction to the one above, it's\n\t// possible for node to generate fake cover traffic.\n\tPaddingBytes PingPayload\n}\n\n// NewPing returns a new Ping message.",
      "length": 361,
      "tokens": 63,
      "embedding": []
    },
    {
      "slug": "func NewPing(numBytes uint16) *Ping {",
      "content": "func NewPing(numBytes uint16) *Ping {\n\treturn &Ping{\n\t\tNumPongBytes: numBytes,\n\t}\n}\n\n// A compile time check to ensure Ping implements the lnwire.Message interface.\nvar _ Message = (*Ping)(nil)\n\n// Decode deserializes a serialized Ping message stored in the passed io.Reader\n// observing the specified protocol version.\n//\n// This is part of the lnwire.Message interface.",
      "length": 322,
      "tokens": 50,
      "embedding": []
    },
    {
      "slug": "func (p *Ping) Decode(r io.Reader, pver uint32) error {",
      "content": "func (p *Ping) Decode(r io.Reader, pver uint32) error {\n\terr := ReadElements(r, &p.NumPongBytes, &p.PaddingBytes)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\tif p.NumPongBytes > MaxPongBytes {\n\t\treturn ErrMaxPongBytesExceeded\n\t}\n\n\treturn nil\n}\n\n// Encode serializes the target Ping into the passed io.Writer observing the\n// protocol version specified.\n//\n// This is part of the lnwire.Message interface.",
      "length": 324,
      "tokens": 49,
      "embedding": []
    },
    {
      "slug": "func (p *Ping) Encode(w *bytes.Buffer, pver uint32) error {",
      "content": "func (p *Ping) Encode(w *bytes.Buffer, pver uint32) error {\n\tif err := WriteUint16(w, p.NumPongBytes); err != nil {\n\t\treturn err\n\t}\n\n\treturn WritePingPayload(w, p.PaddingBytes)\n}\n\n// MsgType returns the integer uniquely identifying this message type on the\n// wire.\n//\n// This is part of the lnwire.Message interface.",
      "length": 247,
      "tokens": 39,
      "embedding": []
    },
    {
      "slug": "func (p *Ping) MsgType() MessageType {",
      "content": "func (p *Ping) MsgType() MessageType {\n\treturn MsgPing\n}\n",
      "length": 16,
      "tokens": 3,
      "embedding": []
    }
  ]
}