{
  "filepath": "../implementations/go/lnd/lnwire/netaddress_test.go",
  "package": "lnwire",
  "sections": [
    {
      "slug": "func TestNetAddressDisplay(t *testing.T) {",
      "content": "func TestNetAddressDisplay(t *testing.T) {\n\tt.Parallel()\n\n\tpubKeyStr := \"036a0c5ea35df8a528b98edf6f290b28676d51d0fe202b073fe677612a39c0aa09\"\n\tpubHex, err := hex.DecodeString(pubKeyStr)\n\trequire.NoError(t, err, \"unable to decode str\")\n\n\tpubKey, err := btcec.ParsePubKey(pubHex)\n\trequire.NoError(t, err, \"unable to parse pubkey\")\n\taddr, _ := net.ResolveTCPAddr(\"tcp\", \"10.0.0.2:9000\")\n\n\tnetAddr := NetAddress{\n\t\tIdentityKey: pubKey,\n\t\tAddress:     addr,\n\t}\n\n\tif addr.Network() != netAddr.Network() {\n\t\tt.Fatalf(\"network addr mismatch: %v\", err)\n\t}\n\n\texpectedAddr := pubKeyStr + \"@\" + addr.String()\n\taddrString := netAddr.String()\n\tif expectedAddr != addrString {\n\t\tt.Fatalf(\"expected %v, got %v\", expectedAddr, addrString)\n\t}\n}\n",
      "length": 658,
      "tokens": 71,
      "embedding": []
    }
  ]
}