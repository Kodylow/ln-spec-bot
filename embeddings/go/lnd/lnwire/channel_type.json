{
  "filepath": "../implementations/go/lnd/lnwire/channel_type.go",
  "package": "lnwire",
  "sections": [
    {
      "slug": "type ChannelType RawFeatureVector",
      "content": "type ChannelType RawFeatureVector\n\n// featureBitLen returns the length in bytes of the encoded feature bits.",
      "length": 73,
      "tokens": 12,
      "embedding": []
    },
    {
      "slug": "func (c ChannelType) featureBitLen() uint64 {",
      "content": "func (c ChannelType) featureBitLen() uint64 {\n\tfv := RawFeatureVector(c)\n\treturn uint64(fv.SerializeSize())\n}\n\n// Record returns a TLV record that can be used to encode/decode the channel\n// type from a given TLV stream.",
      "length": 169,
      "tokens": 27,
      "embedding": []
    },
    {
      "slug": "func (c *ChannelType) Record() tlv.Record {",
      "content": "func (c *ChannelType) Record() tlv.Record {\n\treturn tlv.MakeDynamicRecord(\n\t\tChannelTypeRecordType, c, c.featureBitLen, channelTypeEncoder,\n\t\tchannelTypeDecoder,\n\t)\n}\n\n// channelTypeEncoder is a custom TLV encoder for the ChannelType record.",
      "length": 191,
      "tokens": 20,
      "embedding": []
    },
    {
      "slug": "func channelTypeEncoder(w io.Writer, val interface{}, buf *[8]byte) error {",
      "content": "func channelTypeEncoder(w io.Writer, val interface{}, buf *[8]byte) error {\n\tif v, ok := val.(*ChannelType); ok {\n\t\t// Encode the feature bits as a byte slice without its length\n\t\t// prepended, as that's already taken care of by the TLV record.\n\t\tfv := RawFeatureVector(*v)\n\t\treturn fv.encode(w, fv.SerializeSize(), 8)\n\t}\n\n\treturn tlv.NewTypeForEncodingErr(val, \"lnwire.ChannelType\")\n}\n\n// channelTypeDecoder is a custom TLV decoder for the ChannelType record.",
      "length": 374,
      "tokens": 54,
      "embedding": []
    },
    {
      "slug": "func channelTypeDecoder(r io.Reader, val interface{}, buf *[8]byte, l uint64) error {",
      "content": "func channelTypeDecoder(r io.Reader, val interface{}, buf *[8]byte, l uint64) error {\n\tif v, ok := val.(*ChannelType); ok {\n\t\tfv := NewRawFeatureVector()\n\t\tif err := fv.decode(r, int(l), 8); err != nil {\n\t\t\treturn err\n\t\t}\n\t\t*v = ChannelType(*fv)\n\t\treturn nil\n\t}\n\n\treturn tlv.NewTypeForEncodingErr(val, \"lnwire.ChannelType\")\n}\n",
      "length": 229,
      "tokens": 33,
      "embedding": []
    }
  ]
}