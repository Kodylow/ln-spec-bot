{
  "filepath": "../implementations/go/lnd/lnwire/query_channel_range.go",
  "package": "lnwire",
  "sections": [
    {
      "slug": "type QueryChannelRange struct {",
      "content": "type QueryChannelRange struct {\n\t// ChainHash denotes the target chain that we're trying to synchronize\n\t// channel graph state for.\n\tChainHash chainhash.Hash\n\n\t// FirstBlockHeight is the first block in the query range. The\n\t// responder should send all new short channel IDs from this block\n\t// until this block plus the specified number of blocks.\n\tFirstBlockHeight uint32\n\n\t// NumBlocks is the number of blocks beyond the first block that short\n\t// channel ID's should be sent for.\n\tNumBlocks uint32\n\n\t// ExtraData is the set of data that was appended to this message to\n\t// fill out the full maximum transport message size. These fields can\n\t// be used to specify optional data such as custom TLV fields.\n\tExtraData ExtraOpaqueData\n}\n\n// NewQueryChannelRange creates a new empty QueryChannelRange message.",
      "length": 758,
      "tokens": 124,
      "embedding": []
    },
    {
      "slug": "func NewQueryChannelRange() *QueryChannelRange {",
      "content": "func NewQueryChannelRange() *QueryChannelRange {\n\treturn &QueryChannelRange{}\n}\n\n// A compile time check to ensure QueryChannelRange implements the\n// lnwire.Message interface.\nvar _ Message = (*QueryChannelRange)(nil)\n\n// Decode deserializes a serialized QueryChannelRange message stored in the\n// passed io.Reader observing the specified protocol version.\n//\n// This is part of the lnwire.Message interface.",
      "length": 350,
      "tokens": 48,
      "embedding": []
    },
    {
      "slug": "func (q *QueryChannelRange) Decode(r io.Reader, pver uint32) error {",
      "content": "func (q *QueryChannelRange) Decode(r io.Reader, pver uint32) error {\n\treturn ReadElements(r,\n\t\tq.ChainHash[:],\n\t\t&q.FirstBlockHeight,\n\t\t&q.NumBlocks,\n\t\t&q.ExtraData,\n\t)\n}\n\n// Encode serializes the target QueryChannelRange into the passed io.Writer\n// observing the protocol version specified.\n//\n// This is part of the lnwire.Message interface.",
      "length": 264,
      "tokens": 33,
      "embedding": []
    },
    {
      "slug": "func (q *QueryChannelRange) Encode(w *bytes.Buffer, pver uint32) error {",
      "content": "func (q *QueryChannelRange) Encode(w *bytes.Buffer, pver uint32) error {\n\tif err := WriteBytes(w, q.ChainHash[:]); err != nil {\n\t\treturn err\n\t}\n\n\tif err := WriteUint32(w, q.FirstBlockHeight); err != nil {\n\t\treturn err\n\t}\n\n\tif err := WriteUint32(w, q.NumBlocks); err != nil {\n\t\treturn err\n\t}\n\n\treturn WriteBytes(w, q.ExtraData)\n}\n\n// MsgType returns the integer uniquely identifying this message type on the\n// wire.\n//\n// This is part of the lnwire.Message interface.",
      "length": 376,
      "tokens": 63,
      "embedding": []
    },
    {
      "slug": "func (q *QueryChannelRange) MsgType() MessageType {",
      "content": "func (q *QueryChannelRange) MsgType() MessageType {\n\treturn MsgQueryChannelRange\n}\n\n// LastBlockHeight returns the last block height covered by the range of a\n// QueryChannelRange message.",
      "length": 132,
      "tokens": 19,
      "embedding": []
    },
    {
      "slug": "func (q *QueryChannelRange) LastBlockHeight() uint32 {",
      "content": "func (q *QueryChannelRange) LastBlockHeight() uint32 {\n\t// Handle overflows by casting to uint64.\n\tlastBlockHeight := uint64(q.FirstBlockHeight) + uint64(q.NumBlocks) - 1\n\tif lastBlockHeight > math.MaxUint32 {\n\t\treturn math.MaxUint32\n\t}\n\treturn uint32(lastBlockHeight)\n}\n",
      "length": 209,
      "tokens": 25,
      "embedding": []
    }
  ]
}