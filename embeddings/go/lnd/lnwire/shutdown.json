{
  "filepath": "../implementations/go/lnd/lnwire/shutdown.go",
  "package": "lnwire",
  "sections": [
    {
      "slug": "type Shutdown struct {",
      "content": "type Shutdown struct {\n\t// ChannelID serves to identify which channel is to be closed.\n\tChannelID ChannelID\n\n\t// Address is the script to which the channel funds will be paid.\n\tAddress DeliveryAddress\n\n\t// ExtraData is the set of data that was appended to this message to\n\t// fill out the full maximum transport message size. These fields can\n\t// be used to specify optional data such as custom TLV fields.\n\tExtraData ExtraOpaqueData\n}\n\n// NewShutdown creates a new Shutdown message.",
      "length": 448,
      "tokens": 76,
      "embedding": []
    },
    {
      "slug": "func NewShutdown(cid ChannelID, addr DeliveryAddress) *Shutdown {",
      "content": "func NewShutdown(cid ChannelID, addr DeliveryAddress) *Shutdown {\n\treturn &Shutdown{\n\t\tChannelID: cid,\n\t\tAddress:   addr,\n\t}\n}\n\n// A compile-time check to ensure Shutdown implements the lnwire.Message\n// interface.\nvar _ Message = (*Shutdown)(nil)\n\n// Decode deserializes a serialized Shutdown stored in the passed io.Reader\n// observing the specified protocol version.\n//\n// This is part of the lnwire.Message interface.",
      "length": 342,
      "tokens": 51,
      "embedding": []
    },
    {
      "slug": "func (s *Shutdown) Decode(r io.Reader, pver uint32) error {",
      "content": "func (s *Shutdown) Decode(r io.Reader, pver uint32) error {\n\treturn ReadElements(r, &s.ChannelID, &s.Address, &s.ExtraData)\n}\n\n// Encode serializes the target Shutdown into the passed io.Writer observing\n// the protocol version specified.\n//\n// This is part of the lnwire.Message interface.",
      "length": 224,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (s *Shutdown) Encode(w *bytes.Buffer, pver uint32) error {",
      "content": "func (s *Shutdown) Encode(w *bytes.Buffer, pver uint32) error {\n\tif err := WriteChannelID(w, s.ChannelID); err != nil {\n\t\treturn err\n\t}\n\n\tif err := WriteDeliveryAddress(w, s.Address); err != nil {\n\t\treturn err\n\t}\n\n\treturn WriteBytes(w, s.ExtraData)\n}\n\n// MsgType returns the integer uniquely identifying this message type on the\n// wire.\n//\n// This is part of the lnwire.Message interface.",
      "length": 311,
      "tokens": 51,
      "embedding": []
    },
    {
      "slug": "func (s *Shutdown) MsgType() MessageType {",
      "content": "func (s *Shutdown) MsgType() MessageType {\n\treturn MsgShutdown\n}\n",
      "length": 20,
      "tokens": 3,
      "embedding": []
    }
  ]
}