{
  "filepath": "../implementations/go/lnd/lnwire/node_announcement_test.go",
  "package": "lnwire",
  "sections": [
    {
      "slug": "func TestNodeAliasValidation(t *testing.T) {",
      "content": "func TestNodeAliasValidation(t *testing.T) {\n\tt.Parallel()\n\n\tvar testCases = []struct {\n\t\talias string\n\t\tvalid bool\n\t}{\n\t\t// UTF-8 alias with valid length.\n\t\t{\n\t\t\talias: \"meruem\",\n\t\t\tvalid: true,\n\t\t},\n\n\t\t// UTF-8 alias with invalid length.\n\t\t{\n\t\t\talias: \"p3kysxqr23swl33m6h5grmzddgw5nsgkky3g52zc6frpwz\",\n\t\t\tvalid: false,\n\t\t},\n\n\t\t// String with non UTF-8 characters.\n\t\t{\n\t\t\talias: \"\\xE0\\x80\\x80\",\n\t\t\tvalid: false,\n\t\t},\n\t}\n\tfor i, testCase := range testCases {\n\t\t_, err := NewNodeAlias(testCase.alias)\n\t\tswitch {\n\t\tcase err != nil && testCase.valid:\n\t\t\tt.Fatalf(\"#%v: alias should have been invalid\", i)\n\n\t\tcase err == nil && !testCase.valid:\n\t\t\tt.Fatalf(\"#%v: invalid alias was missed\", i)\n\t\t}\n\t}\n}\n",
      "length": 618,
      "tokens": 89,
      "embedding": []
    }
  ]
}