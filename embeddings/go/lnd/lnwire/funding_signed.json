{
  "filepath": "../implementations/go/lnd/lnwire/funding_signed.go",
  "package": "lnwire",
  "sections": [
    {
      "slug": "type FundingSigned struct {",
      "content": "type FundingSigned struct {\n\t// ChannelPoint is the particular active channel that this\n\t// FundingSigned is bound to.\n\tChanID ChannelID\n\n\t// CommitSig is Bob's signature for Alice's version of the commitment\n\t// transaction.\n\tCommitSig Sig\n\n\t// ExtraData is the set of data that was appended to this message to\n\t// fill out the full maximum transport message size. These fields can\n\t// be used to specify optional data such as custom TLV fields.\n\tExtraData ExtraOpaqueData\n}\n\n// A compile time check to ensure FundingSigned implements the lnwire.Message\n// interface.\nvar _ Message = (*FundingSigned)(nil)\n\n// Encode serializes the target FundingSigned into the passed io.Writer\n// implementation. Serialization will observe the rules defined by the passed\n// protocol version.\n//\n// This is part of the lnwire.Message interface.",
      "length": 780,
      "tokens": 123,
      "embedding": []
    },
    {
      "slug": "func (f *FundingSigned) Encode(w *bytes.Buffer, pver uint32) error {",
      "content": "func (f *FundingSigned) Encode(w *bytes.Buffer, pver uint32) error {\n\tif err := WriteChannelID(w, f.ChanID); err != nil {\n\t\treturn err\n\t}\n\n\tif err := WriteSig(w, f.CommitSig); err != nil {\n\t\treturn err\n\t}\n\n\treturn WriteBytes(w, f.ExtraData)\n}\n\n// Decode deserializes the serialized FundingSigned stored in the passed\n// io.Reader into the target FundingSigned using the deserialization rules\n// defined by the passed protocol version.\n//\n// This is part of the lnwire.Message interface.",
      "length": 402,
      "tokens": 64,
      "embedding": []
    },
    {
      "slug": "func (f *FundingSigned) Decode(r io.Reader, pver uint32) error {",
      "content": "func (f *FundingSigned) Decode(r io.Reader, pver uint32) error {\n\treturn ReadElements(r, &f.ChanID, &f.CommitSig, &f.ExtraData)\n}\n\n// MsgType returns the uint32 code which uniquely identifies this message as a\n// FundingSigned on the wire.\n//\n// This is part of the lnwire.Message interface.",
      "length": 220,
      "tokens": 33,
      "embedding": []
    },
    {
      "slug": "func (f *FundingSigned) MsgType() MessageType {",
      "content": "func (f *FundingSigned) MsgType() MessageType {\n\treturn MsgFundingSigned\n}\n",
      "length": 25,
      "tokens": 3,
      "embedding": []
    }
  ]
}