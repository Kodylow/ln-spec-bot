{
  "filepath": "../implementations/go/lnd/pool/write_buffer.go",
  "package": "pool",
  "sections": [
    {
      "slug": "type WriteBuffer struct {",
      "content": "type WriteBuffer struct {\n\tpool *Recycle\n}\n\n// NewWriteBuffer returns a freshly instantiated WriteBuffer, using the given\n// gcInterval and expiryIntervals.",
      "length": 126,
      "tokens": 17,
      "embedding": []
    },
    {
      "slug": "func NewWriteBuffer(gcInterval, expiryInterval time.Duration) *WriteBuffer {",
      "content": "func NewWriteBuffer(gcInterval, expiryInterval time.Duration) *WriteBuffer {\n\treturn &WriteBuffer{\n\t\tpool: NewRecycle(\n\t\t\tfunc() interface{} { return new(buffer.Write) },\n\t\t\t100, gcInterval, expiryInterval,\n\t\t),\n\t}\n}\n\n// Take returns a fresh buffer.Write to the caller.",
      "length": 184,
      "tokens": 25,
      "embedding": []
    },
    {
      "slug": "func (p *WriteBuffer) Take() *buffer.Write {",
      "content": "func (p *WriteBuffer) Take() *buffer.Write {\n\treturn p.pool.Take().(*buffer.Write)\n}\n\n// Return returns the buffer.Write to the pool, so that it can be recycled or\n// released.",
      "length": 127,
      "tokens": 20,
      "embedding": []
    },
    {
      "slug": "func (p *WriteBuffer) Return(buf *buffer.Write) {",
      "content": "func (p *WriteBuffer) Return(buf *buffer.Write) {\n\tp.pool.Return(buf)\n}\n",
      "length": 20,
      "tokens": 2,
      "embedding": []
    }
  ]
}