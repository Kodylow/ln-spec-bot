{
  "filepath": "../implementations/go/lnd/pool/recycle.go",
  "package": "pool",
  "sections": [
    {
      "slug": "type Recycler interface {",
      "content": "type Recycler interface {\n\t// Recycle resets the object to its default state.\n\tRecycle()\n}\n\n// Recycle is a generic queue for recycling objects implementing the Recycler\n// interface. It is backed by an underlying queue.GCQueue, and invokes the\n// Recycle method on returned objects before returning them to the queue.",
      "length": 286,
      "tokens": 47,
      "embedding": []
    },
    {
      "slug": "type Recycle struct {",
      "content": "type Recycle struct {\n\tqueue *queue.GCQueue\n}\n\n// NewRecycle initializes a fresh Recycle instance.",
      "length": 73,
      "tokens": 10,
      "embedding": []
    },
    {
      "slug": "func NewRecycle(newItem func() interface{}, returnQueueSize int,",
      "content": "func NewRecycle(newItem func() interface{}, returnQueueSize int,\n\tgcInterval, expiryInterval time.Duration) *Recycle {\n\n\treturn &Recycle{\n\t\tqueue: queue.NewGCQueue(\n\t\t\tnewItem, returnQueueSize,\n\t\t\tgcInterval, expiryInterval,\n\t\t),\n\t}\n}\n\n// Take returns an element from the pool.",
      "length": 202,
      "tokens": 24,
      "embedding": []
    },
    {
      "slug": "func (r *Recycle) Take() interface{} {",
      "content": "func (r *Recycle) Take() interface{} {\n\treturn r.queue.Take()\n}\n\n// Return returns an item implementing the Recycler interface to the pool. The\n// Recycle method is invoked before returning the item to improve performance\n// and utilization under load.",
      "length": 208,
      "tokens": 33,
      "embedding": []
    },
    {
      "slug": "func (r *Recycle) Return(item Recycler) {",
      "content": "func (r *Recycle) Return(item Recycler) {\n\t// Recycle the item to ensure that a dirty instance is never offered\n\t// from Take. The call is done here so that the CPU cycles spent\n\t// clearing the buffer are owned by the caller, and not by the queue\n\t// itself. This makes the queue more likely to be available to deliver\n\t// items in the free list.\n\titem.Recycle()\n\n\tr.queue.Return(item)\n}\n",
      "length": 338,
      "tokens": 63,
      "embedding": []
    }
  ]
}