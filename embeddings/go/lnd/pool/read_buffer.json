{
  "filepath": "../implementations/go/lnd/pool/read_buffer.go",
  "package": "pool",
  "sections": [
    {
      "slug": "type ReadBuffer struct {",
      "content": "type ReadBuffer struct {\n\tpool *Recycle\n}\n\n// NewReadBuffer returns a freshly instantiated ReadBuffer, using the given\n// gcInterval and expiryInterval.",
      "length": 123,
      "tokens": 17,
      "embedding": []
    },
    {
      "slug": "func NewReadBuffer(gcInterval, expiryInterval time.Duration) *ReadBuffer {",
      "content": "func NewReadBuffer(gcInterval, expiryInterval time.Duration) *ReadBuffer {\n\treturn &ReadBuffer{\n\t\tpool: NewRecycle(\n\t\t\tfunc() interface{} { return new(buffer.Read) },\n\t\t\t100, gcInterval, expiryInterval,\n\t\t),\n\t}\n}\n\n// Take returns a fresh buffer.Read to the caller.",
      "length": 181,
      "tokens": 25,
      "embedding": []
    },
    {
      "slug": "func (p *ReadBuffer) Take() *buffer.Read {",
      "content": "func (p *ReadBuffer) Take() *buffer.Read {\n\treturn p.pool.Take().(*buffer.Read)\n}\n\n// Return returns the buffer.Read to the pool, so that it can be cycled or\n// released.",
      "length": 123,
      "tokens": 20,
      "embedding": []
    },
    {
      "slug": "func (p *ReadBuffer) Return(buf *buffer.Read) {",
      "content": "func (p *ReadBuffer) Return(buf *buffer.Read) {\n\tp.pool.Return(buf)\n}\n",
      "length": 20,
      "tokens": 2,
      "embedding": []
    }
  ]
}