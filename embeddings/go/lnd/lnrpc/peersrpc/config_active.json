{
  "filepath": "../implementations/go/lnd/lnrpc/peersrpc/config_active.go",
  "package": "peersrpc",
  "sections": [
    {
      "slug": "//go:build peersrpc",
      "content": "//go:build peersrpc\n// +build peersrpc\n\npackage peersrpc\n\nimport (\n\t\"net\"\n\n\t\"github.com/lightningnetwork/lnd/lnwire\"\n\t\"github.com/lightningnetwork/lnd/netann\"\n)\n\n// Config is the primary configuration struct for the peers RPC subserver.\n// It contains all the items required for the server to carry out its duties.\n// The fields with struct tags are meant to be parsed as normal configuration\n// options, while if able to be populated, the latter fields MUST also be\n// specified.",
      "length": 445,
      "tokens": 68,
      "embedding": []
    },
    {
      "slug": "type Config struct {",
      "content": "type Config struct {\n\t// GetNodeAnnouncement is used to send our retrieve the current\n\t// node announcement information.\n\tGetNodeAnnouncement func() (lnwire.NodeAnnouncement, error)\n\n\t// ParseAddr parses an address from its string format to a net.Addr.\n\tParseAddr func(addr string) (net.Addr, error)\n\n\t// UpdateNodeAnnouncement updates our node announcement applying the\n\t// given NodeAnnModifiers and broadcasts the new version to the network.\n\tUpdateNodeAnnouncement func(...netann.NodeAnnModifier) error\n}\n",
      "length": 477,
      "tokens": 58,
      "embedding": []
    }
  ]
}