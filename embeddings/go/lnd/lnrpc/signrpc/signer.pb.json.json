{
  "filepath": "../implementations/go/lnd/lnrpc/signrpc/signer.pb.json.go",
  "package": "signrpc",
  "sections": [
    {
      "slug": "func RegisterSignerJSONCallbacks(registry map[string]func(ctx context.Context,",
      "content": "func RegisterSignerJSONCallbacks(registry map[string]func(ctx context.Context,\n\tconn *grpc.ClientConn, reqJSON string, callback func(string, error))) {\n\n\tmarshaler := &gateway.JSONPb{\n\t\tMarshalOptions: protojson.MarshalOptions{\n\t\t\tUseProtoNames:   true,\n\t\t\tEmitUnpopulated: true,\n\t\t},\n\t}\n\n\tregistry[\"signrpc.Signer.SignOutputRaw\"] = func(ctx context.Context,\n\t\tconn *grpc.ClientConn, reqJSON string, callback func(string, error)) {\n\n\t\treq := &SignReq{}\n\t\terr := marshaler.Unmarshal([]byte(reqJSON), req)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\n\t\tclient := NewSignerClient(conn)\n\t\tresp, err := client.SignOutputRaw(ctx, req)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\n\t\trespBytes, err := marshaler.Marshal(resp)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\t\tcallback(string(respBytes), nil)\n\t}\n\n\tregistry[\"signrpc.Signer.ComputeInputScript\"] = func(ctx context.Context,\n\t\tconn *grpc.ClientConn, reqJSON string, callback func(string, error)) {\n\n\t\treq := &SignReq{}\n\t\terr := marshaler.Unmarshal([]byte(reqJSON), req)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\n\t\tclient := NewSignerClient(conn)\n\t\tresp, err := client.ComputeInputScript(ctx, req)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\n\t\trespBytes, err := marshaler.Marshal(resp)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\t\tcallback(string(respBytes), nil)\n\t}\n\n\tregistry[\"signrpc.Signer.SignMessage\"] = func(ctx context.Context,\n\t\tconn *grpc.ClientConn, reqJSON string, callback func(string, error)) {\n\n\t\treq := &SignMessageReq{}\n\t\terr := marshaler.Unmarshal([]byte(reqJSON), req)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\n\t\tclient := NewSignerClient(conn)\n\t\tresp, err := client.SignMessage(ctx, req)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\n\t\trespBytes, err := marshaler.Marshal(resp)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\t\tcallback(string(respBytes), nil)\n\t}\n\n\tregistry[\"signrpc.Signer.VerifyMessage\"] = func(ctx context.Context,\n\t\tconn *grpc.ClientConn, reqJSON string, callback func(string, error)) {\n\n\t\treq := &VerifyMessageReq{}\n\t\terr := marshaler.Unmarshal([]byte(reqJSON), req)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\n\t\tclient := NewSignerClient(conn)\n\t\tresp, err := client.VerifyMessage(ctx, req)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\n\t\trespBytes, err := marshaler.Marshal(resp)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\t\tcallback(string(respBytes), nil)\n\t}\n\n\tregistry[\"signrpc.Signer.DeriveSharedKey\"] = func(ctx context.Context,\n\t\tconn *grpc.ClientConn, reqJSON string, callback func(string, error)) {\n\n\t\treq := &SharedKeyRequest{}\n\t\terr := marshaler.Unmarshal([]byte(reqJSON), req)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\n\t\tclient := NewSignerClient(conn)\n\t\tresp, err := client.DeriveSharedKey(ctx, req)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\n\t\trespBytes, err := marshaler.Marshal(resp)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\t\tcallback(string(respBytes), nil)\n\t}\n\n\tregistry[\"signrpc.Signer.MuSig2CombineKeys\"] = func(ctx context.Context,\n\t\tconn *grpc.ClientConn, reqJSON string, callback func(string, error)) {\n\n\t\treq := &MuSig2CombineKeysRequest{}\n\t\terr := marshaler.Unmarshal([]byte(reqJSON), req)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\n\t\tclient := NewSignerClient(conn)\n\t\tresp, err := client.MuSig2CombineKeys(ctx, req)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\n\t\trespBytes, err := marshaler.Marshal(resp)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\t\tcallback(string(respBytes), nil)\n\t}\n\n\tregistry[\"signrpc.Signer.MuSig2CreateSession\"] = func(ctx context.Context,\n\t\tconn *grpc.ClientConn, reqJSON string, callback func(string, error)) {\n\n\t\treq := &MuSig2SessionRequest{}\n\t\terr := marshaler.Unmarshal([]byte(reqJSON), req)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\n\t\tclient := NewSignerClient(conn)\n\t\tresp, err := client.MuSig2CreateSession(ctx, req)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\n\t\trespBytes, err := marshaler.Marshal(resp)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\t\tcallback(string(respBytes), nil)\n\t}\n\n\tregistry[\"signrpc.Signer.MuSig2RegisterNonces\"] = func(ctx context.Context,\n\t\tconn *grpc.ClientConn, reqJSON string, callback func(string, error)) {\n\n\t\treq := &MuSig2RegisterNoncesRequest{}\n\t\terr := marshaler.Unmarshal([]byte(reqJSON), req)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\n\t\tclient := NewSignerClient(conn)\n\t\tresp, err := client.MuSig2RegisterNonces(ctx, req)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\n\t\trespBytes, err := marshaler.Marshal(resp)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\t\tcallback(string(respBytes), nil)\n\t}\n\n\tregistry[\"signrpc.Signer.MuSig2Sign\"] = func(ctx context.Context,\n\t\tconn *grpc.ClientConn, reqJSON string, callback func(string, error)) {\n\n\t\treq := &MuSig2SignRequest{}\n\t\terr := marshaler.Unmarshal([]byte(reqJSON), req)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\n\t\tclient := NewSignerClient(conn)\n\t\tresp, err := client.MuSig2Sign(ctx, req)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\n\t\trespBytes, err := marshaler.Marshal(resp)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\t\tcallback(string(respBytes), nil)\n\t}\n\n\tregistry[\"signrpc.Signer.MuSig2CombineSig\"] = func(ctx context.Context,\n\t\tconn *grpc.ClientConn, reqJSON string, callback func(string, error)) {\n\n\t\treq := &MuSig2CombineSigRequest{}\n\t\terr := marshaler.Unmarshal([]byte(reqJSON), req)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\n\t\tclient := NewSignerClient(conn)\n\t\tresp, err := client.MuSig2CombineSig(ctx, req)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\n\t\trespBytes, err := marshaler.Marshal(resp)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\t\tcallback(string(respBytes), nil)\n\t}\n\n\tregistry[\"signrpc.Signer.MuSig2Cleanup\"] = func(ctx context.Context,\n\t\tconn *grpc.ClientConn, reqJSON string, callback func(string, error)) {\n\n\t\treq := &MuSig2CleanupRequest{}\n\t\terr := marshaler.Unmarshal([]byte(reqJSON), req)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\n\t\tclient := NewSignerClient(conn)\n\t\tresp, err := client.MuSig2Cleanup(ctx, req)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\n\t\trespBytes, err := marshaler.Marshal(resp)\n\t\tif err != nil {\n\t\t\tcallback(\"\", err)\n\t\t\treturn\n\t\t}\n\t\tcallback(string(respBytes), nil)\n\t}\n}\n",
      "length": 6014,
      "tokens": 691,
      "embedding": []
    }
  ]
}