{
  "filepath": "../implementations/go/lnd/lnrpc/signrpc/signer.pb.go",
  "package": "signrpc",
  "sections": [
    {
      "slug": "type SignMethod int32",
      "content": "type SignMethod int32\n\nconst (\n\t// Specifies that a SegWit v0 (p2wkh, np2wkh, p2wsh) input script should be\n\t// signed.\n\tSignMethod_SIGN_METHOD_WITNESS_V0 SignMethod = 0\n\t// Specifies that a SegWit v1 (p2tr) input should be signed by using the\n\t// BIP0086 method (commit to internal key only).\n\tSignMethod_SIGN_METHOD_TAPROOT_KEY_SPEND_BIP0086 SignMethod = 1\n\t// Specifies that a SegWit v1 (p2tr) input should be signed by using a given\n\t// taproot hash to commit to in addition to the internal key.\n\tSignMethod_SIGN_METHOD_TAPROOT_KEY_SPEND SignMethod = 2\n\t// Specifies that a SegWit v1 (p2tr) input should be spent using the script\n\t// path and that a specific leaf script should be signed for.\n\tSignMethod_SIGN_METHOD_TAPROOT_SCRIPT_SPEND SignMethod = 3\n)\n\n// Enum value maps for SignMethod.\nvar (\n\tSignMethod_name = map[int32]string{\n\t\t0: \"SIGN_METHOD_WITNESS_V0\",\n\t\t1: \"SIGN_METHOD_TAPROOT_KEY_SPEND_BIP0086\",\n\t\t2: \"SIGN_METHOD_TAPROOT_KEY_SPEND\",\n\t\t3: \"SIGN_METHOD_TAPROOT_SCRIPT_SPEND\",\n\t}\n\tSignMethod_value = map[string]int32{\n\t\t\"SIGN_METHOD_WITNESS_V0\":                0,\n\t\t\"SIGN_METHOD_TAPROOT_KEY_SPEND_BIP0086\": 1,\n\t\t\"SIGN_METHOD_TAPROOT_KEY_SPEND\":         2,\n\t\t\"SIGN_METHOD_TAPROOT_SCRIPT_SPEND\":      3,\n\t}\n)\n",
      "length": 1171,
      "tokens": 142,
      "embedding": []
    },
    {
      "slug": "func (x SignMethod) Enum() *SignMethod {",
      "content": "func (x SignMethod) Enum() *SignMethod {\n\tp := new(SignMethod)\n\t*p = x\n\treturn p\n}\n",
      "length": 38,
      "tokens": 9,
      "embedding": []
    },
    {
      "slug": "func (x SignMethod) String() string {",
      "content": "func (x SignMethod) String() string {\n\treturn protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))\n}\n",
      "length": 77,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (SignMethod) Descriptor() protoreflect.EnumDescriptor {",
      "content": "func (SignMethod) Descriptor() protoreflect.EnumDescriptor {\n\treturn file_signrpc_signer_proto_enumTypes[0].Descriptor()\n}\n",
      "length": 60,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (SignMethod) Type() protoreflect.EnumType {",
      "content": "func (SignMethod) Type() protoreflect.EnumType {\n\treturn &file_signrpc_signer_proto_enumTypes[0]\n}\n",
      "length": 48,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (x SignMethod) Number() protoreflect.EnumNumber {",
      "content": "func (x SignMethod) Number() protoreflect.EnumNumber {\n\treturn protoreflect.EnumNumber(x)\n}\n\n// Deprecated: Use SignMethod.Descriptor instead.",
      "length": 84,
      "tokens": 8,
      "embedding": []
    },
    {
      "slug": "func (SignMethod) EnumDescriptor() ([]byte, []int) {",
      "content": "func (SignMethod) EnumDescriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{0}\n}\n",
      "length": 58,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "type MuSig2Version int32",
      "content": "type MuSig2Version int32\n\nconst (\n\t// The default value on the RPC is zero for enums so we need to represent an\n\t// invalid/undefined version by default to make sure clients upgrade their\n\t// software to set the version explicitly.\n\tMuSig2Version_MUSIG2_VERSION_UNDEFINED MuSig2Version = 0\n\t// The version of MuSig2 that lnd 0.15.x shipped with, which corresponds to the\n\t// version v0.4.0 of the MuSig2 BIP draft.\n\tMuSig2Version_MUSIG2_VERSION_V040 MuSig2Version = 1\n\t// The current version of MuSig2 which corresponds to the version v1.0.0rc2 of\n\t// the MuSig2 BIP draft.\n\tMuSig2Version_MUSIG2_VERSION_V100RC2 MuSig2Version = 2\n)\n\n// Enum value maps for MuSig2Version.\nvar (\n\tMuSig2Version_name = map[int32]string{\n\t\t0: \"MUSIG2_VERSION_UNDEFINED\",\n\t\t1: \"MUSIG2_VERSION_V040\",\n\t\t2: \"MUSIG2_VERSION_V100RC2\",\n\t}\n\tMuSig2Version_value = map[string]int32{\n\t\t\"MUSIG2_VERSION_UNDEFINED\": 0,\n\t\t\"MUSIG2_VERSION_V040\":      1,\n\t\t\"MUSIG2_VERSION_V100RC2\":   2,\n\t}\n)\n",
      "length": 905,
      "tokens": 119,
      "embedding": []
    },
    {
      "slug": "func (x MuSig2Version) Enum() *MuSig2Version {",
      "content": "func (x MuSig2Version) Enum() *MuSig2Version {\n\tp := new(MuSig2Version)\n\t*p = x\n\treturn p\n}\n",
      "length": 41,
      "tokens": 9,
      "embedding": []
    },
    {
      "slug": "func (x MuSig2Version) String() string {",
      "content": "func (x MuSig2Version) String() string {\n\treturn protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))\n}\n",
      "length": 77,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (MuSig2Version) Descriptor() protoreflect.EnumDescriptor {",
      "content": "func (MuSig2Version) Descriptor() protoreflect.EnumDescriptor {\n\treturn file_signrpc_signer_proto_enumTypes[1].Descriptor()\n}\n",
      "length": 60,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (MuSig2Version) Type() protoreflect.EnumType {",
      "content": "func (MuSig2Version) Type() protoreflect.EnumType {\n\treturn &file_signrpc_signer_proto_enumTypes[1]\n}\n",
      "length": 48,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (x MuSig2Version) Number() protoreflect.EnumNumber {",
      "content": "func (x MuSig2Version) Number() protoreflect.EnumNumber {\n\treturn protoreflect.EnumNumber(x)\n}\n\n// Deprecated: Use MuSig2Version.Descriptor instead.",
      "length": 87,
      "tokens": 8,
      "embedding": []
    },
    {
      "slug": "func (MuSig2Version) EnumDescriptor() ([]byte, []int) {",
      "content": "func (MuSig2Version) EnumDescriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{1}\n}\n",
      "length": 58,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "type KeyLocator struct {",
      "content": "type KeyLocator struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// The family of key being identified.\n\tKeyFamily int32 `protobuf:\"varint,1,opt,name=key_family,json=keyFamily,proto3\" json:\"key_family,omitempty\"`\n\t// The precise index of the key being identified.\n\tKeyIndex int32 `protobuf:\"varint,2,opt,name=key_index,json=keyIndex,proto3\" json:\"key_index,omitempty\"`\n}\n",
      "length": 411,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (x *KeyLocator) Reset() {",
      "content": "func (x *KeyLocator) Reset() {\n\t*x = KeyLocator{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[0]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 177,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *KeyLocator) String() string {",
      "content": "func (x *KeyLocator) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*KeyLocator) ProtoMessage() {}",
      "content": "func (*KeyLocator) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *KeyLocator) ProtoReflect() protoreflect.Message {",
      "content": "func (x *KeyLocator) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[0]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use KeyLocator.ProtoReflect.Descriptor instead.",
      "length": 304,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*KeyLocator) Descriptor() ([]byte, []int) {",
      "content": "func (*KeyLocator) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{0}\n}\n",
      "length": 58,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *KeyLocator) GetKeyFamily() int32 {",
      "content": "func (x *KeyLocator) GetKeyFamily() int32 {\n\tif x != nil {\n\t\treturn x.KeyFamily\n\t}\n\treturn 0\n}\n",
      "length": 46,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *KeyLocator) GetKeyIndex() int32 {",
      "content": "func (x *KeyLocator) GetKeyIndex() int32 {\n\tif x != nil {\n\t\treturn x.KeyIndex\n\t}\n\treturn 0\n}\n",
      "length": 45,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type KeyDescriptor struct {",
      "content": "type KeyDescriptor struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// The raw bytes of the public key in the key pair being identified. Either\n\t// this or the KeyLocator must be specified.\n\tRawKeyBytes []byte `protobuf:\"bytes,1,opt,name=raw_key_bytes,json=rawKeyBytes,proto3\" json:\"raw_key_bytes,omitempty\"`\n\t// The key locator that identifies which private key to use for signing.\n\t// Either this or the raw bytes of the target public key must be specified.\n\tKeyLoc *KeyLocator `protobuf:\"bytes,2,opt,name=key_loc,json=keyLoc,proto3\" json:\"key_loc,omitempty\"`\n}\n",
      "length": 599,
      "tokens": 66,
      "embedding": []
    },
    {
      "slug": "func (x *KeyDescriptor) Reset() {",
      "content": "func (x *KeyDescriptor) Reset() {\n\t*x = KeyDescriptor{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[1]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 180,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *KeyDescriptor) String() string {",
      "content": "func (x *KeyDescriptor) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*KeyDescriptor) ProtoMessage() {}",
      "content": "func (*KeyDescriptor) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *KeyDescriptor) ProtoReflect() protoreflect.Message {",
      "content": "func (x *KeyDescriptor) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[1]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use KeyDescriptor.ProtoReflect.Descriptor instead.",
      "length": 307,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*KeyDescriptor) Descriptor() ([]byte, []int) {",
      "content": "func (*KeyDescriptor) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{1}\n}\n",
      "length": 58,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *KeyDescriptor) GetRawKeyBytes() []byte {",
      "content": "func (x *KeyDescriptor) GetRawKeyBytes() []byte {\n\tif x != nil {\n\t\treturn x.RawKeyBytes\n\t}\n\treturn nil\n}\n",
      "length": 50,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *KeyDescriptor) GetKeyLoc() *KeyLocator {",
      "content": "func (x *KeyDescriptor) GetKeyLoc() *KeyLocator {\n\tif x != nil {\n\t\treturn x.KeyLoc\n\t}\n\treturn nil\n}\n",
      "length": 45,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type TxOut struct {",
      "content": "type TxOut struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// The value of the output being spent.\n\tValue int64 `protobuf:\"varint,1,opt,name=value,proto3\" json:\"value,omitempty\"`\n\t// The script of the output being spent.\n\tPkScript []byte `protobuf:\"bytes,2,opt,name=pk_script,json=pkScript,proto3\" json:\"pk_script,omitempty\"`\n}\n",
      "length": 374,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (x *TxOut) Reset() {",
      "content": "func (x *TxOut) Reset() {\n\t*x = TxOut{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[2]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 172,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *TxOut) String() string {",
      "content": "func (x *TxOut) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*TxOut) ProtoMessage() {}",
      "content": "func (*TxOut) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *TxOut) ProtoReflect() protoreflect.Message {",
      "content": "func (x *TxOut) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[2]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use TxOut.ProtoReflect.Descriptor instead.",
      "length": 299,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*TxOut) Descriptor() ([]byte, []int) {",
      "content": "func (*TxOut) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{2}\n}\n",
      "length": 58,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *TxOut) GetValue() int64 {",
      "content": "func (x *TxOut) GetValue() int64 {\n\tif x != nil {\n\t\treturn x.Value\n\t}\n\treturn 0\n}\n",
      "length": 42,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *TxOut) GetPkScript() []byte {",
      "content": "func (x *TxOut) GetPkScript() []byte {\n\tif x != nil {\n\t\treturn x.PkScript\n\t}\n\treturn nil\n}\n",
      "length": 47,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type SignDescriptor struct {",
      "content": "type SignDescriptor struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// A descriptor that precisely describes *which* key to use for signing. This\n\t// may provide the raw public key directly, or require the Signer to re-derive\n\t// the key according to the populated derivation path.\n\t//\n\t// Note that if the key descriptor was obtained through walletrpc.DeriveKey,\n\t// then the key locator MUST always be provided, since the derived keys are not\n\t// persisted unlike with DeriveNextKey.\n\tKeyDesc *KeyDescriptor `protobuf:\"bytes,1,opt,name=key_desc,json=keyDesc,proto3\" json:\"key_desc,omitempty\"`\n\t// A scalar value that will be added to the private key corresponding to the\n\t// above public key to obtain the private key to be used to sign this input.\n\t// This value is typically derived via the following computation:\n\t//\n\t// derivedKey = privkey + sha256(perCommitmentPoint || pubKey) mod N\n\tSingleTweak []byte `protobuf:\"bytes,2,opt,name=single_tweak,json=singleTweak,proto3\" json:\"single_tweak,omitempty\"`\n\t// A private key that will be used in combination with its corresponding\n\t// private key to derive the private key that is to be used to sign the target\n\t// input. Within the Lightning protocol, this value is typically the\n\t// commitment secret from a previously revoked commitment transaction. This\n\t// value is in combination with two hash values, and the original private key\n\t// to derive the private key to be used when signing.\n\t//\n\t// k = (privKey*sha256(pubKey || tweakPub) +\n\t// tweakPriv*sha256(tweakPub || pubKey)) mod N\n\tDoubleTweak []byte `protobuf:\"bytes,3,opt,name=double_tweak,json=doubleTweak,proto3\" json:\"double_tweak,omitempty\"`\n\t// The 32 byte input to the taproot tweak derivation that is used to derive\n\t// the output key from an internal key: outputKey = internalKey +\n\t// tagged_hash(\"tapTweak\", internalKey || tapTweak).\n\t//\n\t// When doing a BIP 86 spend, this field can be an empty byte slice.\n\t//\n\t// When doing a normal key path spend, with the output key committing to an\n\t// actual script root, then this field should be: the tapscript root hash.\n\tTapTweak []byte `protobuf:\"bytes,10,opt,name=tap_tweak,json=tapTweak,proto3\" json:\"tap_tweak,omitempty\"`\n\t// The full script required to properly redeem the output. This field will\n\t// only be populated if a p2tr, p2wsh or a p2sh output is being signed. If a\n\t// taproot script path spend is being attempted, then this should be the raw\n\t// leaf script.\n\tWitnessScript []byte `protobuf:\"bytes,4,opt,name=witness_script,json=witnessScript,proto3\" json:\"witness_script,omitempty\"`\n\t// A description of the output being spent. The value and script MUST be\n\t// provided.\n\tOutput *TxOut `protobuf:\"bytes,5,opt,name=output,proto3\" json:\"output,omitempty\"`\n\t// The target sighash type that should be used when generating the final\n\t// sighash, and signature.\n\tSighash uint32 `protobuf:\"varint,7,opt,name=sighash,proto3\" json:\"sighash,omitempty\"`\n\t// The target input within the transaction that should be signed.\n\tInputIndex int32 `protobuf:\"varint,8,opt,name=input_index,json=inputIndex,proto3\" json:\"input_index,omitempty\"`\n\t// The sign method specifies how the input should be signed. Depending on the\n\t// method, either the tap_tweak, witness_script or both need to be specified.\n\t// Defaults to SegWit v0 signing to be backward compatible with older RPC\n\t// clients.\n\tSignMethod SignMethod `protobuf:\"varint,9,opt,name=sign_method,json=signMethod,proto3,enum=signrpc.SignMethod\" json:\"sign_method,omitempty\"`\n}\n",
      "length": 3488,
      "tokens": 462,
      "embedding": []
    },
    {
      "slug": "func (x *SignDescriptor) Reset() {",
      "content": "func (x *SignDescriptor) Reset() {\n\t*x = SignDescriptor{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[3]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 181,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *SignDescriptor) String() string {",
      "content": "func (x *SignDescriptor) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*SignDescriptor) ProtoMessage() {}",
      "content": "func (*SignDescriptor) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *SignDescriptor) ProtoReflect() protoreflect.Message {",
      "content": "func (x *SignDescriptor) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[3]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use SignDescriptor.ProtoReflect.Descriptor instead.",
      "length": 308,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*SignDescriptor) Descriptor() ([]byte, []int) {",
      "content": "func (*SignDescriptor) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{3}\n}\n",
      "length": 58,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *SignDescriptor) GetKeyDesc() *KeyDescriptor {",
      "content": "func (x *SignDescriptor) GetKeyDesc() *KeyDescriptor {\n\tif x != nil {\n\t\treturn x.KeyDesc\n\t}\n\treturn nil\n}\n",
      "length": 46,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *SignDescriptor) GetSingleTweak() []byte {",
      "content": "func (x *SignDescriptor) GetSingleTweak() []byte {\n\tif x != nil {\n\t\treturn x.SingleTweak\n\t}\n\treturn nil\n}\n",
      "length": 50,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *SignDescriptor) GetDoubleTweak() []byte {",
      "content": "func (x *SignDescriptor) GetDoubleTweak() []byte {\n\tif x != nil {\n\t\treturn x.DoubleTweak\n\t}\n\treturn nil\n}\n",
      "length": 50,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *SignDescriptor) GetTapTweak() []byte {",
      "content": "func (x *SignDescriptor) GetTapTweak() []byte {\n\tif x != nil {\n\t\treturn x.TapTweak\n\t}\n\treturn nil\n}\n",
      "length": 47,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *SignDescriptor) GetWitnessScript() []byte {",
      "content": "func (x *SignDescriptor) GetWitnessScript() []byte {\n\tif x != nil {\n\t\treturn x.WitnessScript\n\t}\n\treturn nil\n}\n",
      "length": 52,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *SignDescriptor) GetOutput() *TxOut {",
      "content": "func (x *SignDescriptor) GetOutput() *TxOut {\n\tif x != nil {\n\t\treturn x.Output\n\t}\n\treturn nil\n}\n",
      "length": 45,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *SignDescriptor) GetSighash() uint32 {",
      "content": "func (x *SignDescriptor) GetSighash() uint32 {\n\tif x != nil {\n\t\treturn x.Sighash\n\t}\n\treturn 0\n}\n",
      "length": 44,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *SignDescriptor) GetInputIndex() int32 {",
      "content": "func (x *SignDescriptor) GetInputIndex() int32 {\n\tif x != nil {\n\t\treturn x.InputIndex\n\t}\n\treturn 0\n}\n",
      "length": 47,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *SignDescriptor) GetSignMethod() SignMethod {",
      "content": "func (x *SignDescriptor) GetSignMethod() SignMethod {\n\tif x != nil {\n\t\treturn x.SignMethod\n\t}\n\treturn SignMethod_SIGN_METHOD_WITNESS_V0\n}\n",
      "length": 79,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type SignReq struct {",
      "content": "type SignReq struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// The raw bytes of the transaction to be signed.\n\tRawTxBytes []byte `protobuf:\"bytes,1,opt,name=raw_tx_bytes,json=rawTxBytes,proto3\" json:\"raw_tx_bytes,omitempty\"`\n\t// A set of sign descriptors, for each input to be signed.\n\tSignDescs []*SignDescriptor `protobuf:\"bytes,2,rep,name=sign_descs,json=signDescs,proto3\" json:\"sign_descs,omitempty\"`\n\t// The full list of UTXO information for each of the inputs being spent. This\n\t// is required when spending one or more taproot (SegWit v1) outputs.\n\tPrevOutputs []*TxOut `protobuf:\"bytes,3,rep,name=prev_outputs,json=prevOutputs,proto3\" json:\"prev_outputs,omitempty\"`\n}\n",
      "length": 718,
      "tokens": 68,
      "embedding": []
    },
    {
      "slug": "func (x *SignReq) Reset() {",
      "content": "func (x *SignReq) Reset() {\n\t*x = SignReq{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[4]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 174,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *SignReq) String() string {",
      "content": "func (x *SignReq) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*SignReq) ProtoMessage() {}",
      "content": "func (*SignReq) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *SignReq) ProtoReflect() protoreflect.Message {",
      "content": "func (x *SignReq) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[4]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use SignReq.ProtoReflect.Descriptor instead.",
      "length": 301,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*SignReq) Descriptor() ([]byte, []int) {",
      "content": "func (*SignReq) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{4}\n}\n",
      "length": 58,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *SignReq) GetRawTxBytes() []byte {",
      "content": "func (x *SignReq) GetRawTxBytes() []byte {\n\tif x != nil {\n\t\treturn x.RawTxBytes\n\t}\n\treturn nil\n}\n",
      "length": 49,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *SignReq) GetSignDescs() []*SignDescriptor {",
      "content": "func (x *SignReq) GetSignDescs() []*SignDescriptor {\n\tif x != nil {\n\t\treturn x.SignDescs\n\t}\n\treturn nil\n}\n",
      "length": 48,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *SignReq) GetPrevOutputs() []*TxOut {",
      "content": "func (x *SignReq) GetPrevOutputs() []*TxOut {\n\tif x != nil {\n\t\treturn x.PrevOutputs\n\t}\n\treturn nil\n}\n",
      "length": 50,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type SignResp struct {",
      "content": "type SignResp struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// A set of signatures realized in a fixed 64-byte format ordered in ascending\n\t// input order.\n\tRawSigs [][]byte `protobuf:\"bytes,1,rep,name=raw_sigs,json=rawSigs,proto3\" json:\"raw_sigs,omitempty\"`\n}\n",
      "length": 307,
      "tokens": 28,
      "embedding": []
    },
    {
      "slug": "func (x *SignResp) Reset() {",
      "content": "func (x *SignResp) Reset() {\n\t*x = SignResp{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[5]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 175,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *SignResp) String() string {",
      "content": "func (x *SignResp) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*SignResp) ProtoMessage() {}",
      "content": "func (*SignResp) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *SignResp) ProtoReflect() protoreflect.Message {",
      "content": "func (x *SignResp) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[5]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use SignResp.ProtoReflect.Descriptor instead.",
      "length": 302,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*SignResp) Descriptor() ([]byte, []int) {",
      "content": "func (*SignResp) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{5}\n}\n",
      "length": 58,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *SignResp) GetRawSigs() [][]byte {",
      "content": "func (x *SignResp) GetRawSigs() [][]byte {\n\tif x != nil {\n\t\treturn x.RawSigs\n\t}\n\treturn nil\n}\n",
      "length": 46,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type InputScript struct {",
      "content": "type InputScript struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// The serializes witness stack for the specified input.\n\tWitness [][]byte `protobuf:\"bytes,1,rep,name=witness,proto3\" json:\"witness,omitempty\"`\n\t// The optional sig script for the specified witness that will only be set if\n\t// the input specified is a nested p2sh witness program.\n\tSigScript []byte `protobuf:\"bytes,2,opt,name=sig_script,json=sigScript,proto3\" json:\"sig_script,omitempty\"`\n}\n",
      "length": 497,
      "tokens": 49,
      "embedding": []
    },
    {
      "slug": "func (x *InputScript) Reset() {",
      "content": "func (x *InputScript) Reset() {\n\t*x = InputScript{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[6]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 178,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *InputScript) String() string {",
      "content": "func (x *InputScript) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*InputScript) ProtoMessage() {}",
      "content": "func (*InputScript) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *InputScript) ProtoReflect() protoreflect.Message {",
      "content": "func (x *InputScript) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[6]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use InputScript.ProtoReflect.Descriptor instead.",
      "length": 305,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*InputScript) Descriptor() ([]byte, []int) {",
      "content": "func (*InputScript) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{6}\n}\n",
      "length": 58,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *InputScript) GetWitness() [][]byte {",
      "content": "func (x *InputScript) GetWitness() [][]byte {\n\tif x != nil {\n\t\treturn x.Witness\n\t}\n\treturn nil\n}\n",
      "length": 46,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *InputScript) GetSigScript() []byte {",
      "content": "func (x *InputScript) GetSigScript() []byte {\n\tif x != nil {\n\t\treturn x.SigScript\n\t}\n\treturn nil\n}\n",
      "length": 48,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type InputScriptResp struct {",
      "content": "type InputScriptResp struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// The set of fully valid input scripts requested.\n\tInputScripts []*InputScript `protobuf:\"bytes,1,rep,name=input_scripts,json=inputScripts,proto3\" json:\"input_scripts,omitempty\"`\n}\n",
      "length": 289,
      "tokens": 20,
      "embedding": []
    },
    {
      "slug": "func (x *InputScriptResp) Reset() {",
      "content": "func (x *InputScriptResp) Reset() {\n\t*x = InputScriptResp{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[7]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 182,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *InputScriptResp) String() string {",
      "content": "func (x *InputScriptResp) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*InputScriptResp) ProtoMessage() {}",
      "content": "func (*InputScriptResp) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *InputScriptResp) ProtoReflect() protoreflect.Message {",
      "content": "func (x *InputScriptResp) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[7]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use InputScriptResp.ProtoReflect.Descriptor instead.",
      "length": 309,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*InputScriptResp) Descriptor() ([]byte, []int) {",
      "content": "func (*InputScriptResp) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{7}\n}\n",
      "length": 58,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *InputScriptResp) GetInputScripts() []*InputScript {",
      "content": "func (x *InputScriptResp) GetInputScripts() []*InputScript {\n\tif x != nil {\n\t\treturn x.InputScripts\n\t}\n\treturn nil\n}\n",
      "length": 51,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type SignMessageReq struct {",
      "content": "type SignMessageReq struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// The message to be signed. When using REST, this field must be encoded as\n\t// base64.\n\tMsg []byte `protobuf:\"bytes,1,opt,name=msg,proto3\" json:\"msg,omitempty\"`\n\t// The key locator that identifies which key to use for signing.\n\tKeyLoc *KeyLocator `protobuf:\"bytes,2,opt,name=key_loc,json=keyLoc,proto3\" json:\"key_loc,omitempty\"`\n\t// Double-SHA256 hash instead of just the default single round.\n\tDoubleHash bool `protobuf:\"varint,3,opt,name=double_hash,json=doubleHash,proto3\" json:\"double_hash,omitempty\"`\n\t// Use the compact (pubkey recoverable) format instead of the raw lnwire\n\t// format. This option cannot be used with Schnorr signatures.\n\tCompactSig bool `protobuf:\"varint,4,opt,name=compact_sig,json=compactSig,proto3\" json:\"compact_sig,omitempty\"`\n\t// Use Schnorr signature. This option cannot be used with compact format.\n\tSchnorrSig bool `protobuf:\"varint,5,opt,name=schnorr_sig,json=schnorrSig,proto3\" json:\"schnorr_sig,omitempty\"`\n\t// The optional Taproot tweak bytes to apply to the private key before creating\n\t// a Schnorr signature. The private key is tweaked as described in BIP-341:\n\t// privKey + h_tapTweak(internalKey || tapTweak)\n\tSchnorrSigTapTweak []byte `protobuf:\"bytes,6,opt,name=schnorr_sig_tap_tweak,json=schnorrSigTapTweak,proto3\" json:\"schnorr_sig_tap_tweak,omitempty\"`\n}\n",
      "length": 1396,
      "tokens": 137,
      "embedding": []
    },
    {
      "slug": "func (x *SignMessageReq) Reset() {",
      "content": "func (x *SignMessageReq) Reset() {\n\t*x = SignMessageReq{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[8]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 181,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *SignMessageReq) String() string {",
      "content": "func (x *SignMessageReq) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*SignMessageReq) ProtoMessage() {}",
      "content": "func (*SignMessageReq) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *SignMessageReq) ProtoReflect() protoreflect.Message {",
      "content": "func (x *SignMessageReq) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[8]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use SignMessageReq.ProtoReflect.Descriptor instead.",
      "length": 308,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*SignMessageReq) Descriptor() ([]byte, []int) {",
      "content": "func (*SignMessageReq) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{8}\n}\n",
      "length": 58,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *SignMessageReq) GetMsg() []byte {",
      "content": "func (x *SignMessageReq) GetMsg() []byte {\n\tif x != nil {\n\t\treturn x.Msg\n\t}\n\treturn nil\n}\n",
      "length": 42,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *SignMessageReq) GetKeyLoc() *KeyLocator {",
      "content": "func (x *SignMessageReq) GetKeyLoc() *KeyLocator {\n\tif x != nil {\n\t\treturn x.KeyLoc\n\t}\n\treturn nil\n}\n",
      "length": 45,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *SignMessageReq) GetDoubleHash() bool {",
      "content": "func (x *SignMessageReq) GetDoubleHash() bool {\n\tif x != nil {\n\t\treturn x.DoubleHash\n\t}\n\treturn false\n}\n",
      "length": 51,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *SignMessageReq) GetCompactSig() bool {",
      "content": "func (x *SignMessageReq) GetCompactSig() bool {\n\tif x != nil {\n\t\treturn x.CompactSig\n\t}\n\treturn false\n}\n",
      "length": 51,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *SignMessageReq) GetSchnorrSig() bool {",
      "content": "func (x *SignMessageReq) GetSchnorrSig() bool {\n\tif x != nil {\n\t\treturn x.SchnorrSig\n\t}\n\treturn false\n}\n",
      "length": 51,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *SignMessageReq) GetSchnorrSigTapTweak() []byte {",
      "content": "func (x *SignMessageReq) GetSchnorrSigTapTweak() []byte {\n\tif x != nil {\n\t\treturn x.SchnorrSigTapTweak\n\t}\n\treturn nil\n}\n",
      "length": 57,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type SignMessageResp struct {",
      "content": "type SignMessageResp struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// The signature for the given message in the fixed-size LN wire format.\n\tSignature []byte `protobuf:\"bytes,1,opt,name=signature,proto3\" json:\"signature,omitempty\"`\n}\n",
      "length": 274,
      "tokens": 24,
      "embedding": []
    },
    {
      "slug": "func (x *SignMessageResp) Reset() {",
      "content": "func (x *SignMessageResp) Reset() {\n\t*x = SignMessageResp{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[9]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 182,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *SignMessageResp) String() string {",
      "content": "func (x *SignMessageResp) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*SignMessageResp) ProtoMessage() {}",
      "content": "func (*SignMessageResp) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *SignMessageResp) ProtoReflect() protoreflect.Message {",
      "content": "func (x *SignMessageResp) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[9]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use SignMessageResp.ProtoReflect.Descriptor instead.",
      "length": 309,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*SignMessageResp) Descriptor() ([]byte, []int) {",
      "content": "func (*SignMessageResp) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{9}\n}\n",
      "length": 58,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *SignMessageResp) GetSignature() []byte {",
      "content": "func (x *SignMessageResp) GetSignature() []byte {\n\tif x != nil {\n\t\treturn x.Signature\n\t}\n\treturn nil\n}\n",
      "length": 48,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type VerifyMessageReq struct {",
      "content": "type VerifyMessageReq struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// The message over which the signature is to be verified. When using\n\t// REST, this field must be encoded as base64.\n\tMsg []byte `protobuf:\"bytes,1,opt,name=msg,proto3\" json:\"msg,omitempty\"`\n\t// The fixed-size LN wire encoded signature to be verified over the given\n\t// message. When using REST, this field must be encoded as base64.\n\tSignature []byte `protobuf:\"bytes,2,opt,name=signature,proto3\" json:\"signature,omitempty\"`\n\t// The public key the signature has to be valid for. When using REST, this\n\t// field must be encoded as base64. If the is_schnorr_sig option is true, then\n\t// the public key is expected to be in the 32-byte x-only serialization\n\t// according to BIP-340.\n\tPubkey []byte `protobuf:\"bytes,3,opt,name=pubkey,proto3\" json:\"pubkey,omitempty\"`\n\t// Specifies if the signature is a Schnorr signature.\n\tIsSchnorrSig bool `protobuf:\"varint,4,opt,name=is_schnorr_sig,json=isSchnorrSig,proto3\" json:\"is_schnorr_sig,omitempty\"`\n}\n",
      "length": 1040,
      "tokens": 125,
      "embedding": []
    },
    {
      "slug": "func (x *VerifyMessageReq) Reset() {",
      "content": "func (x *VerifyMessageReq) Reset() {\n\t*x = VerifyMessageReq{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[10]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 184,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *VerifyMessageReq) String() string {",
      "content": "func (x *VerifyMessageReq) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*VerifyMessageReq) ProtoMessage() {}",
      "content": "func (*VerifyMessageReq) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *VerifyMessageReq) ProtoReflect() protoreflect.Message {",
      "content": "func (x *VerifyMessageReq) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[10]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use VerifyMessageReq.ProtoReflect.Descriptor instead.",
      "length": 311,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*VerifyMessageReq) Descriptor() ([]byte, []int) {",
      "content": "func (*VerifyMessageReq) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{10}\n}\n",
      "length": 59,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *VerifyMessageReq) GetMsg() []byte {",
      "content": "func (x *VerifyMessageReq) GetMsg() []byte {\n\tif x != nil {\n\t\treturn x.Msg\n\t}\n\treturn nil\n}\n",
      "length": 42,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *VerifyMessageReq) GetSignature() []byte {",
      "content": "func (x *VerifyMessageReq) GetSignature() []byte {\n\tif x != nil {\n\t\treturn x.Signature\n\t}\n\treturn nil\n}\n",
      "length": 48,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *VerifyMessageReq) GetPubkey() []byte {",
      "content": "func (x *VerifyMessageReq) GetPubkey() []byte {\n\tif x != nil {\n\t\treturn x.Pubkey\n\t}\n\treturn nil\n}\n",
      "length": 45,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *VerifyMessageReq) GetIsSchnorrSig() bool {",
      "content": "func (x *VerifyMessageReq) GetIsSchnorrSig() bool {\n\tif x != nil {\n\t\treturn x.IsSchnorrSig\n\t}\n\treturn false\n}\n",
      "length": 53,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type VerifyMessageResp struct {",
      "content": "type VerifyMessageResp struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// Whether the signature was valid over the given message.\n\tValid bool `protobuf:\"varint,1,opt,name=valid,proto3\" json:\"valid,omitempty\"`\n}\n",
      "length": 247,
      "tokens": 21,
      "embedding": []
    },
    {
      "slug": "func (x *VerifyMessageResp) Reset() {",
      "content": "func (x *VerifyMessageResp) Reset() {\n\t*x = VerifyMessageResp{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[11]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 185,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *VerifyMessageResp) String() string {",
      "content": "func (x *VerifyMessageResp) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*VerifyMessageResp) ProtoMessage() {}",
      "content": "func (*VerifyMessageResp) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *VerifyMessageResp) ProtoReflect() protoreflect.Message {",
      "content": "func (x *VerifyMessageResp) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[11]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use VerifyMessageResp.ProtoReflect.Descriptor instead.",
      "length": 312,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*VerifyMessageResp) Descriptor() ([]byte, []int) {",
      "content": "func (*VerifyMessageResp) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{11}\n}\n",
      "length": 59,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *VerifyMessageResp) GetValid() bool {",
      "content": "func (x *VerifyMessageResp) GetValid() bool {\n\tif x != nil {\n\t\treturn x.Valid\n\t}\n\treturn false\n}\n",
      "length": 46,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type SharedKeyRequest struct {",
      "content": "type SharedKeyRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// The ephemeral public key to use for the DH key derivation.\n\tEphemeralPubkey []byte `protobuf:\"bytes,1,opt,name=ephemeral_pubkey,json=ephemeralPubkey,proto3\" json:\"ephemeral_pubkey,omitempty\"`\n\t// Deprecated. The optional key locator of the local key that should be used.\n\t// If this parameter is not set then the node's identity private key will be\n\t// used.\n\t//\n\t// Deprecated: Do not use.\n\tKeyLoc *KeyLocator `protobuf:\"bytes,2,opt,name=key_loc,json=keyLoc,proto3\" json:\"key_loc,omitempty\"`\n\t// A key descriptor describes the key used for performing ECDH. Either a key\n\t// locator or a raw public key is expected, if neither is supplied, defaults to\n\t// the node's identity private key.\n\tKeyDesc *KeyDescriptor `protobuf:\"bytes,3,opt,name=key_desc,json=keyDesc,proto3\" json:\"key_desc,omitempty\"`\n}\n",
      "length": 900,
      "tokens": 103,
      "embedding": []
    },
    {
      "slug": "func (x *SharedKeyRequest) Reset() {",
      "content": "func (x *SharedKeyRequest) Reset() {\n\t*x = SharedKeyRequest{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[12]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 184,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *SharedKeyRequest) String() string {",
      "content": "func (x *SharedKeyRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*SharedKeyRequest) ProtoMessage() {}",
      "content": "func (*SharedKeyRequest) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *SharedKeyRequest) ProtoReflect() protoreflect.Message {",
      "content": "func (x *SharedKeyRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[12]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use SharedKeyRequest.ProtoReflect.Descriptor instead.",
      "length": 311,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*SharedKeyRequest) Descriptor() ([]byte, []int) {",
      "content": "func (*SharedKeyRequest) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{12}\n}\n",
      "length": 59,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *SharedKeyRequest) GetEphemeralPubkey() []byte {",
      "content": "func (x *SharedKeyRequest) GetEphemeralPubkey() []byte {\n\tif x != nil {\n\t\treturn x.EphemeralPubkey\n\t}\n\treturn nil\n}\n\n// Deprecated: Do not use.",
      "length": 80,
      "tokens": 16,
      "embedding": []
    },
    {
      "slug": "func (x *SharedKeyRequest) GetKeyLoc() *KeyLocator {",
      "content": "func (x *SharedKeyRequest) GetKeyLoc() *KeyLocator {\n\tif x != nil {\n\t\treturn x.KeyLoc\n\t}\n\treturn nil\n}\n",
      "length": 45,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *SharedKeyRequest) GetKeyDesc() *KeyDescriptor {",
      "content": "func (x *SharedKeyRequest) GetKeyDesc() *KeyDescriptor {\n\tif x != nil {\n\t\treturn x.KeyDesc\n\t}\n\treturn nil\n}\n",
      "length": 46,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type SharedKeyResponse struct {",
      "content": "type SharedKeyResponse struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// The shared public key, hashed with sha256.\n\tSharedKey []byte `protobuf:\"bytes,1,opt,name=shared_key,json=sharedKey,proto3\" json:\"shared_key,omitempty\"`\n}\n",
      "length": 264,
      "tokens": 19,
      "embedding": []
    },
    {
      "slug": "func (x *SharedKeyResponse) Reset() {",
      "content": "func (x *SharedKeyResponse) Reset() {\n\t*x = SharedKeyResponse{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[13]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 185,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *SharedKeyResponse) String() string {",
      "content": "func (x *SharedKeyResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*SharedKeyResponse) ProtoMessage() {}",
      "content": "func (*SharedKeyResponse) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *SharedKeyResponse) ProtoReflect() protoreflect.Message {",
      "content": "func (x *SharedKeyResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[13]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use SharedKeyResponse.ProtoReflect.Descriptor instead.",
      "length": 312,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*SharedKeyResponse) Descriptor() ([]byte, []int) {",
      "content": "func (*SharedKeyResponse) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{13}\n}\n",
      "length": 59,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *SharedKeyResponse) GetSharedKey() []byte {",
      "content": "func (x *SharedKeyResponse) GetSharedKey() []byte {\n\tif x != nil {\n\t\treturn x.SharedKey\n\t}\n\treturn nil\n}\n",
      "length": 48,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type TweakDesc struct {",
      "content": "type TweakDesc struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// Tweak is the 32-byte value that will modify the public key.\n\tTweak []byte `protobuf:\"bytes,1,opt,name=tweak,proto3\" json:\"tweak,omitempty\"`\n\t// Specifies if the target key should be converted to an x-only public key\n\t// before tweaking. If true, then the public key will be mapped to an x-only\n\t// key before the tweaking operation is applied.\n\tIsXOnly bool `protobuf:\"varint,2,opt,name=is_x_only,json=isXOnly,proto3\" json:\"is_x_only,omitempty\"`\n}\n",
      "length": 554,
      "tokens": 64,
      "embedding": []
    },
    {
      "slug": "func (x *TweakDesc) Reset() {",
      "content": "func (x *TweakDesc) Reset() {\n\t*x = TweakDesc{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[14]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 177,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *TweakDesc) String() string {",
      "content": "func (x *TweakDesc) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*TweakDesc) ProtoMessage() {}",
      "content": "func (*TweakDesc) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *TweakDesc) ProtoReflect() protoreflect.Message {",
      "content": "func (x *TweakDesc) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[14]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use TweakDesc.ProtoReflect.Descriptor instead.",
      "length": 304,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*TweakDesc) Descriptor() ([]byte, []int) {",
      "content": "func (*TweakDesc) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{14}\n}\n",
      "length": 59,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *TweakDesc) GetTweak() []byte {",
      "content": "func (x *TweakDesc) GetTweak() []byte {\n\tif x != nil {\n\t\treturn x.Tweak\n\t}\n\treturn nil\n}\n",
      "length": 44,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *TweakDesc) GetIsXOnly() bool {",
      "content": "func (x *TweakDesc) GetIsXOnly() bool {\n\tif x != nil {\n\t\treturn x.IsXOnly\n\t}\n\treturn false\n}\n",
      "length": 48,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type TaprootTweakDesc struct {",
      "content": "type TaprootTweakDesc struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// The root hash of the tapscript tree if a script path is committed to. If\n\t// the MuSig2 key put on chain doesn't also commit to a script path (BIP-0086\n\t// key spend only), then this needs to be empty and the key_spend_only field\n\t// below must be set to true. This is required because gRPC cannot\n\t// differentiate between a zero-size byte slice and a nil byte slice (both\n\t// would be serialized the same way). So the extra boolean is required.\n\tScriptRoot []byte `protobuf:\"bytes,1,opt,name=script_root,json=scriptRoot,proto3\" json:\"script_root,omitempty\"`\n\t// Indicates that the above script_root is expected to be empty because this\n\t// is a BIP-0086 key spend only commitment where only the internal key is\n\t// committed to instead of also including a script root hash.\n\tKeySpendOnly bool `protobuf:\"varint,2,opt,name=key_spend_only,json=keySpendOnly,proto3\" json:\"key_spend_only,omitempty\"`\n}\n",
      "length": 1001,
      "tokens": 137,
      "embedding": []
    },
    {
      "slug": "func (x *TaprootTweakDesc) Reset() {",
      "content": "func (x *TaprootTweakDesc) Reset() {\n\t*x = TaprootTweakDesc{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[15]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 184,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *TaprootTweakDesc) String() string {",
      "content": "func (x *TaprootTweakDesc) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*TaprootTweakDesc) ProtoMessage() {}",
      "content": "func (*TaprootTweakDesc) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *TaprootTweakDesc) ProtoReflect() protoreflect.Message {",
      "content": "func (x *TaprootTweakDesc) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[15]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use TaprootTweakDesc.ProtoReflect.Descriptor instead.",
      "length": 311,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*TaprootTweakDesc) Descriptor() ([]byte, []int) {",
      "content": "func (*TaprootTweakDesc) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{15}\n}\n",
      "length": 59,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *TaprootTweakDesc) GetScriptRoot() []byte {",
      "content": "func (x *TaprootTweakDesc) GetScriptRoot() []byte {\n\tif x != nil {\n\t\treturn x.ScriptRoot\n\t}\n\treturn nil\n}\n",
      "length": 49,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *TaprootTweakDesc) GetKeySpendOnly() bool {",
      "content": "func (x *TaprootTweakDesc) GetKeySpendOnly() bool {\n\tif x != nil {\n\t\treturn x.KeySpendOnly\n\t}\n\treturn false\n}\n",
      "length": 53,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type MuSig2CombineKeysRequest struct {",
      "content": "type MuSig2CombineKeysRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// A list of all public keys (serialized in 32-byte x-only format for v0.4.0\n\t// and 33-byte compressed format for v1.0.0rc2!) participating in the signing\n\t// session. The list will always be sorted lexicographically internally. This\n\t// must include the local key which is described by the above key_loc.\n\tAllSignerPubkeys [][]byte `protobuf:\"bytes,1,rep,name=all_signer_pubkeys,json=allSignerPubkeys,proto3\" json:\"all_signer_pubkeys,omitempty\"`\n\t// A series of optional generic tweaks to be applied to the the aggregated\n\t// public key.\n\tTweaks []*TweakDesc `protobuf:\"bytes,2,rep,name=tweaks,proto3\" json:\"tweaks,omitempty\"`\n\t// An optional taproot specific tweak that must be specified if the MuSig2\n\t// combined key will be used as the main taproot key of a taproot output\n\t// on-chain.\n\tTaprootTweak *TaprootTweakDesc `protobuf:\"bytes,3,opt,name=taproot_tweak,json=taprootTweak,proto3\" json:\"taproot_tweak,omitempty\"`\n\t// The mandatory version of the MuSig2 BIP draft to use. This is necessary to\n\t// differentiate between the changes that were made to the BIP while this\n\t// experimental RPC was already released. Some of those changes affect how the\n\t// combined key and nonces are created.\n\tVersion MuSig2Version `protobuf:\"varint,4,opt,name=version,proto3,enum=signrpc.MuSig2Version\" json:\"version,omitempty\"`\n}\n",
      "length": 1415,
      "tokens": 167,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineKeysRequest) Reset() {",
      "content": "func (x *MuSig2CombineKeysRequest) Reset() {\n\t*x = MuSig2CombineKeysRequest{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[16]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 192,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineKeysRequest) String() string {",
      "content": "func (x *MuSig2CombineKeysRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2CombineKeysRequest) ProtoMessage() {}",
      "content": "func (*MuSig2CombineKeysRequest) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineKeysRequest) ProtoReflect() protoreflect.Message {",
      "content": "func (x *MuSig2CombineKeysRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[16]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use MuSig2CombineKeysRequest.ProtoReflect.Descriptor instead.",
      "length": 319,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2CombineKeysRequest) Descriptor() ([]byte, []int) {",
      "content": "func (*MuSig2CombineKeysRequest) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{16}\n}\n",
      "length": 59,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineKeysRequest) GetAllSignerPubkeys() [][]byte {",
      "content": "func (x *MuSig2CombineKeysRequest) GetAllSignerPubkeys() [][]byte {\n\tif x != nil {\n\t\treturn x.AllSignerPubkeys\n\t}\n\treturn nil\n}\n",
      "length": 55,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineKeysRequest) GetTweaks() []*TweakDesc {",
      "content": "func (x *MuSig2CombineKeysRequest) GetTweaks() []*TweakDesc {\n\tif x != nil {\n\t\treturn x.Tweaks\n\t}\n\treturn nil\n}\n",
      "length": 45,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineKeysRequest) GetTaprootTweak() *TaprootTweakDesc {",
      "content": "func (x *MuSig2CombineKeysRequest) GetTaprootTweak() *TaprootTweakDesc {\n\tif x != nil {\n\t\treturn x.TaprootTweak\n\t}\n\treturn nil\n}\n",
      "length": 51,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineKeysRequest) GetVersion() MuSig2Version {",
      "content": "func (x *MuSig2CombineKeysRequest) GetVersion() MuSig2Version {\n\tif x != nil {\n\t\treturn x.Version\n\t}\n\treturn MuSig2Version_MUSIG2_VERSION_UNDEFINED\n}\n",
      "length": 81,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type MuSig2CombineKeysResponse struct {",
      "content": "type MuSig2CombineKeysResponse struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// The combined public key (in the 32-byte x-only format) with all tweaks\n\t// applied to it. If a taproot tweak is specified, this corresponds to the\n\t// taproot key that can be put into the on-chain output.\n\tCombinedKey []byte `protobuf:\"bytes,1,opt,name=combined_key,json=combinedKey,proto3\" json:\"combined_key,omitempty\"`\n\t// The raw combined public key (in the 32-byte x-only format) before any tweaks\n\t// are applied to it. If a taproot tweak is specified, this corresponds to the\n\t// internal key that needs to be put into the witness if the script spend path\n\t// is used.\n\tTaprootInternalKey []byte `protobuf:\"bytes,2,opt,name=taproot_internal_key,json=taprootInternalKey,proto3\" json:\"taproot_internal_key,omitempty\"`\n\t// The version of the MuSig2 BIP that was used to combine the keys.\n\tVersion MuSig2Version `protobuf:\"varint,4,opt,name=version,proto3,enum=signrpc.MuSig2Version\" json:\"version,omitempty\"`\n}\n",
      "length": 1016,
      "tokens": 119,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineKeysResponse) Reset() {",
      "content": "func (x *MuSig2CombineKeysResponse) Reset() {\n\t*x = MuSig2CombineKeysResponse{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[17]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 193,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineKeysResponse) String() string {",
      "content": "func (x *MuSig2CombineKeysResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2CombineKeysResponse) ProtoMessage() {}",
      "content": "func (*MuSig2CombineKeysResponse) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineKeysResponse) ProtoReflect() protoreflect.Message {",
      "content": "func (x *MuSig2CombineKeysResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[17]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use MuSig2CombineKeysResponse.ProtoReflect.Descriptor instead.",
      "length": 320,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2CombineKeysResponse) Descriptor() ([]byte, []int) {",
      "content": "func (*MuSig2CombineKeysResponse) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{17}\n}\n",
      "length": 59,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineKeysResponse) GetCombinedKey() []byte {",
      "content": "func (x *MuSig2CombineKeysResponse) GetCombinedKey() []byte {\n\tif x != nil {\n\t\treturn x.CombinedKey\n\t}\n\treturn nil\n}\n",
      "length": 50,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineKeysResponse) GetTaprootInternalKey() []byte {",
      "content": "func (x *MuSig2CombineKeysResponse) GetTaprootInternalKey() []byte {\n\tif x != nil {\n\t\treturn x.TaprootInternalKey\n\t}\n\treturn nil\n}\n",
      "length": 57,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineKeysResponse) GetVersion() MuSig2Version {",
      "content": "func (x *MuSig2CombineKeysResponse) GetVersion() MuSig2Version {\n\tif x != nil {\n\t\treturn x.Version\n\t}\n\treturn MuSig2Version_MUSIG2_VERSION_UNDEFINED\n}\n",
      "length": 81,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type MuSig2SessionRequest struct {",
      "content": "type MuSig2SessionRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// The key locator that identifies which key to use for signing.\n\tKeyLoc *KeyLocator `protobuf:\"bytes,1,opt,name=key_loc,json=keyLoc,proto3\" json:\"key_loc,omitempty\"`\n\t// A list of all public keys (serialized in 32-byte x-only format for v0.4.0\n\t// and 33-byte compressed format for v1.0.0rc2!) participating in the signing\n\t// session. The list will always be sorted lexicographically internally. This\n\t// must include the local key which is described by the above key_loc.\n\tAllSignerPubkeys [][]byte `protobuf:\"bytes,2,rep,name=all_signer_pubkeys,json=allSignerPubkeys,proto3\" json:\"all_signer_pubkeys,omitempty\"`\n\t// An optional list of all public nonces of other signing participants that\n\t// might already be known.\n\tOtherSignerPublicNonces [][]byte `protobuf:\"bytes,3,rep,name=other_signer_public_nonces,json=otherSignerPublicNonces,proto3\" json:\"other_signer_public_nonces,omitempty\"`\n\t// A series of optional generic tweaks to be applied to the the aggregated\n\t// public key.\n\tTweaks []*TweakDesc `protobuf:\"bytes,4,rep,name=tweaks,proto3\" json:\"tweaks,omitempty\"`\n\t// An optional taproot specific tweak that must be specified if the MuSig2\n\t// combined key will be used as the main taproot key of a taproot output\n\t// on-chain.\n\tTaprootTweak *TaprootTweakDesc `protobuf:\"bytes,5,opt,name=taproot_tweak,json=taprootTweak,proto3\" json:\"taproot_tweak,omitempty\"`\n\t// The mandatory version of the MuSig2 BIP draft to use. This is necessary to\n\t// differentiate between the changes that were made to the BIP while this\n\t// experimental RPC was already released. Some of those changes affect how the\n\t// combined key and nonces are created.\n\tVersion MuSig2Version `protobuf:\"varint,6,opt,name=version,proto3,enum=signrpc.MuSig2Version\" json:\"version,omitempty\"`\n}\n",
      "length": 1854,
      "tokens": 205,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SessionRequest) Reset() {",
      "content": "func (x *MuSig2SessionRequest) Reset() {\n\t*x = MuSig2SessionRequest{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[18]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 188,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SessionRequest) String() string {",
      "content": "func (x *MuSig2SessionRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2SessionRequest) ProtoMessage() {}",
      "content": "func (*MuSig2SessionRequest) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SessionRequest) ProtoReflect() protoreflect.Message {",
      "content": "func (x *MuSig2SessionRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[18]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use MuSig2SessionRequest.ProtoReflect.Descriptor instead.",
      "length": 315,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2SessionRequest) Descriptor() ([]byte, []int) {",
      "content": "func (*MuSig2SessionRequest) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{18}\n}\n",
      "length": 59,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SessionRequest) GetKeyLoc() *KeyLocator {",
      "content": "func (x *MuSig2SessionRequest) GetKeyLoc() *KeyLocator {\n\tif x != nil {\n\t\treturn x.KeyLoc\n\t}\n\treturn nil\n}\n",
      "length": 45,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SessionRequest) GetAllSignerPubkeys() [][]byte {",
      "content": "func (x *MuSig2SessionRequest) GetAllSignerPubkeys() [][]byte {\n\tif x != nil {\n\t\treturn x.AllSignerPubkeys\n\t}\n\treturn nil\n}\n",
      "length": 55,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SessionRequest) GetOtherSignerPublicNonces() [][]byte {",
      "content": "func (x *MuSig2SessionRequest) GetOtherSignerPublicNonces() [][]byte {\n\tif x != nil {\n\t\treturn x.OtherSignerPublicNonces\n\t}\n\treturn nil\n}\n",
      "length": 62,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SessionRequest) GetTweaks() []*TweakDesc {",
      "content": "func (x *MuSig2SessionRequest) GetTweaks() []*TweakDesc {\n\tif x != nil {\n\t\treturn x.Tweaks\n\t}\n\treturn nil\n}\n",
      "length": 45,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SessionRequest) GetTaprootTweak() *TaprootTweakDesc {",
      "content": "func (x *MuSig2SessionRequest) GetTaprootTweak() *TaprootTweakDesc {\n\tif x != nil {\n\t\treturn x.TaprootTweak\n\t}\n\treturn nil\n}\n",
      "length": 51,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SessionRequest) GetVersion() MuSig2Version {",
      "content": "func (x *MuSig2SessionRequest) GetVersion() MuSig2Version {\n\tif x != nil {\n\t\treturn x.Version\n\t}\n\treturn MuSig2Version_MUSIG2_VERSION_UNDEFINED\n}\n",
      "length": 81,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type MuSig2SessionResponse struct {",
      "content": "type MuSig2SessionResponse struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// The unique ID that represents this signing session. A session can be used\n\t// for producing a signature a single time. If the signing fails for any\n\t// reason, a new session with the same participants needs to be created.\n\tSessionId []byte `protobuf:\"bytes,1,opt,name=session_id,json=sessionId,proto3\" json:\"session_id,omitempty\"`\n\t// The combined public key (in the 32-byte x-only format) with all tweaks\n\t// applied to it. If a taproot tweak is specified, this corresponds to the\n\t// taproot key that can be put into the on-chain output.\n\tCombinedKey []byte `protobuf:\"bytes,2,opt,name=combined_key,json=combinedKey,proto3\" json:\"combined_key,omitempty\"`\n\t// The raw combined public key (in the 32-byte x-only format) before any tweaks\n\t// are applied to it. If a taproot tweak is specified, this corresponds to the\n\t// internal key that needs to be put into the witness if the script spend path\n\t// is used.\n\tTaprootInternalKey []byte `protobuf:\"bytes,3,opt,name=taproot_internal_key,json=taprootInternalKey,proto3\" json:\"taproot_internal_key,omitempty\"`\n\t// The two public nonces the local signer uses, combined into a single value\n\t// of 66 bytes. Can be split into the two 33-byte points to get the individual\n\t// nonces.\n\tLocalPublicNonces []byte `protobuf:\"bytes,4,opt,name=local_public_nonces,json=localPublicNonces,proto3\" json:\"local_public_nonces,omitempty\"`\n\t// Indicates whether all nonces required to start the signing process are known\n\t// now.\n\tHaveAllNonces bool `protobuf:\"varint,5,opt,name=have_all_nonces,json=haveAllNonces,proto3\" json:\"have_all_nonces,omitempty\"`\n\t// The version of the MuSig2 BIP that was used to create the session.\n\tVersion MuSig2Version `protobuf:\"varint,6,opt,name=version,proto3,enum=signrpc.MuSig2Version\" json:\"version,omitempty\"`\n}\n",
      "length": 1871,
      "tokens": 219,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SessionResponse) Reset() {",
      "content": "func (x *MuSig2SessionResponse) Reset() {\n\t*x = MuSig2SessionResponse{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[19]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 189,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SessionResponse) String() string {",
      "content": "func (x *MuSig2SessionResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2SessionResponse) ProtoMessage() {}",
      "content": "func (*MuSig2SessionResponse) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SessionResponse) ProtoReflect() protoreflect.Message {",
      "content": "func (x *MuSig2SessionResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[19]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use MuSig2SessionResponse.ProtoReflect.Descriptor instead.",
      "length": 316,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2SessionResponse) Descriptor() ([]byte, []int) {",
      "content": "func (*MuSig2SessionResponse) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{19}\n}\n",
      "length": 59,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SessionResponse) GetSessionId() []byte {",
      "content": "func (x *MuSig2SessionResponse) GetSessionId() []byte {\n\tif x != nil {\n\t\treturn x.SessionId\n\t}\n\treturn nil\n}\n",
      "length": 48,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SessionResponse) GetCombinedKey() []byte {",
      "content": "func (x *MuSig2SessionResponse) GetCombinedKey() []byte {\n\tif x != nil {\n\t\treturn x.CombinedKey\n\t}\n\treturn nil\n}\n",
      "length": 50,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SessionResponse) GetTaprootInternalKey() []byte {",
      "content": "func (x *MuSig2SessionResponse) GetTaprootInternalKey() []byte {\n\tif x != nil {\n\t\treturn x.TaprootInternalKey\n\t}\n\treturn nil\n}\n",
      "length": 57,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SessionResponse) GetLocalPublicNonces() []byte {",
      "content": "func (x *MuSig2SessionResponse) GetLocalPublicNonces() []byte {\n\tif x != nil {\n\t\treturn x.LocalPublicNonces\n\t}\n\treturn nil\n}\n",
      "length": 56,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SessionResponse) GetHaveAllNonces() bool {",
      "content": "func (x *MuSig2SessionResponse) GetHaveAllNonces() bool {\n\tif x != nil {\n\t\treturn x.HaveAllNonces\n\t}\n\treturn false\n}\n",
      "length": 54,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SessionResponse) GetVersion() MuSig2Version {",
      "content": "func (x *MuSig2SessionResponse) GetVersion() MuSig2Version {\n\tif x != nil {\n\t\treturn x.Version\n\t}\n\treturn MuSig2Version_MUSIG2_VERSION_UNDEFINED\n}\n",
      "length": 81,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type MuSig2RegisterNoncesRequest struct {",
      "content": "type MuSig2RegisterNoncesRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// The unique ID of the signing session those nonces should be registered with.\n\tSessionId []byte `protobuf:\"bytes,1,opt,name=session_id,json=sessionId,proto3\" json:\"session_id,omitempty\"`\n\t// A list of all public nonces of other signing participants that should be\n\t// registered.\n\tOtherSignerPublicNonces [][]byte `protobuf:\"bytes,3,rep,name=other_signer_public_nonces,json=otherSignerPublicNonces,proto3\" json:\"other_signer_public_nonces,omitempty\"`\n}\n",
      "length": 559,
      "tokens": 45,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2RegisterNoncesRequest) Reset() {",
      "content": "func (x *MuSig2RegisterNoncesRequest) Reset() {\n\t*x = MuSig2RegisterNoncesRequest{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[20]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 195,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2RegisterNoncesRequest) String() string {",
      "content": "func (x *MuSig2RegisterNoncesRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2RegisterNoncesRequest) ProtoMessage() {}",
      "content": "func (*MuSig2RegisterNoncesRequest) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2RegisterNoncesRequest) ProtoReflect() protoreflect.Message {",
      "content": "func (x *MuSig2RegisterNoncesRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[20]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use MuSig2RegisterNoncesRequest.ProtoReflect.Descriptor instead.",
      "length": 322,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2RegisterNoncesRequest) Descriptor() ([]byte, []int) {",
      "content": "func (*MuSig2RegisterNoncesRequest) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{20}\n}\n",
      "length": 59,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2RegisterNoncesRequest) GetSessionId() []byte {",
      "content": "func (x *MuSig2RegisterNoncesRequest) GetSessionId() []byte {\n\tif x != nil {\n\t\treturn x.SessionId\n\t}\n\treturn nil\n}\n",
      "length": 48,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2RegisterNoncesRequest) GetOtherSignerPublicNonces() [][]byte {",
      "content": "func (x *MuSig2RegisterNoncesRequest) GetOtherSignerPublicNonces() [][]byte {\n\tif x != nil {\n\t\treturn x.OtherSignerPublicNonces\n\t}\n\treturn nil\n}\n",
      "length": 62,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type MuSig2RegisterNoncesResponse struct {",
      "content": "type MuSig2RegisterNoncesResponse struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// Indicates whether all nonces required to start the signing process are known\n\t// now.\n\tHaveAllNonces bool `protobuf:\"varint,1,opt,name=have_all_nonces,json=haveAllNonces,proto3\" json:\"have_all_nonces,omitempty\"`\n}\n",
      "length": 323,
      "tokens": 26,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2RegisterNoncesResponse) Reset() {",
      "content": "func (x *MuSig2RegisterNoncesResponse) Reset() {\n\t*x = MuSig2RegisterNoncesResponse{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[21]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 196,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2RegisterNoncesResponse) String() string {",
      "content": "func (x *MuSig2RegisterNoncesResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2RegisterNoncesResponse) ProtoMessage() {}",
      "content": "func (*MuSig2RegisterNoncesResponse) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2RegisterNoncesResponse) ProtoReflect() protoreflect.Message {",
      "content": "func (x *MuSig2RegisterNoncesResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[21]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use MuSig2RegisterNoncesResponse.ProtoReflect.Descriptor instead.",
      "length": 323,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2RegisterNoncesResponse) Descriptor() ([]byte, []int) {",
      "content": "func (*MuSig2RegisterNoncesResponse) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{21}\n}\n",
      "length": 59,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2RegisterNoncesResponse) GetHaveAllNonces() bool {",
      "content": "func (x *MuSig2RegisterNoncesResponse) GetHaveAllNonces() bool {\n\tif x != nil {\n\t\treturn x.HaveAllNonces\n\t}\n\treturn false\n}\n",
      "length": 54,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type MuSig2SignRequest struct {",
      "content": "type MuSig2SignRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// The unique ID of the signing session to use for signing.\n\tSessionId []byte `protobuf:\"bytes,1,opt,name=session_id,json=sessionId,proto3\" json:\"session_id,omitempty\"`\n\t// The 32-byte SHA256 digest of the message to sign.\n\tMessageDigest []byte `protobuf:\"bytes,2,opt,name=message_digest,json=messageDigest,proto3\" json:\"message_digest,omitempty\"`\n\t// Cleanup indicates that after signing, the session state can be cleaned up,\n\t// since another participant is going to be responsible for combining the\n\t// partial signatures.\n\tCleanup bool `protobuf:\"varint,3,opt,name=cleanup,proto3\" json:\"cleanup,omitempty\"`\n}\n",
      "length": 714,
      "tokens": 69,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SignRequest) Reset() {",
      "content": "func (x *MuSig2SignRequest) Reset() {\n\t*x = MuSig2SignRequest{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[22]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 185,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SignRequest) String() string {",
      "content": "func (x *MuSig2SignRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2SignRequest) ProtoMessage() {}",
      "content": "func (*MuSig2SignRequest) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SignRequest) ProtoReflect() protoreflect.Message {",
      "content": "func (x *MuSig2SignRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[22]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use MuSig2SignRequest.ProtoReflect.Descriptor instead.",
      "length": 312,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2SignRequest) Descriptor() ([]byte, []int) {",
      "content": "func (*MuSig2SignRequest) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{22}\n}\n",
      "length": 59,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SignRequest) GetSessionId() []byte {",
      "content": "func (x *MuSig2SignRequest) GetSessionId() []byte {\n\tif x != nil {\n\t\treturn x.SessionId\n\t}\n\treturn nil\n}\n",
      "length": 48,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SignRequest) GetMessageDigest() []byte {",
      "content": "func (x *MuSig2SignRequest) GetMessageDigest() []byte {\n\tif x != nil {\n\t\treturn x.MessageDigest\n\t}\n\treturn nil\n}\n",
      "length": 52,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SignRequest) GetCleanup() bool {",
      "content": "func (x *MuSig2SignRequest) GetCleanup() bool {\n\tif x != nil {\n\t\treturn x.Cleanup\n\t}\n\treturn false\n}\n",
      "length": 48,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type MuSig2SignResponse struct {",
      "content": "type MuSig2SignResponse struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// The partial signature created by the local signer.\n\tLocalPartialSignature []byte `protobuf:\"bytes,1,opt,name=local_partial_signature,json=localPartialSignature,proto3\" json:\"local_partial_signature,omitempty\"`\n}\n",
      "length": 322,
      "tokens": 20,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SignResponse) Reset() {",
      "content": "func (x *MuSig2SignResponse) Reset() {\n\t*x = MuSig2SignResponse{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[23]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 186,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SignResponse) String() string {",
      "content": "func (x *MuSig2SignResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2SignResponse) ProtoMessage() {}",
      "content": "func (*MuSig2SignResponse) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SignResponse) ProtoReflect() protoreflect.Message {",
      "content": "func (x *MuSig2SignResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[23]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use MuSig2SignResponse.ProtoReflect.Descriptor instead.",
      "length": 313,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2SignResponse) Descriptor() ([]byte, []int) {",
      "content": "func (*MuSig2SignResponse) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{23}\n}\n",
      "length": 59,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2SignResponse) GetLocalPartialSignature() []byte {",
      "content": "func (x *MuSig2SignResponse) GetLocalPartialSignature() []byte {\n\tif x != nil {\n\t\treturn x.LocalPartialSignature\n\t}\n\treturn nil\n}\n",
      "length": 60,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type MuSig2CombineSigRequest struct {",
      "content": "type MuSig2CombineSigRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// The unique ID of the signing session to combine the signatures for.\n\tSessionId []byte `protobuf:\"bytes,1,opt,name=session_id,json=sessionId,proto3\" json:\"session_id,omitempty\"`\n\t// The list of all other participants' partial signatures to add to the current\n\t// session.\n\tOtherPartialSignatures [][]byte `protobuf:\"bytes,2,rep,name=other_partial_signatures,json=otherPartialSignatures,proto3\" json:\"other_partial_signatures,omitempty\"`\n}\n",
      "length": 545,
      "tokens": 44,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineSigRequest) Reset() {",
      "content": "func (x *MuSig2CombineSigRequest) Reset() {\n\t*x = MuSig2CombineSigRequest{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[24]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 191,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineSigRequest) String() string {",
      "content": "func (x *MuSig2CombineSigRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2CombineSigRequest) ProtoMessage() {}",
      "content": "func (*MuSig2CombineSigRequest) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineSigRequest) ProtoReflect() protoreflect.Message {",
      "content": "func (x *MuSig2CombineSigRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[24]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use MuSig2CombineSigRequest.ProtoReflect.Descriptor instead.",
      "length": 318,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2CombineSigRequest) Descriptor() ([]byte, []int) {",
      "content": "func (*MuSig2CombineSigRequest) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{24}\n}\n",
      "length": 59,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineSigRequest) GetSessionId() []byte {",
      "content": "func (x *MuSig2CombineSigRequest) GetSessionId() []byte {\n\tif x != nil {\n\t\treturn x.SessionId\n\t}\n\treturn nil\n}\n",
      "length": 48,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineSigRequest) GetOtherPartialSignatures() [][]byte {",
      "content": "func (x *MuSig2CombineSigRequest) GetOtherPartialSignatures() [][]byte {\n\tif x != nil {\n\t\treturn x.OtherPartialSignatures\n\t}\n\treturn nil\n}\n",
      "length": 61,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type MuSig2CombineSigResponse struct {",
      "content": "type MuSig2CombineSigResponse struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// Indicates whether all partial signatures required to create a final, full\n\t// signature are known yet. If this is true, then the final_signature field is\n\t// set, otherwise it is empty.\n\tHaveAllSignatures bool `protobuf:\"varint,1,opt,name=have_all_signatures,json=haveAllSignatures,proto3\" json:\"have_all_signatures,omitempty\"`\n\t// The final, full signature that is valid for the combined public key.\n\tFinalSignature []byte `protobuf:\"bytes,2,opt,name=final_signature,json=finalSignature,proto3\" json:\"final_signature,omitempty\"`\n}\n",
      "length": 638,
      "tokens": 60,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineSigResponse) Reset() {",
      "content": "func (x *MuSig2CombineSigResponse) Reset() {\n\t*x = MuSig2CombineSigResponse{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[25]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 192,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineSigResponse) String() string {",
      "content": "func (x *MuSig2CombineSigResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2CombineSigResponse) ProtoMessage() {}",
      "content": "func (*MuSig2CombineSigResponse) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineSigResponse) ProtoReflect() protoreflect.Message {",
      "content": "func (x *MuSig2CombineSigResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[25]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use MuSig2CombineSigResponse.ProtoReflect.Descriptor instead.",
      "length": 319,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2CombineSigResponse) Descriptor() ([]byte, []int) {",
      "content": "func (*MuSig2CombineSigResponse) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{25}\n}\n",
      "length": 59,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineSigResponse) GetHaveAllSignatures() bool {",
      "content": "func (x *MuSig2CombineSigResponse) GetHaveAllSignatures() bool {\n\tif x != nil {\n\t\treturn x.HaveAllSignatures\n\t}\n\treturn false\n}\n",
      "length": 58,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CombineSigResponse) GetFinalSignature() []byte {",
      "content": "func (x *MuSig2CombineSigResponse) GetFinalSignature() []byte {\n\tif x != nil {\n\t\treturn x.FinalSignature\n\t}\n\treturn nil\n}\n",
      "length": 53,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type MuSig2CleanupRequest struct {",
      "content": "type MuSig2CleanupRequest struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n\n\t// The unique ID of the signing session that should be removed/cleaned up.\n\tSessionId []byte `protobuf:\"bytes,1,opt,name=session_id,json=sessionId,proto3\" json:\"session_id,omitempty\"`\n}\n",
      "length": 293,
      "tokens": 24,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CleanupRequest) Reset() {",
      "content": "func (x *MuSig2CleanupRequest) Reset() {\n\t*x = MuSig2CleanupRequest{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[26]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 188,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CleanupRequest) String() string {",
      "content": "func (x *MuSig2CleanupRequest) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2CleanupRequest) ProtoMessage() {}",
      "content": "func (*MuSig2CleanupRequest) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CleanupRequest) ProtoReflect() protoreflect.Message {",
      "content": "func (x *MuSig2CleanupRequest) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[26]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use MuSig2CleanupRequest.ProtoReflect.Descriptor instead.",
      "length": 315,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2CleanupRequest) Descriptor() ([]byte, []int) {",
      "content": "func (*MuSig2CleanupRequest) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{26}\n}\n",
      "length": 59,
      "tokens": 4,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CleanupRequest) GetSessionId() []byte {",
      "content": "func (x *MuSig2CleanupRequest) GetSessionId() []byte {\n\tif x != nil {\n\t\treturn x.SessionId\n\t}\n\treturn nil\n}\n",
      "length": 48,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "type MuSig2CleanupResponse struct {",
      "content": "type MuSig2CleanupResponse struct {\n\tstate         protoimpl.MessageState\n\tsizeCache     protoimpl.SizeCache\n\tunknownFields protoimpl.UnknownFields\n}\n",
      "length": 110,
      "tokens": 7,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CleanupResponse) Reset() {",
      "content": "func (x *MuSig2CleanupResponse) Reset() {\n\t*x = MuSig2CleanupResponse{}\n\tif protoimpl.UnsafeEnabled {\n\t\tmi := &file_signrpc_signer_proto_msgTypes[27]\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tms.StoreMessageInfo(mi)\n\t}\n}\n",
      "length": 189,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CleanupResponse) String() string {",
      "content": "func (x *MuSig2CleanupResponse) String() string {\n\treturn protoimpl.X.MessageStringOf(x)\n}\n",
      "length": 39,
      "tokens": 3,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2CleanupResponse) ProtoMessage() {}",
      "content": "func (*MuSig2CleanupResponse) ProtoMessage() {}\n",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func (x *MuSig2CleanupResponse) ProtoReflect() protoreflect.Message {",
      "content": "func (x *MuSig2CleanupResponse) ProtoReflect() protoreflect.Message {\n\tmi := &file_signrpc_signer_proto_msgTypes[27]\n\tif protoimpl.UnsafeEnabled && x != nil {\n\t\tms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))\n\t\tif ms.LoadMessageInfo() == nil {\n\t\t\tms.StoreMessageInfo(mi)\n\t\t}\n\t\treturn ms\n\t}\n\treturn mi.MessageOf(x)\n}\n\n// Deprecated: Use MuSig2CleanupResponse.ProtoReflect.Descriptor instead.",
      "length": 316,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "func (*MuSig2CleanupResponse) Descriptor() ([]byte, []int) {",
      "content": "func (*MuSig2CleanupResponse) Descriptor() ([]byte, []int) {\n\treturn file_signrpc_signer_proto_rawDescGZIP(), []int{27}\n}\n\nvar File_signrpc_signer_proto protoreflect.FileDescriptor\n\nvar file_signrpc_signer_proto_rawDesc = []byte{\n\t0x0a, 0x14, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72,\n\t0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x22,\n\t0x48, 0x0a, 0x0a, 0x4b, 0x65, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a,\n\t0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,\n\t0x05, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09,\n\t0x6b, 0x65, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,\n\t0x08, 0x6b, 0x65, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x61, 0x0a, 0x0d, 0x4b, 0x65, 0x79,\n\t0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x61,\n\t0x77, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,\n\t0x0c, 0x52, 0x0b, 0x72, 0x61, 0x77, 0x4b, 0x65, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2c,\n\t0x0a, 0x07, 0x6b, 0x65, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,\n\t0x13, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4b, 0x65, 0x79, 0x4c, 0x6f, 0x63,\n\t0x61, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x6b, 0x65, 0x79, 0x4c, 0x6f, 0x63, 0x22, 0x3a, 0x0a, 0x05,\n\t0x54, 0x78, 0x4f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,\n\t0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70,\n\t0x6b, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,\n\t0x70, 0x6b, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22, 0xe6, 0x02, 0x0a, 0x0e, 0x53, 0x69, 0x67,\n\t0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x31, 0x0a, 0x08, 0x6b,\n\t0x65, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,\n\t0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4b, 0x65, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72,\n\t0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x44, 0x65, 0x73, 0x63, 0x12, 0x21,\n\t0x0a, 0x0c, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x74, 0x77, 0x65, 0x61, 0x6b, 0x18, 0x02,\n\t0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x54, 0x77, 0x65, 0x61,\n\t0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x77, 0x65, 0x61,\n\t0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x54,\n\t0x77, 0x65, 0x61, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x70, 0x5f, 0x74, 0x77, 0x65, 0x61,\n\t0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x61, 0x70, 0x54, 0x77, 0x65, 0x61,\n\t0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x63, 0x72,\n\t0x69, 0x70, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x77, 0x69, 0x74, 0x6e, 0x65,\n\t0x73, 0x73, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70,\n\t0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72,\n\t0x70, 0x63, 0x2e, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,\n\t0x12, 0x18, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x68, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28,\n\t0x0d, 0x52, 0x07, 0x73, 0x69, 0x67, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e,\n\t0x70, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,\n\t0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x34, 0x0a, 0x0b, 0x73,\n\t0x69, 0x67, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e,\n\t0x32, 0x13, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4d,\n\t0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f,\n\t0x64, 0x22, 0x96, 0x01, 0x0a, 0x07, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,\n\t0x0c, 0x72, 0x61, 0x77, 0x5f, 0x74, 0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,\n\t0x01, 0x28, 0x0c, 0x52, 0x0a, 0x72, 0x61, 0x77, 0x54, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12,\n\t0x36, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x73, 0x18, 0x02, 0x20,\n\t0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69,\n\t0x67, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x73, 0x69,\n\t0x67, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x73, 0x12, 0x31, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x5f,\n\t0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,\n\t0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x52, 0x0b, 0x70,\n\t0x72, 0x65, 0x76, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x22, 0x25, 0x0a, 0x08, 0x53, 0x69,\n\t0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x73, 0x69,\n\t0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x61, 0x77, 0x53, 0x69, 0x67,\n\t0x73, 0x22, 0x46, 0x0a, 0x0b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,\n\t0x12, 0x18, 0x0a, 0x07, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,\n\t0x0c, 0x52, 0x07, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69,\n\t0x67, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,\n\t0x73, 0x69, 0x67, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22, 0x4c, 0x0a, 0x0f, 0x49, 0x6e, 0x70,\n\t0x75, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0d,\n\t0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20,\n\t0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e,\n\t0x70, 0x75, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74,\n\t0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x22, 0xe6, 0x01, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e,\n\t0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,\n\t0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x07,\n\t0x6b, 0x65, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,\n\t0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4b, 0x65, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74,\n\t0x6f, 0x72, 0x52, 0x06, 0x6b, 0x65, 0x79, 0x4c, 0x6f, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f,\n\t0x75, 0x62, 0x6c, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,\n\t0x0a, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x63,\n\t0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,\n\t0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x53, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x0b,\n\t0x73, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,\n\t0x08, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x53, 0x69, 0x67, 0x12, 0x31, 0x0a,\n\t0x15, 0x73, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x5f, 0x74, 0x61, 0x70,\n\t0x5f, 0x74, 0x77, 0x65, 0x61, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x73, 0x63,\n\t0x68, 0x6e, 0x6f, 0x72, 0x72, 0x53, 0x69, 0x67, 0x54, 0x61, 0x70, 0x54, 0x77, 0x65, 0x61, 0x6b,\n\t0x22, 0x2f, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,\n\t0x65, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,\n\t0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,\n\t0x65, 0x22, 0x80, 0x01, 0x0a, 0x10, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73,\n\t0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20,\n\t0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,\n\t0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67,\n\t0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79,\n\t0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x24,\n\t0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x73, 0x63, 0x68, 0x6e, 0x6f, 0x72, 0x72, 0x5f, 0x73, 0x69, 0x67,\n\t0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x63, 0x68, 0x6e, 0x6f, 0x72,\n\t0x72, 0x53, 0x69, 0x67, 0x22, 0x29, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65,\n\t0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,\n\t0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x22,\n\t0xa2, 0x01, 0x0a, 0x10, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,\n\t0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61,\n\t0x6c, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f,\n\t0x65, 0x70, 0x68, 0x65, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12,\n\t0x30, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,\n\t0x32, 0x13, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4b, 0x65, 0x79, 0x4c, 0x6f,\n\t0x63, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x6b, 0x65, 0x79, 0x4c, 0x6f,\n\t0x63, 0x12, 0x31, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20,\n\t0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4b, 0x65,\n\t0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x6b, 0x65, 0x79,\n\t0x44, 0x65, 0x73, 0x63, 0x22, 0x32, 0x0a, 0x11, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4b, 0x65,\n\t0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x61,\n\t0x72, 0x65, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73,\n\t0x68, 0x61, 0x72, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x22, 0x3d, 0x0a, 0x09, 0x54, 0x77, 0x65, 0x61,\n\t0x6b, 0x44, 0x65, 0x73, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x77, 0x65, 0x61, 0x6b, 0x18, 0x01,\n\t0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x77, 0x65, 0x61, 0x6b, 0x12, 0x1a, 0x0a, 0x09, 0x69,\n\t0x73, 0x5f, 0x78, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,\n\t0x69, 0x73, 0x58, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x59, 0x0a, 0x10, 0x54, 0x61, 0x70, 0x72, 0x6f,\n\t0x6f, 0x74, 0x54, 0x77, 0x65, 0x61, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x73,\n\t0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,\n\t0x52, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x24, 0x0a, 0x0e,\n\t0x6b, 0x65, 0x79, 0x5f, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02,\n\t0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6b, 0x65, 0x79, 0x53, 0x70, 0x65, 0x6e, 0x64, 0x4f, 0x6e,\n\t0x6c, 0x79, 0x22, 0xe6, 0x01, 0x0a, 0x18, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32, 0x43, 0x6f, 0x6d,\n\t0x62, 0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,\n\t0x2c, 0x0a, 0x12, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x75,\n\t0x62, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x10, 0x61, 0x6c, 0x6c,\n\t0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x2a, 0x0a,\n\t0x06, 0x74, 0x77, 0x65, 0x61, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,\n\t0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x77, 0x65, 0x61, 0x6b, 0x44, 0x65, 0x73,\n\t0x63, 0x52, 0x06, 0x74, 0x77, 0x65, 0x61, 0x6b, 0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x74, 0x61, 0x70,\n\t0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x74, 0x77, 0x65, 0x61, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,\n\t0x32, 0x19, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x61, 0x70, 0x72, 0x6f,\n\t0x6f, 0x74, 0x54, 0x77, 0x65, 0x61, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x52, 0x0c, 0x74, 0x61, 0x70,\n\t0x72, 0x6f, 0x6f, 0x74, 0x54, 0x77, 0x65, 0x61, 0x6b, 0x12, 0x30, 0x0a, 0x07, 0x76, 0x65, 0x72,\n\t0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x67,\n\t0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32, 0x56, 0x65, 0x72, 0x73, 0x69,\n\t0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa2, 0x01, 0x0a, 0x19,\n\t0x4d, 0x75, 0x53, 0x69, 0x67, 0x32, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4b, 0x65, 0x79,\n\t0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d,\n\t0x62, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,\n\t0x0b, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x14,\n\t0x74, 0x61, 0x70, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,\n\t0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x74, 0x61, 0x70, 0x72,\n\t0x6f, 0x6f, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x12, 0x30,\n\t0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,\n\t0x16, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32,\n\t0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,\n\t0x22, 0xcd, 0x02, 0x0a, 0x14, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32, 0x53, 0x65, 0x73, 0x73, 0x69,\n\t0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x6b, 0x65, 0x79,\n\t0x5f, 0x6c, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x69, 0x67,\n\t0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4b, 0x65, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52,\n\t0x06, 0x6b, 0x65, 0x79, 0x4c, 0x6f, 0x63, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x6c, 0x6c, 0x5f, 0x73,\n\t0x69, 0x67, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20,\n\t0x03, 0x28, 0x0c, 0x52, 0x10, 0x61, 0x6c, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x50, 0x75,\n\t0x62, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x3b, 0x0a, 0x1a, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x73,\n\t0x69, 0x67, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6e, 0x6f, 0x6e,\n\t0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x17, 0x6f, 0x74, 0x68, 0x65, 0x72,\n\t0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4e, 0x6f, 0x6e, 0x63,\n\t0x65, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x74, 0x77, 0x65, 0x61, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03,\n\t0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x77, 0x65,\n\t0x61, 0x6b, 0x44, 0x65, 0x73, 0x63, 0x52, 0x06, 0x74, 0x77, 0x65, 0x61, 0x6b, 0x73, 0x12, 0x3e,\n\t0x0a, 0x0d, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x74, 0x77, 0x65, 0x61, 0x6b, 0x18,\n\t0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e,\n\t0x54, 0x61, 0x70, 0x72, 0x6f, 0x6f, 0x74, 0x54, 0x77, 0x65, 0x61, 0x6b, 0x44, 0x65, 0x73, 0x63,\n\t0x52, 0x0c, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x6f, 0x74, 0x54, 0x77, 0x65, 0x61, 0x6b, 0x12, 0x30,\n\t0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,\n\t0x16, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32,\n\t0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,\n\t0x22, 0x95, 0x02, 0x0a, 0x15, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32, 0x53, 0x65, 0x73, 0x73, 0x69,\n\t0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,\n\t0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,\n\t0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d,\n\t0x62, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,\n\t0x0b, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x14,\n\t0x74, 0x61, 0x70, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,\n\t0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x74, 0x61, 0x70, 0x72,\n\t0x6f, 0x6f, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x12, 0x2e,\n\t0x0a, 0x13, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6e,\n\t0x6f, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x6c, 0x6f, 0x63,\n\t0x61, 0x6c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x26,\n\t0x0a, 0x0f, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65,\n\t0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x61, 0x76, 0x65, 0x41, 0x6c, 0x6c,\n\t0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,\n\t0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70,\n\t0x63, 0x2e, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,\n\t0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x79, 0x0a, 0x1b, 0x4d, 0x75, 0x53, 0x69,\n\t0x67, 0x32, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73,\n\t0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69,\n\t0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x73,\n\t0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x1a, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f,\n\t0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6e, 0x6f,\n\t0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x17, 0x6f, 0x74, 0x68, 0x65,\n\t0x72, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4e, 0x6f, 0x6e,\n\t0x63, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x1c, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32, 0x52, 0x65, 0x67,\n\t0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,\n\t0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x5f,\n\t0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x61,\n\t0x76, 0x65, 0x41, 0x6c, 0x6c, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x73, 0x0a, 0x11, 0x4d,\n\t0x75, 0x53, 0x69, 0x67, 0x32, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,\n\t0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,\n\t0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,\n\t0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73,\n\t0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,\n\t0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x75,\n\t0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70,\n\t0x22, 0x4c, 0x0a, 0x12, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65,\n\t0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f,\n\t0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,\n\t0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61,\n\t0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x72,\n\t0x0a, 0x17, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53,\n\t0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73,\n\t0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73,\n\t0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x6f, 0x74, 0x68, 0x65,\n\t0x72, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,\n\t0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x16, 0x6f, 0x74, 0x68, 0x65,\n\t0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,\n\t0x65, 0x73, 0x22, 0x73, 0x0a, 0x18, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32, 0x43, 0x6f, 0x6d, 0x62,\n\t0x69, 0x6e, 0x65, 0x53, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,\n\t0x0a, 0x13, 0x68, 0x61, 0x76, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61,\n\t0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x68, 0x61, 0x76,\n\t0x65, 0x41, 0x6c, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x27,\n\t0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,\n\t0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x69,\n\t0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x4d, 0x75, 0x53, 0x69, 0x67,\n\t0x32, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,\n\t0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,\n\t0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x17,\n\t0x0a, 0x15, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x52,\n\t0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x9c, 0x01, 0x0a, 0x0a, 0x53, 0x69, 0x67, 0x6e,\n\t0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x49, 0x47, 0x4e, 0x5f, 0x4d,\n\t0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x57, 0x49, 0x54, 0x4e, 0x45, 0x53, 0x53, 0x5f, 0x56, 0x30,\n\t0x10, 0x00, 0x12, 0x29, 0x0a, 0x25, 0x53, 0x49, 0x47, 0x4e, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f,\n\t0x44, 0x5f, 0x54, 0x41, 0x50, 0x52, 0x4f, 0x4f, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x53, 0x50,\n\t0x45, 0x4e, 0x44, 0x5f, 0x42, 0x49, 0x50, 0x30, 0x30, 0x38, 0x36, 0x10, 0x01, 0x12, 0x21, 0x0a,\n\t0x1d, 0x53, 0x49, 0x47, 0x4e, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x54, 0x41, 0x50,\n\t0x52, 0x4f, 0x4f, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x10, 0x02,\n\t0x12, 0x24, 0x0a, 0x20, 0x53, 0x49, 0x47, 0x4e, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f,\n\t0x54, 0x41, 0x50, 0x52, 0x4f, 0x4f, 0x54, 0x5f, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x5f, 0x53,\n\t0x50, 0x45, 0x4e, 0x44, 0x10, 0x03, 0x2a, 0x62, 0x0a, 0x0d, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32,\n\t0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x55, 0x53, 0x49, 0x47,\n\t0x32, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49,\n\t0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x55, 0x53, 0x49, 0x47, 0x32, 0x5f,\n\t0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x56, 0x30, 0x34, 0x30, 0x10, 0x01, 0x12, 0x1a,\n\t0x0a, 0x16, 0x4d, 0x55, 0x53, 0x49, 0x47, 0x32, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e,\n\t0x5f, 0x56, 0x31, 0x30, 0x30, 0x52, 0x43, 0x32, 0x10, 0x02, 0x32, 0xdb, 0x06, 0x0a, 0x06, 0x53,\n\t0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74,\n\t0x70, 0x75, 0x74, 0x52, 0x61, 0x77, 0x12, 0x10, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63,\n\t0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72,\n\t0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x12, 0x43,\n\t0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70,\n\t0x74, 0x12, 0x10, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e,\n\t0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e,\n\t0x70, 0x75, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a,\n\t0x0b, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x2e, 0x73,\n\t0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,\n\t0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e,\n\t0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,\n\t0x46, 0x0a, 0x0d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,\n\t0x12, 0x19, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,\n\t0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x73, 0x69,\n\t0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x65, 0x73, 0x73,\n\t0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0f, 0x44, 0x65, 0x72, 0x69, 0x76,\n\t0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x2e, 0x73, 0x69, 0x67,\n\t0x6e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x52, 0x65,\n\t0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e,\n\t0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,\n\t0x65, 0x12, 0x5a, 0x0a, 0x11, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32, 0x43, 0x6f, 0x6d, 0x62, 0x69,\n\t0x6e, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x21, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63,\n\t0x2e, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x4b, 0x65,\n\t0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x69, 0x67, 0x6e,\n\t0x72, 0x70, 0x63, 0x2e, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e,\n\t0x65, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a,\n\t0x13, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73,\n\t0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4d,\n\t0x75, 0x53, 0x69, 0x67, 0x32, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,\n\t0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x75,\n\t0x53, 0x69, 0x67, 0x32, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,\n\t0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x14, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32, 0x52, 0x65, 0x67,\n\t0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x73, 0x69,\n\t0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32, 0x52, 0x65, 0x67, 0x69,\n\t0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,\n\t0x74, 0x1a, 0x25, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x75, 0x53, 0x69,\n\t0x67, 0x32, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73,\n\t0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0a, 0x4d, 0x75, 0x53, 0x69,\n\t0x67, 0x32, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x1a, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63,\n\t0x2e, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,\n\t0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x75, 0x53,\n\t0x69, 0x67, 0x32, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,\n\t0x57, 0x0a, 0x10, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65,\n\t0x53, 0x69, 0x67, 0x12, 0x20, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x75,\n\t0x53, 0x69, 0x67, 0x32, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x69, 0x67, 0x52, 0x65,\n\t0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x2e,\n\t0x4d, 0x75, 0x53, 0x69, 0x67, 0x32, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x53, 0x69, 0x67,\n\t0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x4d, 0x75, 0x53, 0x69,\n\t0x67, 0x32, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x12, 0x1d, 0x2e, 0x73, 0x69, 0x67, 0x6e,\n\t0x72, 0x70, 0x63, 0x2e, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75,\n\t0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x72,\n\t0x70, 0x63, 0x2e, 0x4d, 0x75, 0x53, 0x69, 0x67, 0x32, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70,\n\t0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68,\n\t0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x69, 0x6e, 0x67,\n\t0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6c, 0x6e, 0x64, 0x2f, 0x6c, 0x6e, 0x72, 0x70,\n\t0x63, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,\n\t0x33,\n}\n\nvar (\n\tfile_signrpc_signer_proto_rawDescOnce sync.Once\n\tfile_signrpc_signer_proto_rawDescData = file_signrpc_signer_proto_rawDesc\n)\n",
      "length": 28426,
      "tokens": 4709,
      "embedding": []
    },
    {
      "slug": "func file_signrpc_signer_proto_rawDescGZIP() []byte {",
      "content": "func file_signrpc_signer_proto_rawDescGZIP() []byte {\n\tfile_signrpc_signer_proto_rawDescOnce.Do(func() {\n\t\tfile_signrpc_signer_proto_rawDescData = protoimpl.X.CompressGZIP(file_signrpc_signer_proto_rawDescData)\n\t})\n\treturn file_signrpc_signer_proto_rawDescData\n}\n\nvar file_signrpc_signer_proto_enumTypes = make([]protoimpl.EnumInfo, 2)\nvar file_signrpc_signer_proto_msgTypes = make([]protoimpl.MessageInfo, 28)\nvar file_signrpc_signer_proto_goTypes = []interface{}{\n\t(SignMethod)(0),                      // 0: signrpc.SignMethod\n\t(MuSig2Version)(0),                   // 1: signrpc.MuSig2Version\n\t(*KeyLocator)(nil),                   // 2: signrpc.KeyLocator\n\t(*KeyDescriptor)(nil),                // 3: signrpc.KeyDescriptor\n\t(*TxOut)(nil),                        // 4: signrpc.TxOut\n\t(*SignDescriptor)(nil),               // 5: signrpc.SignDescriptor\n\t(*SignReq)(nil),                      // 6: signrpc.SignReq\n\t(*SignResp)(nil),                     // 7: signrpc.SignResp\n\t(*InputScript)(nil),                  // 8: signrpc.InputScript\n\t(*InputScriptResp)(nil),              // 9: signrpc.InputScriptResp\n\t(*SignMessageReq)(nil),               // 10: signrpc.SignMessageReq\n\t(*SignMessageResp)(nil),              // 11: signrpc.SignMessageResp\n\t(*VerifyMessageReq)(nil),             // 12: signrpc.VerifyMessageReq\n\t(*VerifyMessageResp)(nil),            // 13: signrpc.VerifyMessageResp\n\t(*SharedKeyRequest)(nil),             // 14: signrpc.SharedKeyRequest\n\t(*SharedKeyResponse)(nil),            // 15: signrpc.SharedKeyResponse\n\t(*TweakDesc)(nil),                    // 16: signrpc.TweakDesc\n\t(*TaprootTweakDesc)(nil),             // 17: signrpc.TaprootTweakDesc\n\t(*MuSig2CombineKeysRequest)(nil),     // 18: signrpc.MuSig2CombineKeysRequest\n\t(*MuSig2CombineKeysResponse)(nil),    // 19: signrpc.MuSig2CombineKeysResponse\n\t(*MuSig2SessionRequest)(nil),         // 20: signrpc.MuSig2SessionRequest\n\t(*MuSig2SessionResponse)(nil),        // 21: signrpc.MuSig2SessionResponse\n\t(*MuSig2RegisterNoncesRequest)(nil),  // 22: signrpc.MuSig2RegisterNoncesRequest\n\t(*MuSig2RegisterNoncesResponse)(nil), // 23: signrpc.MuSig2RegisterNoncesResponse\n\t(*MuSig2SignRequest)(nil),            // 24: signrpc.MuSig2SignRequest\n\t(*MuSig2SignResponse)(nil),           // 25: signrpc.MuSig2SignResponse\n\t(*MuSig2CombineSigRequest)(nil),      // 26: signrpc.MuSig2CombineSigRequest\n\t(*MuSig2CombineSigResponse)(nil),     // 27: signrpc.MuSig2CombineSigResponse\n\t(*MuSig2CleanupRequest)(nil),         // 28: signrpc.MuSig2CleanupRequest\n\t(*MuSig2CleanupResponse)(nil),        // 29: signrpc.MuSig2CleanupResponse\n}\nvar file_signrpc_signer_proto_depIdxs = []int32{\n\t2,  // 0: signrpc.KeyDescriptor.key_loc:type_name -> signrpc.KeyLocator\n\t3,  // 1: signrpc.SignDescriptor.key_desc:type_name -> signrpc.KeyDescriptor\n\t4,  // 2: signrpc.SignDescriptor.output:type_name -> signrpc.TxOut\n\t0,  // 3: signrpc.SignDescriptor.sign_method:type_name -> signrpc.SignMethod\n\t5,  // 4: signrpc.SignReq.sign_descs:type_name -> signrpc.SignDescriptor\n\t4,  // 5: signrpc.SignReq.prev_outputs:type_name -> signrpc.TxOut\n\t8,  // 6: signrpc.InputScriptResp.input_scripts:type_name -> signrpc.InputScript\n\t2,  // 7: signrpc.SignMessageReq.key_loc:type_name -> signrpc.KeyLocator\n\t2,  // 8: signrpc.SharedKeyRequest.key_loc:type_name -> signrpc.KeyLocator\n\t3,  // 9: signrpc.SharedKeyRequest.key_desc:type_name -> signrpc.KeyDescriptor\n\t16, // 10: signrpc.MuSig2CombineKeysRequest.tweaks:type_name -> signrpc.TweakDesc\n\t17, // 11: signrpc.MuSig2CombineKeysRequest.taproot_tweak:type_name -> signrpc.TaprootTweakDesc\n\t1,  // 12: signrpc.MuSig2CombineKeysRequest.version:type_name -> signrpc.MuSig2Version\n\t1,  // 13: signrpc.MuSig2CombineKeysResponse.version:type_name -> signrpc.MuSig2Version\n\t2,  // 14: signrpc.MuSig2SessionRequest.key_loc:type_name -> signrpc.KeyLocator\n\t16, // 15: signrpc.MuSig2SessionRequest.tweaks:type_name -> signrpc.TweakDesc\n\t17, // 16: signrpc.MuSig2SessionRequest.taproot_tweak:type_name -> signrpc.TaprootTweakDesc\n\t1,  // 17: signrpc.MuSig2SessionRequest.version:type_name -> signrpc.MuSig2Version\n\t1,  // 18: signrpc.MuSig2SessionResponse.version:type_name -> signrpc.MuSig2Version\n\t6,  // 19: signrpc.Signer.SignOutputRaw:input_type -> signrpc.SignReq\n\t6,  // 20: signrpc.Signer.ComputeInputScript:input_type -> signrpc.SignReq\n\t10, // 21: signrpc.Signer.SignMessage:input_type -> signrpc.SignMessageReq\n\t12, // 22: signrpc.Signer.VerifyMessage:input_type -> signrpc.VerifyMessageReq\n\t14, // 23: signrpc.Signer.DeriveSharedKey:input_type -> signrpc.SharedKeyRequest\n\t18, // 24: signrpc.Signer.MuSig2CombineKeys:input_type -> signrpc.MuSig2CombineKeysRequest\n\t20, // 25: signrpc.Signer.MuSig2CreateSession:input_type -> signrpc.MuSig2SessionRequest\n\t22, // 26: signrpc.Signer.MuSig2RegisterNonces:input_type -> signrpc.MuSig2RegisterNoncesRequest\n\t24, // 27: signrpc.Signer.MuSig2Sign:input_type -> signrpc.MuSig2SignRequest\n\t26, // 28: signrpc.Signer.MuSig2CombineSig:input_type -> signrpc.MuSig2CombineSigRequest\n\t28, // 29: signrpc.Signer.MuSig2Cleanup:input_type -> signrpc.MuSig2CleanupRequest\n\t7,  // 30: signrpc.Signer.SignOutputRaw:output_type -> signrpc.SignResp\n\t9,  // 31: signrpc.Signer.ComputeInputScript:output_type -> signrpc.InputScriptResp\n\t11, // 32: signrpc.Signer.SignMessage:output_type -> signrpc.SignMessageResp\n\t13, // 33: signrpc.Signer.VerifyMessage:output_type -> signrpc.VerifyMessageResp\n\t15, // 34: signrpc.Signer.DeriveSharedKey:output_type -> signrpc.SharedKeyResponse\n\t19, // 35: signrpc.Signer.MuSig2CombineKeys:output_type -> signrpc.MuSig2CombineKeysResponse\n\t21, // 36: signrpc.Signer.MuSig2CreateSession:output_type -> signrpc.MuSig2SessionResponse\n\t23, // 37: signrpc.Signer.MuSig2RegisterNonces:output_type -> signrpc.MuSig2RegisterNoncesResponse\n\t25, // 38: signrpc.Signer.MuSig2Sign:output_type -> signrpc.MuSig2SignResponse\n\t27, // 39: signrpc.Signer.MuSig2CombineSig:output_type -> signrpc.MuSig2CombineSigResponse\n\t29, // 40: signrpc.Signer.MuSig2Cleanup:output_type -> signrpc.MuSig2CleanupResponse\n\t30, // [30:41] is the sub-list for method output_type\n\t19, // [19:30] is the sub-list for method input_type\n\t19, // [19:19] is the sub-list for extension type_name\n\t19, // [19:19] is the sub-list for extension extendee\n\t0,  // [0:19] is the sub-list for field type_name\n}\n",
      "length": 6174,
      "tokens": 440,
      "embedding": []
    },
    {
      "slug": "func init() { file_signrpc_signer_proto_init() }",
      "content": "func init() { file_signrpc_signer_proto_init() }",
      "length": 0,
      "tokens": 0,
      "embedding": []
    },
    {
      "slug": "func file_signrpc_signer_proto_init() {",
      "content": "func file_signrpc_signer_proto_init() {\n\tif File_signrpc_signer_proto != nil {\n\t\treturn\n\t}\n\tif !protoimpl.UnsafeEnabled {\n\t\tfile_signrpc_signer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*KeyLocator); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*KeyDescriptor); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*TxOut); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*SignDescriptor); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*SignReq); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*SignResp); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*InputScript); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*InputScriptResp); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*SignMessageReq); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*SignMessageResp); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*VerifyMessageReq); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*VerifyMessageResp); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*SharedKeyRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*SharedKeyResponse); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*TweakDesc); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*TaprootTweakDesc); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*MuSig2CombineKeysRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*MuSig2CombineKeysResponse); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*MuSig2SessionRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*MuSig2SessionResponse); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*MuSig2RegisterNoncesRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*MuSig2RegisterNoncesResponse); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*MuSig2SignRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*MuSig2SignResponse); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*MuSig2CombineSigRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*MuSig2CombineSigResponse); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*MuSig2CleanupRequest); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t\tfile_signrpc_signer_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {\n\t\t\tswitch v := v.(*MuSig2CleanupResponse); i {\n\t\t\tcase 0:\n\t\t\t\treturn &v.state\n\t\t\tcase 1:\n\t\t\t\treturn &v.sizeCache\n\t\t\tcase 2:\n\t\t\t\treturn &v.unknownFields\n\t\t\tdefault:\n\t\t\t\treturn nil\n\t\t\t}\n\t\t}\n\t}\n\ttype x struct{}\n\tout := protoimpl.TypeBuilder{\n\t\tFile: protoimpl.DescBuilder{\n\t\t\tGoPackagePath: reflect.TypeOf(x{}).PkgPath(),\n\t\t\tRawDescriptor: file_signrpc_signer_proto_rawDesc,\n\t\t\tNumEnums:      2,\n\t\t\tNumMessages:   28,\n\t\t\tNumExtensions: 0,\n\t\t\tNumServices:   1,\n\t\t},\n\t\tGoTypes:           file_signrpc_signer_proto_goTypes,\n\t\tDependencyIndexes: file_signrpc_signer_proto_depIdxs,\n\t\tEnumInfos:         file_signrpc_signer_proto_enumTypes,\n\t\tMessageInfos:      file_signrpc_signer_proto_msgTypes,\n\t}.Build()\n\tFile_signrpc_signer_proto = out.File\n\tfile_signrpc_signer_proto_rawDesc = nil\n\tfile_signrpc_signer_proto_goTypes = nil\n\tfile_signrpc_signer_proto_depIdxs = nil\n}\n",
      "length": 8137,
      "tokens": 922,
      "embedding": []
    }
  ]
}