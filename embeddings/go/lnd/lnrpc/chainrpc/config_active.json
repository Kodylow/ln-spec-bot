{
  "filepath": "../implementations/go/lnd/lnrpc/chainrpc/config_active.go",
  "package": "chainrpc",
  "sections": [
    {
      "slug": "//go:build chainrpc",
      "content": "//go:build chainrpc\n// +build chainrpc\n\npackage chainrpc\n\nimport (\n\t\"github.com/lightningnetwork/lnd/chainntnfs\"\n\t\"github.com/lightningnetwork/lnd/lnwallet\"\n\t\"github.com/lightningnetwork/lnd/macaroons\"\n)\n\n// Config is the primary configuration struct for the chain notifier RPC server.\n// It contains all the items required for the server to carry out its duties.\n// The fields with struct tags are meant to be parsed as normal configuration\n// options, while if able to be populated, the latter fields MUST also be\n// specified.",
      "length": 495,
      "tokens": 69,
      "embedding": []
    },
    {
      "slug": "type Config struct {",
      "content": "type Config struct {\n\t// ChainNotifierMacPath is the path for the chain notifier macaroon. If\n\t// unspecified then we assume that the macaroon will be found under the\n\t// network directory, named DefaultChainNotifierMacFilename.\n\tChainNotifierMacPath string `long:\"notifiermacaroonpath\" description:\"Path to the chain notifier macaroon\"`\n\n\t// NetworkDir is the main network directory wherein the chain notifier\n\t// RPC server will find the macaroon named\n\t// DefaultChainNotifierMacFilename.\n\tNetworkDir string\n\n\t// MacService is the main macaroon service that we'll use to handle\n\t// authentication for the chain notifier RPC server.\n\tMacService *macaroons.Service\n\n\t// ChainNotifier is the chain notifier instance that backs the chain\n\t// notifier RPC server. The job of the chain notifier RPC server is\n\t// simply to proxy valid requests to the active chain notifier instance.\n\tChainNotifier chainntnfs.ChainNotifier\n\n\t// Chain provides access to the most up-to-date blockchain data.\n\tChain lnwallet.BlockChainIO\n}\n",
      "length": 975,
      "tokens": 134,
      "embedding": []
    }
  ]
}