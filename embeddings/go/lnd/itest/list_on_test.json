{
  "filepath": "../implementations/go/lnd/itest/list_on_test.go",
  "package": "itest",
  "sections": [
    {
      "slug": "//go:build integration",
      "content": "//go:build integration\n\npackage itest\n\nimport \"github.com/lightningnetwork/lnd/lntest\"\n\nvar allTestCases = []*lntest.TestCase{\n\t{\n\t\tName:     \"update channel status\",\n\t\tTestFunc: testUpdateChanStatus,\n\t},\n\t{\n\t\tName:     \"basic funding flow\",\n\t\tTestFunc: testBasicChannelFunding,\n\t},\n\t{\n\t\tName:     \"multi hop htlc local timeout\",\n\t\tTestFunc: testMultiHopHtlcLocalTimeout,\n\t},\n\t{\n\t\tName:     \"multi hop receiver chain claim\",\n\t\tTestFunc: testMultiHopReceiverChainClaim,\n\t},\n\t{\n\t\tName:     \"multi hop local force close on-chain htlc timeout\",\n\t\tTestFunc: testMultiHopLocalForceCloseOnChainHtlcTimeout,\n\t},\n\t{\n\t\tName:     \"multi hop remote force close on-chain htlc timeout\",\n\t\tTestFunc: testMultiHopRemoteForceCloseOnChainHtlcTimeout,\n\t},\n\t{\n\t\tName:     \"multi hop htlc local chain claim\",\n\t\tTestFunc: testMultiHopHtlcLocalChainClaim,\n\t},\n\t{\n\t\tName:     \"multi hop htlc remote chain claim\",\n\t\tTestFunc: testMultiHopHtlcRemoteChainClaim,\n\t},\n\t{\n\t\tName:     \"multi hop htlc aggregation\",\n\t\tTestFunc: testMultiHopHtlcAggregation,\n\t},\n\t{\n\t\tName:     \"external channel funding\",\n\t\tTestFunc: testExternalFundingChanPoint,\n\t},\n\t{\n\t\tName:     \"channel backup restore basic\",\n\t\tTestFunc: testChannelBackupRestoreBasic,\n\t},\n\t{\n\t\tName:     \"channel backup restore unconfirmed\",\n\t\tTestFunc: testChannelBackupRestoreUnconfirmed,\n\t},\n\t{\n\t\tName:     \"channel backup restore commit types\",\n\t\tTestFunc: testChannelBackupRestoreCommitTypes,\n\t},\n\t{\n\t\tName:     \"channel backup restore force close\",\n\t\tTestFunc: testChannelBackupRestoreForceClose,\n\t},\n\t{\n\t\tName:     \"channel backup restore legacy\",\n\t\tTestFunc: testChannelBackupRestoreLegacy,\n\t},\n\t{\n\t\tName:     \"data loss protection\",\n\t\tTestFunc: testDataLossProtection,\n\t},\n\t{\n\t\tName:     \"sweep coins\",\n\t\tTestFunc: testSweepAllCoins,\n\t},\n\t{\n\t\tName:     \"disconnecting target peer\",\n\t\tTestFunc: testDisconnectingTargetPeer,\n\t},\n\t{\n\t\tName:     \"sphinx replay persistence\",\n\t\tTestFunc: testSphinxReplayPersistence,\n\t},\n\t{\n\t\tName:     \"list channels\",\n\t\tTestFunc: testListChannels,\n\t},\n\t{\n\t\tName:     \"max pending channel\",\n\t\tTestFunc: testMaxPendingChannels,\n\t},\n\t{\n\t\tName:     \"garbage collect link nodes\",\n\t\tTestFunc: testGarbageCollectLinkNodes,\n\t},\n\t{\n\t\tName:     \"reject onward htlc\",\n\t\tTestFunc: testRejectHTLC,\n\t},\n\t{\n\t\tName:     \"node sign verify\",\n\t\tTestFunc: testNodeSignVerify,\n\t},\n\t{\n\t\tName:     \"list addresses\",\n\t\tTestFunc: testListAddresses,\n\t},\n\t{\n\t\tName:     \"abandonchannel\",\n\t\tTestFunc: testAbandonChannel,\n\t},\n\t{\n\t\tName:     \"recovery info\",\n\t\tTestFunc: testGetRecoveryInfo,\n\t},\n\t{\n\t\tName:     \"onchain fund recovery\",\n\t\tTestFunc: testOnchainFundRecovery,\n\t},\n\t{\n\t\tName:     \"wallet rescan address detection\",\n\t\tTestFunc: testRescanAddressDetection,\n\t},\n\t{\n\t\tName:     \"basic funding flow with all input types\",\n\t\tTestFunc: testChannelFundingInputTypes,\n\t},\n\t{\n\t\tName:     \"unconfirmed channel funding\",\n\t\tTestFunc: testUnconfirmedChannelFunding,\n\t},\n\t{\n\t\tName:     \"funding flow persistence\",\n\t\tTestFunc: testChannelFundingPersistence,\n\t},\n\t{\n\t\tName:     \"batch channel funding\",\n\t\tTestFunc: testBatchChanFunding,\n\t},\n\t{\n\t\tName:     \"update channel policy\",\n\t\tTestFunc: testUpdateChannelPolicy,\n\t},\n\t{\n\t\tName:     \"send update disable channel\",\n\t\tTestFunc: testSendUpdateDisableChannel,\n\t},\n\t{\n\t\tName:     \"private channel update policy\",\n\t\tTestFunc: testUpdateChannelPolicyForPrivateChannel,\n\t},\n\t{\n\t\tName:     \"update channel policy fee rate accuracy\",\n\t\tTestFunc: testUpdateChannelPolicyFeeRateAccuracy,\n\t},\n\t{\n\t\tName:     \"connection timeout\",\n\t\tTestFunc: testNetworkConnectionTimeout,\n\t},\n\t{\n\t\tName:     \"reconnect after ip change\",\n\t\tTestFunc: testReconnectAfterIPChange,\n\t},\n\t{\n\t\tName:     \"addpeer config\",\n\t\tTestFunc: testAddPeerConfig,\n\t},\n\t{\n\t\tName:     \"unannounced channels\",\n\t\tTestFunc: testUnannouncedChannels,\n\t},\n\t{\n\t\tName:     \"graph topology notifications\",\n\t\tTestFunc: testGraphTopologyNotifications,\n\t},\n\t{\n\t\tName:     \"node announcement\",\n\t\tTestFunc: testNodeAnnouncement,\n\t},\n\t{\n\t\tName:     \"update node announcement rpc\",\n\t\tTestFunc: testUpdateNodeAnnouncement,\n\t},\n\t{\n\t\tName:     \"list outgoing payments\",\n\t\tTestFunc: testListPayments,\n\t},\n\t{\n\t\tName:     \"immediate payment after channel opened\",\n\t\tTestFunc: testPaymentFollowingChannelOpen,\n\t},\n\t{\n\t\tName:     \"invoice update subscription\",\n\t\tTestFunc: testInvoiceSubscriptions,\n\t},\n\t{\n\t\tName:     \"streaming channel backup update\",\n\t\tTestFunc: testChannelBackupUpdates,\n\t},\n\t{\n\t\tName:     \"export channel backup\",\n\t\tTestFunc: testExportChannelBackup,\n\t},\n\t{\n\t\tName:     \"channel balance\",\n\t\tTestFunc: testChannelBalance,\n\t},\n\t{\n\t\tName:     \"channel unsettled balance\",\n\t\tTestFunc: testChannelUnsettledBalance,\n\t},\n\t{\n\t\tName:     \"commitment deadline\",\n\t\tTestFunc: testCommitmentTransactionDeadline,\n\t},\n\t{\n\t\tName:     \"channel force closure\",\n\t\tTestFunc: testChannelForceClosure,\n\t},\n\t{\n\t\tName:     \"failing link\",\n\t\tTestFunc: testFailingChannel,\n\t},\n\t{\n\t\tName:     \"chain kit\",\n\t\tTestFunc: testChainKit,\n\t},\n\t{\n\t\tName:     \"neutrino kit\",\n\t\tTestFunc: testNeutrino,\n\t},\n\t{\n\t\tName:     \"etcd failover\",\n\t\tTestFunc: testEtcdFailover,\n\t},\n\t{\n\t\tName:     \"hold invoice force close\",\n\t\tTestFunc: testHoldInvoiceForceClose,\n\t},\n\t{\n\t\tName:     \"hold invoice sender persistence\",\n\t\tTestFunc: testHoldInvoicePersistence,\n\t},\n\t{\n\t\tName:     \"maximum channel size\",\n\t\tTestFunc: testMaxChannelSize,\n\t},\n\t{\n\t\tName:     \"wumbo channels\",\n\t\tTestFunc: testWumboChannels,\n\t},\n\t{\n\t\tName:     \"max htlc pathfind\",\n\t\tTestFunc: testMaxHtlcPathfind,\n\t},\n\t{\n\t\tName:     \"multi-hop htlc error propagation\",\n\t\tTestFunc: testHtlcErrorPropagation,\n\t},\n\t{\n\t\tName:     \"multi-hop payments\",\n\t\tTestFunc: testMultiHopPayments,\n\t},\n\t{\n\t\tName:     \"anchors reserved value\",\n\t\tTestFunc: testAnchorReservedValue,\n\t},\n\t{\n\t\tName:     \"3rd party anchor spend\",\n\t\tTestFunc: testAnchorThirdPartySpend,\n\t},\n\t{\n\t\tName:     \"open channel reorg test\",\n\t\tTestFunc: testOpenChannelAfterReorg,\n\t},\n\t{\n\t\tName:     \"psbt channel funding\",\n\t\tTestFunc: testPsbtChanFunding,\n\t},\n\t{\n\t\tName:     \"psbt channel funding external\",\n\t\tTestFunc: testPsbtChanFundingExternal,\n\t},\n\t{\n\t\tName:     \"psbt channel funding single step\",\n\t\tTestFunc: testPsbtChanFundingSingleStep,\n\t},\n\t{\n\t\tName:     \"sign psbt\",\n\t\tTestFunc: testSignPsbt,\n\t},\n\t{\n\t\tName:     \"resolution handoff\",\n\t\tTestFunc: testResHandoff,\n\t},\n\t{\n\t\tName:     \"REST API\",\n\t\tTestFunc: testRestAPI,\n\t},\n\t{\n\t\tName:     \"revoked uncooperative close retribution\",\n\t\tTestFunc: testRevokedCloseRetribution,\n\t},\n\t{\n\t\tName: \"revoked uncooperative close retribution zero value \" +\n\t\t\t\"remote output\",\n\t\tTestFunc: testRevokedCloseRetributionZeroValueRemoteOutput,\n\t},\n\t{\n\t\tName:     \"revoked uncooperative close retribution remote hodl\",\n\t\tTestFunc: testRevokedCloseRetributionRemoteHodl,\n\t},\n\t{\n\t\tName: \"revoked uncooperative close retribution altruist \" +\n\t\t\t\"watchtower\",\n\t\tTestFunc: testRevokedCloseRetributionAltruistWatchtower,\n\t},\n\t{\n\t\tName:     \"single-hop send to route\",\n\t\tTestFunc: testSingleHopSendToRoute,\n\t},\n\t{\n\t\tName:     \"multi-hop send to route\",\n\t\tTestFunc: testMultiHopSendToRoute,\n\t},\n\t{\n\t\tName:     \"send to route error propagation\",\n\t\tTestFunc: testSendToRouteErrorPropagation,\n\t},\n\t{\n\t\tName:     \"private channels\",\n\t\tTestFunc: testPrivateChannels,\n\t},\n\t{\n\t\tName:     \"invoice routing hints\",\n\t\tTestFunc: testInvoiceRoutingHints,\n\t},\n\t{\n\t\tName:     \"multi-hop payments over private channels\",\n\t\tTestFunc: testMultiHopOverPrivateChannels,\n\t},\n\t{\n\t\tName:     \"query routes\",\n\t\tTestFunc: testQueryRoutes,\n\t},\n\t{\n\t\tName:     \"route fee cutoff\",\n\t\tTestFunc: testRouteFeeCutoff,\n\t},\n\t{\n\t\tName:     \"rpc middleware interceptor\",\n\t\tTestFunc: testRPCMiddlewareInterceptor,\n\t},\n\t{\n\t\tName:     \"macaroon authentication\",\n\t\tTestFunc: testMacaroonAuthentication,\n\t},\n\t{\n\t\tName:     \"bake macaroon\",\n\t\tTestFunc: testBakeMacaroon,\n\t},\n\t{\n\t\tName:     \"delete macaroon id\",\n\t\tTestFunc: testDeleteMacaroonID,\n\t},\n\t{\n\t\tName:     \"stateless init\",\n\t\tTestFunc: testStatelessInit,\n\t},\n\t{\n\t\tName:     \"single hop invoice\",\n\t\tTestFunc: testSingleHopInvoice,\n\t},\n\t{\n\t\tName:     \"wipe forwarding packages\",\n\t\tTestFunc: testWipeForwardingPackages,\n\t},\n\t{\n\t\tName:     \"switch circuit persistence\",\n\t\tTestFunc: testSwitchCircuitPersistence,\n\t},\n\t{\n\t\tName:     \"switch offline delivery\",\n\t\tTestFunc: testSwitchOfflineDelivery,\n\t},\n\t{\n\t\tName:     \"switch offline delivery persistence\",\n\t\tTestFunc: testSwitchOfflineDeliveryPersistence,\n\t},\n\t{\n\t\tName:     \"switch offline delivery outgoing offline\",\n\t\tTestFunc: testSwitchOfflineDeliveryOutgoingOffline,\n\t},\n\t{\n\t\tName:     \"sendtoroute multi path payment\",\n\t\tTestFunc: testSendToRouteMultiPath,\n\t},\n\t{\n\t\tName:     \"send multi path payment\",\n\t\tTestFunc: testSendMultiPathPayment,\n\t},\n\t{\n\t\tName:     \"sendpayment amp invoice\",\n\t\tTestFunc: testSendPaymentAMPInvoice,\n\t},\n\t{\n\t\tName:     \"sendpayment amp invoice repeat\",\n\t\tTestFunc: testSendPaymentAMPInvoiceRepeat,\n\t},\n\t{\n\t\tName:     \"send payment amp\",\n\t\tTestFunc: testSendPaymentAMP,\n\t},\n\t{\n\t\tName:     \"sendtoroute amp\",\n\t\tTestFunc: testSendToRouteAMP,\n\t},\n\t{\n\t\tName:     \"forward interceptor dedup htlcs\",\n\t\tTestFunc: testForwardInterceptorDedupHtlc,\n\t},\n\t{\n\t\tName:     \"forward interceptor\",\n\t\tTestFunc: testForwardInterceptorBasic,\n\t},\n\t{\n\t\tName:     \"zero conf channel open\",\n\t\tTestFunc: testZeroConfChannelOpen,\n\t},\n\t{\n\t\tName:     \"option scid alias\",\n\t\tTestFunc: testOptionScidAlias,\n\t},\n\t{\n\t\tName:     \"scid alias channel update\",\n\t\tTestFunc: testUpdateChannelPolicyScidAlias,\n\t},\n\t{\n\t\tName:     \"scid alias upgrade\",\n\t\tTestFunc: testOptionScidUpgrade,\n\t},\n\t{\n\t\tName:     \"nonstd sweep\",\n\t\tTestFunc: testNonstdSweep,\n\t},\n\t{\n\t\tName:     \"multiple channel creation and update subscription\",\n\t\tTestFunc: testBasicChannelCreationAndUpdates,\n\t},\n\t{\n\t\tName:     \"derive shared key\",\n\t\tTestFunc: testDeriveSharedKey,\n\t},\n\t{\n\t\tName:     \"sign output raw\",\n\t\tTestFunc: testSignOutputRaw,\n\t},\n\t{\n\t\tName:     \"sign verify message\",\n\t\tTestFunc: testSignVerifyMessage,\n\t},\n\t{\n\t\tName:     \"cpfp\",\n\t\tTestFunc: testCPFP,\n\t},\n\t{\n\t\tName:     \"taproot\",\n\t\tTestFunc: testTaproot,\n\t},\n\t{\n\t\tName:     \"wallet import account\",\n\t\tTestFunc: testWalletImportAccount,\n\t},\n\t{\n\t\tName:     \"wallet import pubkey\",\n\t\tTestFunc: testWalletImportPubKey,\n\t},\n\t{\n\t\tName:     \"async payments benchmark\",\n\t\tTestFunc: testAsyncPayments,\n\t},\n\t{\n\t\tName:     \"remote signer\",\n\t\tTestFunc: testRemoteSigner,\n\t},\n\t{\n\t\tName:     \"taproot coop close\",\n\t\tTestFunc: testTaprootCoopClose,\n\t},\n\t{\n\t\tName:     \"trackpayments\",\n\t\tTestFunc: testTrackPayments,\n\t},\n\t{\n\t\tName:     \"open channel fee policy\",\n\t\tTestFunc: testOpenChannelUpdateFeePolicy,\n\t},\n\t{\n\t\tName:     \"custom message\",\n\t\tTestFunc: testCustomMessage,\n\t},\n\t{\n\t\tName:     \"sign verify message with addr\",\n\t\tTestFunc: testSignVerifyMessageWithAddr,\n\t},\n\t{\n\t\tName:     \"zero conf reorg edge existence\",\n\t\tTestFunc: testZeroConfReorg,\n\t},\n\t{\n\t\tName:     \"async bidirectional payments\",\n\t\tTestFunc: testBidirectionalAsyncPayments,\n\t},\n\t{\n\t\tName:     \"lookup htlc resolution\",\n\t\tTestFunc: testLookupHtlcResolution,\n\t},\n}\n",
      "length": 10402,
      "tokens": 1079,
      "embedding": []
    }
  ]
}