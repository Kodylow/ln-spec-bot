{
  "filepath": "../implementations/go/lnd/build/prefix_log.go",
  "package": "build",
  "sections": [
    {
      "slug": "type PrefixLog struct {",
      "content": "type PrefixLog struct {\n\tlog    btclog.Logger\n\tprefix string\n}\n\n// NewPrefixLog instantiates a new prefixed logger.",
      "length": 87,
      "tokens": 12,
      "embedding": []
    },
    {
      "slug": "func NewPrefixLog(prefix string, log btclog.Logger) *PrefixLog {",
      "content": "func NewPrefixLog(prefix string, log btclog.Logger) *PrefixLog {\n\treturn &PrefixLog{\n\t\tprefix: prefix,\n\t\tlog:    log,\n\t}\n}\n\n// addFormatPrefix prepends the prefix to a format string.",
      "length": 111,
      "tokens": 17,
      "embedding": []
    },
    {
      "slug": "func (p *PrefixLog) addFormatPrefix(s string) string {",
      "content": "func (p *PrefixLog) addFormatPrefix(s string) string {\n\treturn p.prefix + \" \" + s\n}\n\n// addArgsPrefix prepends the prefix to a list of arguments.",
      "length": 87,
      "tokens": 18,
      "embedding": []
    },
    {
      "slug": "func (p *PrefixLog) addArgsPrefix(args []interface{}) []interface{} {",
      "content": "func (p *PrefixLog) addArgsPrefix(args []interface{}) []interface{} {\n\treturn append([]interface{}{p.prefix}, args...)\n}\n\n// Tracef formats message according to format specifier and writes to to log\n// with LevelTrace.",
      "length": 144,
      "tokens": 20,
      "embedding": []
    },
    {
      "slug": "func (p *PrefixLog) Tracef(format string, params ...interface{}) {",
      "content": "func (p *PrefixLog) Tracef(format string, params ...interface{}) {\n\tp.log.Tracef(p.addFormatPrefix(format), params...)\n}\n\n// Debugf formats message according to format specifier and writes to log with\n// LevelDebug.",
      "length": 144,
      "tokens": 18,
      "embedding": []
    },
    {
      "slug": "func (p *PrefixLog) Debugf(format string, params ...interface{}) {",
      "content": "func (p *PrefixLog) Debugf(format string, params ...interface{}) {\n\tp.log.Debugf(p.addFormatPrefix(format), params...)\n}\n\n// Infof formats message according to format specifier and writes to log with\n// LevelInfo.",
      "length": 142,
      "tokens": 18,
      "embedding": []
    },
    {
      "slug": "func (p *PrefixLog) Infof(format string, params ...interface{}) {",
      "content": "func (p *PrefixLog) Infof(format string, params ...interface{}) {\n\tp.log.Infof(p.addFormatPrefix(format), params...)\n}\n\n// Warnf formats message according to format specifier and writes to to log with\n// LevelWarn.",
      "length": 144,
      "tokens": 19,
      "embedding": []
    },
    {
      "slug": "func (p *PrefixLog) Warnf(format string, params ...interface{}) {",
      "content": "func (p *PrefixLog) Warnf(format string, params ...interface{}) {\n\tp.log.Warnf(p.addFormatPrefix(format), params...)\n}\n\n// Errorf formats message according to format specifier and writes to to log\n// with LevelError.",
      "length": 146,
      "tokens": 19,
      "embedding": []
    },
    {
      "slug": "func (p *PrefixLog) Errorf(format string, params ...interface{}) {",
      "content": "func (p *PrefixLog) Errorf(format string, params ...interface{}) {\n\tp.log.Errorf(p.addFormatPrefix(format), params...)\n}\n\n// Criticalf formats message according to format specifier and writes to log\n// with LevelCritical.",
      "length": 150,
      "tokens": 18,
      "embedding": []
    },
    {
      "slug": "func (p *PrefixLog) Criticalf(format string, params ...interface{}) {",
      "content": "func (p *PrefixLog) Criticalf(format string, params ...interface{}) {\n\tp.log.Criticalf(p.addFormatPrefix(format), params...)\n}\n\n// Trace formats message using the default formats for its operands and writes\n// to log with LevelTrace.",
      "length": 159,
      "tokens": 21,
      "embedding": []
    },
    {
      "slug": "func (p *PrefixLog) Trace(v ...interface{}) {",
      "content": "func (p *PrefixLog) Trace(v ...interface{}) {\n\tp.log.Trace(p.addArgsPrefix(v)...)\n}\n\n// Debug formats message using the default formats for its operands and writes\n// to log with LevelDebug.",
      "length": 140,
      "tokens": 20,
      "embedding": []
    },
    {
      "slug": "func (p *PrefixLog) Debug(v ...interface{}) {",
      "content": "func (p *PrefixLog) Debug(v ...interface{}) {\n\tp.log.Debug(p.addArgsPrefix(v)...)\n}\n\n// Info formats message using the default formats for its operands and writes to\n// log with LevelInfo.",
      "length": 138,
      "tokens": 20,
      "embedding": []
    },
    {
      "slug": "func (p *PrefixLog) Info(v ...interface{}) {",
      "content": "func (p *PrefixLog) Info(v ...interface{}) {\n\tp.log.Info(p.addArgsPrefix(v)...)\n}\n\n// Warn formats message using the default formats for its operands and writes to\n// log with LevelWarn.",
      "length": 137,
      "tokens": 20,
      "embedding": []
    },
    {
      "slug": "func (p *PrefixLog) Warn(v ...interface{}) {",
      "content": "func (p *PrefixLog) Warn(v ...interface{}) {\n\tp.log.Warn(p.addArgsPrefix(v)...)\n}\n\n// Error formats message using the default formats for its operands and writes\n// to log with LevelError.",
      "length": 139,
      "tokens": 20,
      "embedding": []
    },
    {
      "slug": "func (p *PrefixLog) Error(v ...interface{}) {",
      "content": "func (p *PrefixLog) Error(v ...interface{}) {\n\tp.log.Error(p.addArgsPrefix(v)...)\n}\n\n// Critical formats message using the default formats for its operands and\n// writes to log with LevelCritical.",
      "length": 146,
      "tokens": 20,
      "embedding": []
    },
    {
      "slug": "func (p *PrefixLog) Critical(v ...interface{}) {",
      "content": "func (p *PrefixLog) Critical(v ...interface{}) {\n\tp.log.Critical(p.addArgsPrefix(v)...)\n}\n\n// Level returns the current logging level.",
      "length": 82,
      "tokens": 9,
      "embedding": []
    },
    {
      "slug": "func (p *PrefixLog) Level() btclog.Level {",
      "content": "func (p *PrefixLog) Level() btclog.Level {\n\treturn p.log.Level()\n}\n\n// SetLevel changes the logging level to the passed level.",
      "length": 80,
      "tokens": 13,
      "embedding": []
    },
    {
      "slug": "func (p *PrefixLog) SetLevel(level btclog.Level) {",
      "content": "func (p *PrefixLog) SetLevel(level btclog.Level) {\n\tp.log.SetLevel(level)\n}\n\n// Assert that PrefixLog fulfills the btclog.Logger interface.\nvar _ btclog.Logger = &PrefixLog{}\n",
      "length": 119,
      "tokens": 15,
      "embedding": []
    }
  ]
}