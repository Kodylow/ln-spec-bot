{
  "filepath": "../implementations/go/lnd/build/version.go",
  "package": "build",
  "sections": [
    {
      "slug": "func init() {",
      "content": "func init() {\n\t// Assert that AppPreRelease is valid according to the semantic\n\t// versioning guidelines for pre-release version and build metadata\n\t// strings. In particular it MUST only contain characters in\n\t// semanticAlphabet.\n\tfor _, r := range AppPreRelease {\n\t\tif !strings.ContainsRune(semanticAlphabet, r) {\n\t\t\tpanic(fmt.Errorf(\"rune: %v is not in the semantic \"+\n\t\t\t\t\"alphabet\", r))\n\t\t}\n\t}\n\n\t// Get build information from the runtime.\n\tif info, ok := debug.ReadBuildInfo(); ok {\n\t\tGoVersion = info.GoVersion\n\t\tfor _, setting := range info.Settings {\n\t\t\tswitch setting.Key {\n\t\t\tcase \"vcs.revision\":\n\t\t\t\tCommitHash = setting.Value\n\n\t\t\tcase \"-tags\":\n\t\t\t\tRawTags = setting.Value\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Version returns the application version as a properly formed string per the\n// semantic versioning 2.0.0 spec (http://semver.org/).",
      "length": 793,
      "tokens": 114,
      "embedding": []
    },
    {
      "slug": "func Version() string {",
      "content": "func Version() string {\n\t// Start with the major, minor, and patch versions.\n\tversion := fmt.Sprintf(\"%d.%d.%d\", AppMajor, AppMinor, AppPatch)\n\n\t// Append pre-release version if there is one. The hyphen called for by\n\t// the semantic versioning spec is automatically appended and should not\n\t// be contained in the pre-release string.\n\tif AppPreRelease != \"\" {\n\t\tversion = fmt.Sprintf(\"%s-%s\", version, AppPreRelease)\n\t}\n\n\treturn version\n}\n\n// Tags returns the list of build tags that were compiled into the executable.",
      "length": 482,
      "tokens": 74,
      "embedding": []
    },
    {
      "slug": "func Tags() []string {",
      "content": "func Tags() []string {\n\tif len(RawTags) == 0 {\n\t\treturn nil\n\t}\n\n\treturn strings.Split(RawTags, \",\")\n}\n",
      "length": 73,
      "tokens": 12,
      "embedding": []
    }
  ]
}