{
  "filepath": "../implementations/go/lnd/funding/commitment_type_negotiation_test.go",
  "package": "funding",
  "sections": [
    {
      "slug": "func TestCommitmentTypeNegotiation(t *testing.T) {",
      "content": "func TestCommitmentTypeNegotiation(t *testing.T) {\n\tt.Parallel()\n\n\ttestCases := []struct {\n\t\tname              string\n\t\tmustBeExplicit    bool\n\t\tchannelFeatures   *lnwire.RawFeatureVector\n\t\tlocalFeatures     *lnwire.RawFeatureVector\n\t\tremoteFeatures    *lnwire.RawFeatureVector\n\t\texpectsCommitType lnwallet.CommitmentType\n\t\texpectsChanType   lnwire.ChannelType\n\t\tzeroConf          bool\n\t\tscidAlias         bool\n\t\texpectsErr        error\n\t}{\n\t\t{\n\t\t\tname: \"explicit missing remote negotiation feature\",\n\t\t\tchannelFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyRequired,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxRequired,\n\t\t\t),\n\t\t\tlocalFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t\tlnwire.ExplicitChannelTypeOptional,\n\t\t\t),\n\t\t\tremoteFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t),\n\t\t\texpectsCommitType: lnwallet.CommitmentTypeAnchorsZeroFeeHtlcTx,\n\t\t\texpectsChanType: lnwire.ChannelType(*lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyRequired,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxRequired,\n\t\t\t)),\n\t\t\texpectsErr: nil,\n\t\t},\n\t\t{\n\t\t\tname: \"local funder wants explicit, remote doesn't \" +\n\t\t\t\t\"support so fall back\",\n\t\t\tmustBeExplicit: true,\n\t\t\tchannelFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyRequired,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxRequired,\n\t\t\t),\n\t\t\tlocalFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t\tlnwire.ExplicitChannelTypeOptional,\n\t\t\t),\n\t\t\tremoteFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t),\n\t\t\texpectsErr: errUnsupportedExplicitNegotiation,\n\t\t},\n\t\t{\n\t\t\tname: \"explicit missing remote commitment feature\",\n\t\t\tchannelFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyRequired,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxRequired,\n\t\t\t),\n\t\t\tlocalFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t\tlnwire.ExplicitChannelTypeOptional,\n\t\t\t),\n\t\t\tremoteFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.ExplicitChannelTypeOptional,\n\t\t\t),\n\t\t\texpectsErr: errUnsupportedChannelType,\n\t\t},\n\t\t{\n\t\t\tname: \"explicit zero-conf script enforced\",\n\t\t\tchannelFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.ZeroConfRequired,\n\t\t\t\tlnwire.StaticRemoteKeyRequired,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxRequired,\n\t\t\t\tlnwire.ScriptEnforcedLeaseRequired,\n\t\t\t),\n\t\t\tlocalFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.ZeroConfOptional,\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t\tlnwire.ScriptEnforcedLeaseOptional,\n\t\t\t\tlnwire.ExplicitChannelTypeOptional,\n\t\t\t),\n\t\t\tremoteFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.ZeroConfOptional,\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t\tlnwire.ScriptEnforcedLeaseOptional,\n\t\t\t\tlnwire.ExplicitChannelTypeOptional,\n\t\t\t),\n\t\t\texpectsCommitType: lnwallet.CommitmentTypeScriptEnforcedLease,\n\t\t\texpectsChanType: lnwire.ChannelType(\n\t\t\t\t*lnwire.NewRawFeatureVector(\n\t\t\t\t\tlnwire.ZeroConfRequired,\n\t\t\t\t\tlnwire.StaticRemoteKeyRequired,\n\t\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxRequired,\n\t\t\t\t\tlnwire.ScriptEnforcedLeaseRequired,\n\t\t\t\t),\n\t\t\t),\n\t\t\tzeroConf:   true,\n\t\t\texpectsErr: nil,\n\t\t},\n\t\t{\n\t\t\tname: \"explicit zero-conf anchors\",\n\t\t\tchannelFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.ZeroConfRequired,\n\t\t\t\tlnwire.StaticRemoteKeyRequired,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxRequired,\n\t\t\t),\n\t\t\tlocalFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.ZeroConfOptional,\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t\tlnwire.ExplicitChannelTypeOptional,\n\t\t\t),\n\t\t\tremoteFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.ZeroConfOptional,\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t\tlnwire.ExplicitChannelTypeOptional,\n\t\t\t),\n\t\t\texpectsCommitType: lnwallet.CommitmentTypeAnchorsZeroFeeHtlcTx,\n\t\t\texpectsChanType: lnwire.ChannelType(\n\t\t\t\t*lnwire.NewRawFeatureVector(\n\t\t\t\t\tlnwire.ZeroConfRequired,\n\t\t\t\t\tlnwire.StaticRemoteKeyRequired,\n\t\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxRequired,\n\t\t\t\t),\n\t\t\t),\n\t\t\tzeroConf:   true,\n\t\t\texpectsErr: nil,\n\t\t},\n\t\t{\n\t\t\tname: \"explicit scid-alias script enforced\",\n\t\t\tchannelFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.ScidAliasRequired,\n\t\t\t\tlnwire.StaticRemoteKeyRequired,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxRequired,\n\t\t\t\tlnwire.ScriptEnforcedLeaseRequired,\n\t\t\t),\n\t\t\tlocalFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.ScidAliasOptional,\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t\tlnwire.ScriptEnforcedLeaseOptional,\n\t\t\t\tlnwire.ExplicitChannelTypeOptional,\n\t\t\t),\n\t\t\tremoteFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.ScidAliasOptional,\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t\tlnwire.ScriptEnforcedLeaseOptional,\n\t\t\t\tlnwire.ExplicitChannelTypeOptional,\n\t\t\t),\n\t\t\texpectsCommitType: lnwallet.CommitmentTypeScriptEnforcedLease,\n\t\t\texpectsChanType: lnwire.ChannelType(\n\t\t\t\t*lnwire.NewRawFeatureVector(\n\t\t\t\t\tlnwire.ScidAliasRequired,\n\t\t\t\t\tlnwire.StaticRemoteKeyRequired,\n\t\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxRequired,\n\t\t\t\t\tlnwire.ScriptEnforcedLeaseRequired,\n\t\t\t\t),\n\t\t\t),\n\t\t\tscidAlias:  true,\n\t\t\texpectsErr: nil,\n\t\t},\n\t\t{\n\t\t\tname: \"explicit scid-alias anchors\",\n\t\t\tchannelFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.ScidAliasRequired,\n\t\t\t\tlnwire.StaticRemoteKeyRequired,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxRequired,\n\t\t\t),\n\t\t\tlocalFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.ScidAliasOptional,\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t\tlnwire.ExplicitChannelTypeOptional,\n\t\t\t),\n\t\t\tremoteFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.ScidAliasOptional,\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t\tlnwire.ExplicitChannelTypeOptional,\n\t\t\t),\n\t\t\texpectsCommitType: lnwallet.CommitmentTypeAnchorsZeroFeeHtlcTx,\n\t\t\texpectsChanType: lnwire.ChannelType(\n\t\t\t\t*lnwire.NewRawFeatureVector(\n\t\t\t\t\tlnwire.ScidAliasRequired,\n\t\t\t\t\tlnwire.StaticRemoteKeyRequired,\n\t\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxRequired,\n\t\t\t\t),\n\t\t\t),\n\t\t\tscidAlias:  true,\n\t\t\texpectsErr: nil,\n\t\t},\n\t\t{\n\t\t\tname: \"explicit anchors\",\n\t\t\tchannelFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyRequired,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxRequired,\n\t\t\t),\n\t\t\tlocalFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t\tlnwire.ExplicitChannelTypeOptional,\n\t\t\t),\n\t\t\tremoteFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t\tlnwire.ExplicitChannelTypeOptional,\n\t\t\t),\n\t\t\texpectsCommitType: lnwallet.CommitmentTypeAnchorsZeroFeeHtlcTx,\n\t\t\texpectsChanType: lnwire.ChannelType(*lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyRequired,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxRequired,\n\t\t\t)),\n\t\t\texpectsErr: nil,\n\t\t},\n\t\t{\n\t\t\tname: \"explicit tweakless\",\n\t\t\tchannelFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyRequired,\n\t\t\t),\n\t\t\tlocalFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t\tlnwire.ExplicitChannelTypeOptional,\n\t\t\t),\n\t\t\tremoteFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t\tlnwire.ExplicitChannelTypeOptional,\n\t\t\t),\n\t\t\texpectsCommitType: lnwallet.CommitmentTypeTweakless,\n\t\t\texpectsChanType: lnwire.ChannelType(*lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyRequired,\n\t\t\t)),\n\t\t\texpectsErr: nil,\n\t\t},\n\t\t{\n\t\t\tname:            \"explicit legacy\",\n\t\t\tchannelFeatures: lnwire.NewRawFeatureVector(),\n\t\t\tlocalFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t\tlnwire.ExplicitChannelTypeOptional,\n\t\t\t),\n\t\t\tremoteFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t\tlnwire.ExplicitChannelTypeOptional,\n\t\t\t),\n\t\t\texpectsCommitType: lnwallet.CommitmentTypeLegacy,\n\t\t\texpectsChanType:   lnwire.ChannelType(*lnwire.NewRawFeatureVector()),\n\t\t\texpectsErr:        nil,\n\t\t},\n\t\t// Both sides signal the explicit chan type bit, so we expect\n\t\t// that we return the corresponding chan type feature bits,\n\t\t// even though we didn't set an explicit channel type.\n\t\t{\n\t\t\tname:            \"implicit anchors\",\n\t\t\tchannelFeatures: nil,\n\t\t\tlocalFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t\tlnwire.ExplicitChannelTypeOptional,\n\t\t\t),\n\t\t\tremoteFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t\tlnwire.ExplicitChannelTypeOptional,\n\t\t\t),\n\t\t\texpectsCommitType: lnwallet.CommitmentTypeAnchorsZeroFeeHtlcTx,\n\t\t\texpectsChanType: lnwire.ChannelType(*lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyRequired,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxRequired,\n\t\t\t)),\n\t\t\texpectsErr: nil,\n\t\t},\n\t\t{\n\t\t\tname:            \"implicit tweakless\",\n\t\t\tchannelFeatures: nil,\n\t\t\tlocalFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t),\n\t\t\tremoteFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t),\n\t\t\texpectsCommitType: lnwallet.CommitmentTypeTweakless,\n\t\t\texpectsChanType: lnwire.ChannelType(*lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyRequired,\n\t\t\t)),\n\t\t\texpectsErr: nil,\n\t\t},\n\t\t{\n\t\t\tname:            \"implicit legacy\",\n\t\t\tchannelFeatures: nil,\n\t\t\tlocalFeatures:   lnwire.NewRawFeatureVector(),\n\t\t\tremoteFeatures: lnwire.NewRawFeatureVector(\n\t\t\t\tlnwire.StaticRemoteKeyOptional,\n\t\t\t\tlnwire.AnchorsZeroFeeHtlcTxOptional,\n\t\t\t),\n\t\t\texpectsCommitType: lnwallet.CommitmentTypeLegacy,\n\t\t\texpectsChanType:   lnwire.ChannelType(*lnwire.NewRawFeatureVector()),\n\t\t\texpectsErr:        nil,\n\t\t},\n\t}\n\n\tfor _, testCase := range testCases {\n\t\ttestCase := testCase\n\t\tok := t.Run(testCase.name, func(t *testing.T) {\n\t\t\tlocalFeatures := lnwire.NewFeatureVector(\n\t\t\t\ttestCase.localFeatures, lnwire.Features,\n\t\t\t)\n\t\t\tremoteFeatures := lnwire.NewFeatureVector(\n\t\t\t\ttestCase.remoteFeatures, lnwire.Features,\n\t\t\t)\n\n\t\t\tvar channelType *lnwire.ChannelType\n\t\t\tif testCase.channelFeatures != nil {\n\t\t\t\tchannelType = new(lnwire.ChannelType)\n\t\t\t\t*channelType = lnwire.ChannelType(\n\t\t\t\t\t*testCase.channelFeatures,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\t_, lChan, lCommit, err := negotiateCommitmentType(\n\t\t\t\tchannelType, localFeatures, remoteFeatures,\n\t\t\t\ttestCase.mustBeExplicit,\n\t\t\t)\n\n\t\t\tvar (\n\t\t\t\tlocalZc    bool\n\t\t\t\tlocalScid  bool\n\t\t\t\tremoteZc   bool\n\t\t\t\tremoteScid bool\n\t\t\t)\n\n\t\t\tif lChan != nil {\n\t\t\t\tlocalFv := lnwire.RawFeatureVector(*lChan)\n\t\t\t\tlocalZc = localFv.IsSet(\n\t\t\t\t\tlnwire.ZeroConfRequired,\n\t\t\t\t)\n\t\t\t\tlocalScid = localFv.IsSet(\n\t\t\t\t\tlnwire.ScidAliasRequired,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\trequire.Equal(t, testCase.zeroConf, localZc)\n\t\t\trequire.Equal(t, testCase.scidAlias, localScid)\n\t\t\trequire.Equal(t, testCase.expectsErr, err)\n\n\t\t\t_, rChan, rCommit, err := negotiateCommitmentType(\n\t\t\t\tchannelType, remoteFeatures, localFeatures,\n\t\t\t\ttestCase.mustBeExplicit,\n\t\t\t)\n\n\t\t\tif rChan != nil {\n\t\t\t\tremoteFv := lnwire.RawFeatureVector(*rChan)\n\t\t\t\tremoteZc = remoteFv.IsSet(\n\t\t\t\t\tlnwire.ZeroConfRequired,\n\t\t\t\t)\n\t\t\t\tremoteScid = remoteFv.IsSet(\n\t\t\t\t\tlnwire.ScidAliasRequired,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\trequire.Equal(t, testCase.zeroConf, remoteZc)\n\t\t\trequire.Equal(t, testCase.scidAlias, remoteScid)\n\t\t\trequire.Equal(t, testCase.expectsErr, err)\n\n\t\t\tif testCase.expectsErr != nil {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\trequire.Equal(\n\t\t\t\tt, testCase.expectsCommitType, lCommit,\n\t\t\t\ttestCase.name,\n\t\t\t)\n\t\t\trequire.Equal(\n\t\t\t\tt, testCase.expectsCommitType, rCommit,\n\t\t\t\ttestCase.name,\n\t\t\t)\n\n\t\t\trequire.Equal(\n\t\t\t\tt, testCase.expectsChanType, *lChan,\n\t\t\t\ttestCase.name,\n\t\t\t)\n\t\t\trequire.Equal(\n\t\t\t\tt, testCase.expectsChanType, *rChan,\n\t\t\t\ttestCase.name,\n\t\t\t)\n\t\t})\n\t\tif !ok {\n\t\t\treturn\n\t\t}\n\t}\n}\n",
      "length": 11568,
      "tokens": 653,
      "embedding": []
    }
  ]
}