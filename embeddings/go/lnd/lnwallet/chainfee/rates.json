{
  "filepath": "../implementations/go/lnd/lnwallet/chainfee/rates.go",
  "package": "chainfee",
  "sections": [
    {
      "slug": "type SatPerKVByte btcutil.Amount",
      "content": "type SatPerKVByte btcutil.Amount\n\n// FeeForVSize calculates the fee resulting from this fee rate and the given\n// vsize in vbytes.",
      "length": 95,
      "tokens": 17,
      "embedding": []
    },
    {
      "slug": "func (s SatPerKVByte) FeeForVSize(vbytes int64) btcutil.Amount {",
      "content": "func (s SatPerKVByte) FeeForVSize(vbytes int64) btcutil.Amount {\n\treturn btcutil.Amount(s) * btcutil.Amount(vbytes) / 1000\n}\n\n// FeePerKWeight converts the current fee rate from sat/kb to sat/kw.",
      "length": 127,
      "tokens": 18,
      "embedding": []
    },
    {
      "slug": "func (s SatPerKVByte) FeePerKWeight() SatPerKWeight {",
      "content": "func (s SatPerKVByte) FeePerKWeight() SatPerKWeight {\n\treturn SatPerKWeight(s / blockchain.WitnessScaleFactor)\n}\n\n// String returns a human-readable string of the fee rate.",
      "length": 115,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (s SatPerKVByte) String() string {",
      "content": "func (s SatPerKVByte) String() string {\n\treturn fmt.Sprintf(\"%v sat/kb\", int64(s))\n}\n\n// SatPerKWeight represents a fee rate in sat/kw.",
      "length": 92,
      "tokens": 13,
      "embedding": []
    },
    {
      "slug": "type SatPerKWeight btcutil.Amount",
      "content": "type SatPerKWeight btcutil.Amount\n\n// FeeForWeight calculates the fee resulting from this fee rate and the given\n// weight in weight units (wu).",
      "length": 108,
      "tokens": 19,
      "embedding": []
    },
    {
      "slug": "func (s SatPerKWeight) FeeForWeight(wu int64) btcutil.Amount {",
      "content": "func (s SatPerKWeight) FeeForWeight(wu int64) btcutil.Amount {\n\t// The resulting fee is rounded down, as specified in BOLT#03.\n\treturn btcutil.Amount(s) * btcutil.Amount(wu) / 1000\n}\n\n// FeePerKVByte converts the current fee rate from sat/kw to sat/kb.",
      "length": 185,
      "tokens": 29,
      "embedding": []
    },
    {
      "slug": "func (s SatPerKWeight) FeePerKVByte() SatPerKVByte {",
      "content": "func (s SatPerKWeight) FeePerKVByte() SatPerKVByte {\n\treturn SatPerKVByte(s * blockchain.WitnessScaleFactor)\n}\n\n// String returns a human-readable string of the fee rate.",
      "length": 114,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (s SatPerKWeight) String() string {",
      "content": "func (s SatPerKWeight) String() string {\n\treturn fmt.Sprintf(\"%v sat/kw\", int64(s))\n}\n",
      "length": 43,
      "tokens": 5,
      "embedding": []
    }
  ]
}