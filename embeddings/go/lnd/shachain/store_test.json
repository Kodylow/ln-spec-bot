{
  "filepath": "../implementations/go/lnd/shachain/store_test.go",
  "package": "shachain",
  "sections": [
    {
      "slug": "type testInsert struct {",
      "content": "type testInsert struct {\n\tindex      index\n\tsecret     string\n\tsuccessful bool\n}\n\n// tests encodes the test vectors specified in BOLT-03, Appendix D,\n// Storage Tests.\nvar tests = []struct {\n\tname    string\n\tinserts []testInsert\n}{\n\t{\n\t\tname: \"insert_secret correct sequence\",\n\t\tinserts: []testInsert{\n\t\t\t{\n\t\t\t\tindex: 281474976710655,\n\t\t\t\tsecret: \"7cc854b54e3e0dcdb010d7a3fee464a9687b\" +\n\t\t\t\t\t\"e6e8db3be6854c475621e007a5dc\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710654,\n\t\t\t\tsecret: \"c7518c8ae4660ed02894df8976fa1a3659c1\" +\n\t\t\t\t\t\"a8b4b5bec0c4b872abeba4cb8964\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710653,\n\t\t\t\tsecret: \"2273e227a5b7449b6e70f1fb4652864038b1\" +\n\t\t\t\t\t\"cbf9cd7c043a7d6456b7fc275ad8\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710652,\n\t\t\t\tsecret: \"27cddaa5624534cb6cb9d7da077cf2b22ab2\" +\n\t\t\t\t\t\"1e9b506fd4998a51d54502e99116\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710651,\n\t\t\t\tsecret: \"c65716add7aa98ba7acb236352d665cab173\" +\n\t\t\t\t\t\"45fe45b55fb879ff80e6bd0c41dd\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710650,\n\t\t\t\tsecret: \"969660042a28f32d9be17344e09374b37996\" +\n\t\t\t\t\t\"2d03db1574df5a8a5a47e19ce3f2\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710649,\n\t\t\t\tsecret: \"a5a64476122ca0925fb344bdc1854c1c0a59\" +\n\t\t\t\t\t\"fc614298e50a33e331980a220f32\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710648,\n\t\t\t\tsecret: \"05cde6323d949933f7f7b78776bcc1ea6d9b\" +\n\t\t\t\t\t\"31447732e3802e1f7ac44b650e17\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tname: \"insert_secret #1 incorrect\",\n\t\tinserts: []testInsert{\n\t\t\t{\n\t\t\t\tindex: 281474976710655,\n\t\t\t\tsecret: \"02a40c85b6f28da08dfdbe0926c53fab2d\" +\n\t\t\t\t\t\"e6d28c10301f8f7c4073d5e42e3148\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710654,\n\t\t\t\tsecret: \"c7518c8ae4660ed02894df8976fa1a3659\" +\n\t\t\t\t\t\"c1a8b4b5bec0c4b872abeba4cb8964\",\n\t\t\t\tsuccessful: false,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tname: \"insert_secret #2 incorrect (#1 derived from incorrect)\",\n\t\tinserts: []testInsert{\n\t\t\t{\n\t\t\t\tindex: 281474976710655,\n\t\t\t\tsecret: \"02a40c85b6f28da08dfdbe0926c53fab2de6\" +\n\t\t\t\t\t\"d28c10301f8f7c4073d5e42e3148\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710654,\n\t\t\t\tsecret: \"dddc3a8d14fddf2b68fa8c7fbad274827493\" +\n\t\t\t\t\t\"7479dd0f8930d5ebb4ab6bd866a3\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710653,\n\t\t\t\tsecret: \"2273e227a5b7449b6e70f1fb4652864038b1\" +\n\t\t\t\t\t\"cbf9cd7c043a7d6456b7fc275ad8\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710652,\n\t\t\t\tsecret: \"27cddaa5624534cb6cb9d7da077cf2b22a\" +\n\t\t\t\t\t\"b21e9b506fd4998a51d54502e99116\",\n\t\t\t\tsuccessful: false,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tname: \"insert_secret #3 incorrect\",\n\t\tinserts: []testInsert{\n\t\t\t{\n\t\t\t\tindex: 281474976710655,\n\t\t\t\tsecret: \"7cc854b54e3e0dcdb010d7a3fee464a9687b\" +\n\t\t\t\t\t\"e6e8db3be6854c475621e007a5dc\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710654,\n\t\t\t\tsecret: \"c7518c8ae4660ed02894df8976fa1a3659c1\" +\n\t\t\t\t\t\"a8b4b5bec0c4b872abeba4cb8964\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710653,\n\t\t\t\tsecret: \"c51a18b13e8527e579ec56365482c62f180b\" +\n\t\t\t\t\t\"7d5760b46e9477dae59e87ed423a\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710652,\n\t\t\t\tsecret: \"27cddaa5624534cb6cb9d7da077cf2b22ab2\" +\n\t\t\t\t\t\"1e9b506fd4998a51d54502e99116\",\n\t\t\t\tsuccessful: false,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tname: \"insert_secret #4 incorrect (1,2,3 derived from incorrect)\",\n\t\tinserts: []testInsert{\n\t\t\t{\n\t\t\t\tindex: 281474976710655,\n\t\t\t\tsecret: \"02a40c85b6f28da08dfdbe0926c53fab2de6\" +\n\t\t\t\t\t\"d28c10301f8f7c4073d5e42e3148\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710654,\n\t\t\t\tsecret: \"dddc3a8d14fddf2b68fa8c7fbad274827493\" +\n\t\t\t\t\t\"7479dd0f8930d5ebb4ab6bd866a3\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710653,\n\t\t\t\tsecret: \"c51a18b13e8527e579ec56365482c62f18\" +\n\t\t\t\t\t\"0b7d5760b46e9477dae59e87ed423a\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710652,\n\t\t\t\tsecret: \"ba65d7b0ef55a3ba300d4e87af29868f39\" +\n\t\t\t\t\t\"4f8f138d78a7011669c79b37b936f4\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710651,\n\t\t\t\tsecret: \"c65716add7aa98ba7acb236352d665cab1\" +\n\t\t\t\t\t\"7345fe45b55fb879ff80e6bd0c41dd\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710650,\n\t\t\t\tsecret: \"969660042a28f32d9be17344e09374b379\" +\n\t\t\t\t\t\"962d03db1574df5a8a5a47e19ce3f2\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710649,\n\t\t\t\tsecret: \"a5a64476122ca0925fb344bdc1854c1c0a\" +\n\t\t\t\t\t\"59fc614298e50a33e331980a220f32\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710649,\n\t\t\t\tsecret: \"05cde6323d949933f7f7b78776bcc1ea6d9b\" +\n\t\t\t\t\t\"31447732e3802e1f7ac44b650e17\",\n\t\t\t\tsuccessful: false,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tname: \"insert_secret #5 incorrect\",\n\t\tinserts: []testInsert{\n\t\t\t{\n\t\t\t\tindex: 281474976710655,\n\t\t\t\tsecret: \"7cc854b54e3e0dcdb010d7a3fee464a9687b\" +\n\t\t\t\t\t\"e6e8db3be6854c475621e007a5dc\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710654,\n\t\t\t\tsecret: \"c7518c8ae4660ed02894df8976fa1a3659c1a\" +\n\t\t\t\t\t\"8b4b5bec0c4b872abeba4cb8964\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710653,\n\t\t\t\tsecret: \"2273e227a5b7449b6e70f1fb4652864038b1\" +\n\t\t\t\t\t\"cbf9cd7c043a7d6456b7fc275ad8\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710652,\n\t\t\t\tsecret: \"27cddaa5624534cb6cb9d7da077cf2b22ab21\" +\n\t\t\t\t\t\"e9b506fd4998a51d54502e99116\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710651,\n\t\t\t\tsecret: \"631373ad5f9ef654bb3dade742d09504c567\" +\n\t\t\t\t\t\"edd24320d2fcd68e3cc47e2ff6a6\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710650,\n\t\t\t\tsecret: \"969660042a28f32d9be17344e09374b37996\" +\n\t\t\t\t\t\"2d03db1574df5a8a5a47e19ce3f2\",\n\t\t\t\tsuccessful: false,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tname: \"insert_secret #6 incorrect (5 derived from incorrect)\",\n\t\tinserts: []testInsert{\n\t\t\t{\n\t\t\t\tindex: 281474976710655,\n\t\t\t\tsecret: \"7cc854b54e3e0dcdb010d7a3fee464a9687b\" +\n\t\t\t\t\t\"e6e8db3be6854c475621e007a5dc\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710654,\n\t\t\t\tsecret: \"c7518c8ae4660ed02894df8976fa1a3659c1a\" +\n\t\t\t\t\t\"8b4b5bec0c4b872abeba4cb8964\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710653,\n\t\t\t\tsecret: \"2273e227a5b7449b6e70f1fb4652864038b1\" +\n\t\t\t\t\t\"cbf9cd7c043a7d6456b7fc275ad8\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710652,\n\t\t\t\tsecret: \"27cddaa5624534cb6cb9d7da077cf2b22ab21\" +\n\t\t\t\t\t\"e9b506fd4998a51d54502e99116\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710651,\n\t\t\t\tsecret: \"631373ad5f9ef654bb3dade742d09504c567\" +\n\t\t\t\t\t\"edd24320d2fcd68e3cc47e2ff6a6\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710650,\n\t\t\t\tsecret: \"b7e76a83668bde38b373970155c868a65330\" +\n\t\t\t\t\t\"4308f9896692f904a23731224bb1\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710649,\n\t\t\t\tsecret: \"a5a64476122ca0925fb344bdc1854c1c0a59f\" +\n\t\t\t\t\t\"c614298e50a33e331980a220f32\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710648,\n\t\t\t\tsecret: \"05cde6323d949933f7f7b78776bcc1ea6d9b\" +\n\t\t\t\t\t\"31447732e3802e1f7ac44b650e17\",\n\t\t\t\tsuccessful: false,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tname: \"insert_secret #7 incorrect\",\n\t\tinserts: []testInsert{\n\t\t\t{\n\t\t\t\tindex: 281474976710655,\n\t\t\t\tsecret: \"7cc854b54e3e0dcdb010d7a3fee464a9687b\" +\n\t\t\t\t\t\"e6e8db3be6854c475621e007a5dc\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710654,\n\t\t\t\tsecret: \"c7518c8ae4660ed02894df8976fa1a3659c1a\" +\n\t\t\t\t\t\"8b4b5bec0c4b872abeba4cb8964\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710653,\n\t\t\t\tsecret: \"2273e227a5b7449b6e70f1fb4652864038b1\" +\n\t\t\t\t\t\"cbf9cd7c043a7d6456b7fc275ad8\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710652,\n\t\t\t\tsecret: \"27cddaa5624534cb6cb9d7da077cf2b22ab21\" +\n\t\t\t\t\t\"e9b506fd4998a51d54502e99116\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710651,\n\t\t\t\tsecret: \"c65716add7aa98ba7acb236352d665cab173\" +\n\t\t\t\t\t\"45fe45b55fb879ff80e6bd0c41dd\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710650,\n\t\t\t\tsecret: \"969660042a28f32d9be17344e09374b37996\" +\n\t\t\t\t\t\"2d03db1574df5a8a5a47e19ce3f2\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710649,\n\t\t\t\tsecret: \"e7971de736e01da8ed58b94c2fc216cb1d\" +\n\t\t\t\t\t\"ca9e326f3a96e7194fe8ea8af6c0a3\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710648,\n\t\t\t\tsecret: \"05cde6323d949933f7f7b78776bcc1ea6d\" +\n\t\t\t\t\t\"9b31447732e3802e1f7ac44b650e17\",\n\t\t\t\tsuccessful: false,\n\t\t\t},\n\t\t},\n\t},\n\t{\n\t\tname: \"insert_secret #8 incorrect\",\n\t\tinserts: []testInsert{\n\t\t\t{\n\t\t\t\tindex: 281474976710655,\n\t\t\t\tsecret: \"7cc854b54e3e0dcdb010d7a3fee464a9687b\" +\n\t\t\t\t\t\"e6e8db3be6854c475621e007a5dc\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710654,\n\t\t\t\tsecret: \"c7518c8ae4660ed02894df8976fa1a3659c1a\" +\n\t\t\t\t\t\"8b4b5bec0c4b872abeba4cb8964\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710653,\n\t\t\t\tsecret: \"2273e227a5b7449b6e70f1fb4652864038b1\" +\n\t\t\t\t\t\"cbf9cd7c043a7d6456b7fc275ad8\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710652,\n\t\t\t\tsecret: \"27cddaa5624534cb6cb9d7da077cf2b22ab21\" +\n\t\t\t\t\t\"e9b506fd4998a51d54502e99116\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710651,\n\t\t\t\tsecret: \"c65716add7aa98ba7acb236352d665cab173\" +\n\t\t\t\t\t\"45fe45b55fb879ff80e6bd0c41dd\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710650,\n\t\t\t\tsecret: \"969660042a28f32d9be17344e09374b37996\" +\n\t\t\t\t\t\"2d03db1574df5a8a5a47e19ce3f2\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710649,\n\t\t\t\tsecret: \"a5a64476122ca0925fb344bdc1854c1c0a\" +\n\t\t\t\t\t\"59fc614298e50a33e331980a220f32\",\n\t\t\t\tsuccessful: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tindex: 281474976710648,\n\t\t\t\tsecret: \"a7efbc61aac46d34f77778bac22c8a20c6\" +\n\t\t\t\t\t\"a46ca460addc49009bda875ec88fa4\",\n\t\t\t\tsuccessful: false,\n\t\t\t},\n\t\t},\n\t},\n}\n\n// TestSpecificationShaChainInsert is used to check the consistency with\n// specification hash insert function.",
      "length": 9155,
      "tokens": 699,
      "embedding": []
    },
    {
      "slug": "func TestSpecificationShaChainInsert(t *testing.T) {",
      "content": "func TestSpecificationShaChainInsert(t *testing.T) {\n\tt.Parallel()\n\n\tfor _, test := range tests {\n\t\treceiver := NewRevocationStore()\n\n\t\tfor _, insert := range test.inserts {\n\t\t\tsecret, err := hashFromString(insert.secret)\n\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}\n\n\t\t\tif err := receiver.AddNextEntry(secret); err != nil {\n\t\t\t\tif insert.successful {\n\t\t\t\t\tt.Fatalf(\"Failed (%v): error was \"+\n\t\t\t\t\t\t\"received but it shouldn't: \"+\n\t\t\t\t\t\t\"%v\", test.name, err)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif !insert.successful {\n\t\t\t\t\tt.Fatalf(\"Failed (%v): error wasn't \"+\n\t\t\t\t\t\t\"received\", test.name)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tt.Logf(\"Passed (%v)\", test.name)\n\t}\n}\n\n// TestShaChainStore checks the ability of shachain store to hold the produced\n// secrets after recovering from bytes data.",
      "length": 670,
      "tokens": 94,
      "embedding": []
    },
    {
      "slug": "func TestShaChainStore(t *testing.T) {",
      "content": "func TestShaChainStore(t *testing.T) {\n\tt.Parallel()\n\n\tseed := chainhash.DoubleHashH([]byte(\"shachaintest\"))\n\n\tsender := NewRevocationProducer(seed)\n\treceiver := NewRevocationStore()\n\n\tfor n := uint64(0); n < 10000; n++ {\n\t\tsha, err := sender.AtIndex(n)\n\t\tif err != nil {\n\t\t\tt.Fatal(err)\n\t\t}\n\n\t\tif err = receiver.AddNextEntry(sha); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}\n\t}\n\n\tvar b bytes.Buffer\n\tif err := receiver.Encode(&b); err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tnewReceiver, err := NewRevocationStoreFromBytes(&b)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tfor n := uint64(0); n < 10000; n++ {\n\t\tif _, err := newReceiver.LookUp(n); err != nil {\n\t\t\tt.Fatal(err)\n\t\t}\n\t}\n}\n",
      "length": 583,
      "tokens": 87,
      "embedding": []
    }
  ]
}