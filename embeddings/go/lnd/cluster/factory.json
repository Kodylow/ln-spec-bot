{
  "filepath": "../implementations/go/lnd/cluster/factory.go",
  "package": "cluster",
  "sections": [
    {
      "slug": "type leaderElectorFactoryFunc func(context.Context, ...interface{}) (",
      "content": "type leaderElectorFactoryFunc func(context.Context, ...interface{}) (\n\tLeaderElector, error)\n\nvar leaderElectorFactories map[string]leaderElectorFactoryFunc\n\n// RegisterLeaderElectorFactory will register a new LeaderElector factory\n// method corresponding to the passed id.",
      "length": 198,
      "tokens": 20,
      "embedding": []
    },
    {
      "slug": "func RegisterLeaderElectorFactory(id string, factory leaderElectorFactoryFunc) {",
      "content": "func RegisterLeaderElectorFactory(id string, factory leaderElectorFactoryFunc) {\n\tif leaderElectorFactories == nil {\n\t\tleaderElectorFactories = make(\n\t\t\tmap[string]leaderElectorFactoryFunc,\n\t\t)\n\t}\n\n\tleaderElectorFactories[id] = factory\n}\n\n// MakeLeaderElector will construct a LeaderElector identified by id with the\n// passed arguments.",
      "length": 246,
      "tokens": 29,
      "embedding": []
    },
    {
      "slug": "func MakeLeaderElector(ctx context.Context, id string, args ...interface{}) (",
      "content": "func MakeLeaderElector(ctx context.Context, id string, args ...interface{}) (\n\tLeaderElector, error) {\n\n\tif _, ok := leaderElectorFactories[id]; !ok {\n\t\treturn nil, fmt.Errorf(\"leader elector factory for '%v' \"+\n\t\t\t\"not found\", id)\n\t}\n\n\treturn leaderElectorFactories[id](ctx, args...)\n}\n",
      "length": 200,
      "tokens": 26,
      "embedding": []
    }
  ]
}