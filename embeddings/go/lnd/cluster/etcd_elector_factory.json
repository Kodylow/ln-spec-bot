{
  "filepath": "../implementations/go/lnd/cluster/etcd_elector_factory.go",
  "package": "cluster",
  "sections": [
    {
      "slug": "//go:build kvdb_etcd",
      "content": "//go:build kvdb_etcd\n// +build kvdb_etcd\n\npackage cluster\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\n\t\"github.com/lightningnetwork/lnd/kvdb/etcd\"\n)\n\n// makeEtcdElector will construct a new etcdLeaderElector. It expects a cancel\n// context a unique (in the cluster) LND id and a *etcd.Config as arguments.",
      "length": 257,
      "tokens": 36,
      "embedding": []
    },
    {
      "slug": "func makeEtcdElector(ctx context.Context, args ...interface{}) (LeaderElector,",
      "content": "func makeEtcdElector(ctx context.Context, args ...interface{}) (LeaderElector,\n\terror) {\n\n\tif len(args) != 4 {\n\t\treturn nil, fmt.Errorf(\"invalid number of arguments to \"+\n\t\t\t\"cluster.makeEtcdElector(): expected 4, got %v\",\n\t\t\tlen(args))\n\t}\n\n\tid, ok := args[0].(string)\n\tif !ok {\n\t\treturn nil, fmt.Errorf(\"invalid argument (0) to \" +\n\t\t\t\"cluster.makeEtcdElector(), expected: string\")\n\t}\n\n\telectionPrefix, ok := args[1].(string)\n\tif !ok {\n\t\treturn nil, fmt.Errorf(\"invalid argument (1) to \" +\n\t\t\t\"cluster.makeEtcdElector(), expected: string\")\n\t}\n\n\tleaderSessionTTL, ok := args[2].(int)\n\tif !ok {\n\t\treturn nil, fmt.Errorf(\"invalid argument (2) to \" +\n\t\t\t\"cluster.makeEtcdElector(), expected: int\")\n\t}\n\n\tetcdCfg, ok := args[3].(*etcd.Config)\n\tif !ok {\n\t\treturn nil, fmt.Errorf(\"invalid argument (3) to \" +\n\t\t\t\"cluster.makeEtcdElector(), expected: *etcd.Config\")\n\t}\n\n\treturn newEtcdLeaderElector(\n\t\tctx, id, electionPrefix, leaderSessionTTL, etcdCfg,\n\t)\n}\n",
      "length": 836,
      "tokens": 107,
      "embedding": []
    },
    {
      "slug": "func init() {",
      "content": "func init() {\n\tRegisterLeaderElectorFactory(EtcdLeaderElector, makeEtcdElector)\n}\n",
      "length": 66,
      "tokens": 3,
      "embedding": []
    }
  ]
}