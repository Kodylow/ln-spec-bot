{
  "filepath": "../implementations/go/lnd/zpay32/invoice_test.go",
  "package": "zpay32",
  "sections": [
    {
      "slug": "func init() {",
      "content": "func init() {\n\tcopy(testDescriptionHash[:], testDescriptionHashSlice[:])\n\n\t// Initialize litecoin testnet and mainnet params by applying key fields\n\t// to copies of bitcoin params.\n\t// TODO(sangaman): create an interface for chaincfg.params\n\tltcTestNetParams = chaincfg.TestNet3Params\n\tltcTestNetParams.Net = wire.BitcoinNet(litecoinCfg.TestNet4Params.Net)\n\tltcTestNetParams.Bech32HRPSegwit = litecoinCfg.TestNet4Params.Bech32HRPSegwit\n\tltcMainNetParams = chaincfg.MainNetParams\n\tltcMainNetParams.Net = wire.BitcoinNet(litecoinCfg.MainNetParams.Net)\n\tltcMainNetParams.Bech32HRPSegwit = litecoinCfg.MainNetParams.Bech32HRPSegwit\n}\n\n// TestDecodeEncode tests that an encoded invoice gets decoded into the expected\n// Invoice object, and that reencoding the decoded invoice gets us back to the\n// original encoded string.",
      "length": 789,
      "tokens": 75,
      "embedding": []
    },
    {
      "slug": "func TestDecodeEncode(t *testing.T) {",
      "content": "func TestDecodeEncode(t *testing.T) {\n\tt.Parallel()\n\n\ttests := []struct {\n\t\tencodedInvoice string\n\t\tvalid          bool\n\t\tdecodedInvoice func() *Invoice\n\t\tskipEncoding   bool\n\t\tbeforeEncoding func(*Invoice)\n\t}{\n\t\t{\n\t\t\tencodedInvoice: \"asdsaddnasdnas\", // no hrp\n\t\t\tvalid:          false,\n\t\t},\n\t\t{\n\t\t\tencodedInvoice: \"lnbc1abcde\", // too short\n\t\t\tvalid:          false,\n\t\t},\n\t\t{\n\t\t\tencodedInvoice: \"1asdsaddnv4wudz\", // empty hrp\n\t\t\tvalid:          false,\n\t\t},\n\t\t{\n\t\t\tencodedInvoice: \"ln1asdsaddnv4wudz\", // hrp too short\n\t\t\tvalid:          false,\n\t\t},\n\t\t{\n\t\t\tencodedInvoice: \"llts1dasdajtkfl6\", // no \"ln\" prefix\n\t\t\tvalid:          false,\n\t\t},\n\t\t{\n\t\t\tencodedInvoice: \"lnts1dasdapukz0w\", // invalid segwit prefix\n\t\t\tvalid:          false,\n\t\t},\n\t\t{\n\t\t\tencodedInvoice: \"lnbcm1aaamcu25m\", // invalid amount\n\t\t\tvalid:          false,\n\t\t},\n\t\t{\n\t\t\tencodedInvoice: \"lnbc1000000000m1\", // invalid amount\n\t\t\tvalid:          false,\n\t\t},\n\t\t{\n\t\t\tencodedInvoice: \"lnbc20m1pvjluezhp58yjmdan79s6qqdhdzgynm4zwqd5d7xmw5fk98klysy043l2ahrqspp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqfqqepvrhrm9s57hejg0p662ur5j5cr03890fa7k2pypgttmh4897d3raaq85a293e9jpuqwl0rnfuwzam7yr8e690nd2ypcq9hlkdwdvycqjhlqg5\", // empty fallback address field\n\t\t\tvalid:          false,\n\t\t},\n\t\t{\n\t\t\tencodedInvoice: \"lnbc20m1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqhp58yjmdan79s6qqdhdzgynm4zwqd5d7xmw5fk98klysy043l2ahrqsfpp3qjmp7lwpagxun9pygexvgpjdc4jdj85frqg00000000j9n4evl6mr5aj9f58zp6fyjzup6ywn3x6sk8akg5v4tgn2q8g4fhx05wf6juaxu9760yp46454gpg5mtzgerlzezqcqvjnhjh8z3g2qqsj5cgu\", // invalid routing info length: not a multiple of 51\n\t\t\tvalid:          false,\n\t\t},\n\t\t{\n\t\t\t// no payment hash set\n\t\t\tencodedInvoice: \"lnbc20m1pvjluezhp58yjmdan79s6qqdhdzgynm4zwqd5d7xmw5fk98klysy043l2ahrqsjv38luh6p6s2xrv3mzvlmzaya43376h0twal5ax0k6p47498hp3hnaymzhsn424rxqjs0q7apn26yrhaxltq3vzwpqj9nc2r3kzwccsplnq470\",\n\t\t\tvalid:          false,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\treturn &Invoice{\n\t\t\t\t\tNet:             &chaincfg.MainNetParams,\n\t\t\t\t\tMilliSat:        &testMillisat20mBTC,\n\t\t\t\t\tTimestamp:       time.Unix(1496314658, 0),\n\t\t\t\t\tDescriptionHash: &testDescriptionHash,\n\t\t\t\t\tDestination:     testPubKey,\n\t\t\t\t\tFeatures:        emptyFeatures,\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// Both Description and DescriptionHash set.\n\t\t\tencodedInvoice: \"lnbc20m1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdpl2pkx2ctnv5sxxmmwwd5kgetjypeh2ursdae8g6twvus8g6rfwvs8qun0dfjkxaqhp58yjmdan79s6qqdhdzgynm4zwqd5d7xmw5fk98klysy043l2ahrqs03vghs8y0kuj4ulrzls8ln7fnm9dk7sjsnqmghql6hd6jut36clkqpyuq0s5m6fhureyz0szx2qjc8hkgf4xc2hpw8jpu26jfeyvf4cpga36gt\",\n\t\t\tvalid:          false,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\treturn &Invoice{\n\t\t\t\t\tNet:             &chaincfg.MainNetParams,\n\t\t\t\t\tMilliSat:        &testMillisat20mBTC,\n\t\t\t\t\tTimestamp:       time.Unix(1496314658, 0),\n\t\t\t\t\tPaymentHash:     &testPaymentHash,\n\t\t\t\t\tDescription:     &testPleaseConsider,\n\t\t\t\t\tDescriptionHash: &testDescriptionHash,\n\t\t\t\t\tDestination:     testPubKey,\n\t\t\t\t\tFeatures:        emptyFeatures,\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// Neither Description nor DescriptionHash set.\n\t\t\tencodedInvoice: \"lnbc20m1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqn2rne0kagfl4e0xag0w6hqeg2dwgc54hrm9m0auw52dhwhwcu559qav309h598pyzn69wh2nqauneyyesnpmaax0g6acr8lh9559jmcquyq5a9\",\n\t\t\tvalid:          false,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\treturn &Invoice{\n\t\t\t\t\tNet:         &chaincfg.MainNetParams,\n\t\t\t\t\tMilliSat:    &testMillisat20mBTC,\n\t\t\t\t\tTimestamp:   time.Unix(1496314658, 0),\n\t\t\t\t\tPaymentHash: &testPaymentHash,\n\t\t\t\t\tDestination: testPubKey,\n\t\t\t\t\tFeatures:    emptyFeatures,\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// Has a few unknown fields, should just be ignored.\n\t\t\tencodedInvoice: \"lnbc20m1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdpl2pkx2ctnv5sxxmmwwd5kgetjypeh2ursdae8g6twvus8g6rfwvs8qun0dfjkxaqtq2v93xxer9vczq8v93xxeqv72xr42ca60022jqu6fu73n453tmnr0ukc0pl0t23w7eavtensjz0j2wcu7nkxhfdgp9y37welajh5kw34mq7m4xuay0a72cwec8qwgqt5vqht\",\n\t\t\tvalid:          true,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\treturn &Invoice{\n\t\t\t\t\tNet:         &chaincfg.MainNetParams,\n\t\t\t\t\tMilliSat:    &testMillisat20mBTC,\n\t\t\t\t\tTimestamp:   time.Unix(1496314658, 0),\n\t\t\t\t\tPaymentHash: &testPaymentHash,\n\t\t\t\t\tDescription: &testPleaseConsider,\n\t\t\t\t\tDestination: testPubKey,\n\t\t\t\t\tFeatures:    emptyFeatures,\n\t\t\t\t}\n\t\t\t},\n\t\t\tskipEncoding: true, // Skip encoding since we don't have the unknown fields to encode.\n\t\t},\n\t\t{\n\t\t\t// Ignore unknown witness version in fallback address.\n\t\t\tencodedInvoice: \"lnbc20m1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqhp58yjmdan79s6qqdhdzgynm4zwqd5d7xmw5fk98klysy043l2ahrqsfpppw508d6qejxtdg4y5r3zarvary0c5xw7k8txqv6x0a75xuzp0zsdzk5hq6tmfgweltvs6jk5nhtyd9uqksvr48zga9mw08667w8264gkspluu66jhtcmct36nx363km6cquhhv2cpc6q43r\",\n\t\t\tvalid:          true,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\treturn &Invoice{\n\t\t\t\t\tNet:             &chaincfg.MainNetParams,\n\t\t\t\t\tMilliSat:        &testMillisat20mBTC,\n\t\t\t\t\tTimestamp:       time.Unix(1496314658, 0),\n\t\t\t\t\tPaymentHash:     &testPaymentHash,\n\t\t\t\t\tDescriptionHash: &testDescriptionHash,\n\t\t\t\t\tDestination:     testPubKey,\n\t\t\t\t\tFeatures:        emptyFeatures,\n\t\t\t\t}\n\t\t\t},\n\t\t\tskipEncoding: true, // Skip encoding since we don't have the unknown fields to encode.\n\t\t},\n\t\t{\n\t\t\t// Ignore fields with unknown lengths.\n\t\t\tencodedInvoice: \"lnbc241pveeq09pp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqpp3qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqhp58yjmdan79s6qqdhdzgynm4zwqd5d7xmw5fk98klysy043l2ahrqshp38yjmdan79s6qqdhdzgynm4zwqd5d7xmw5fk98klysy043l2ahnp4q0n326hr8v9zprg8gsvezcch06gfaqqhde2aj730yg0durunfhv66np3q0n326hr8v9zprg8gsvezcch06gfaqqhde2aj730yg0durunfy8huflvs2zwkymx47cszugvzn5v64ahemzzlmm62rpn9l9rm05h35aceq00tkt296289wepws9jh4499wq2l0vk6xcxffd90dpuqchqqztyayq\",\n\t\t\tvalid:          true,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\treturn &Invoice{\n\t\t\t\t\tNet:             &chaincfg.MainNetParams,\n\t\t\t\t\tMilliSat:        &testMillisat24BTC,\n\t\t\t\t\tTimestamp:       time.Unix(1503429093, 0),\n\t\t\t\t\tPaymentHash:     &testPaymentHash,\n\t\t\t\t\tDestination:     testPubKey,\n\t\t\t\t\tDescriptionHash: &testDescriptionHash,\n\t\t\t\t\tFeatures:        emptyFeatures,\n\t\t\t\t}\n\t\t\t},\n\t\t\tskipEncoding: true, // Skip encoding since we don't have the unknown fields to encode.\n\t\t},\n\t\t{\n\t\t\t// Invoice with no amount.\n\t\t\tencodedInvoice: \"lnbc1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdq5xysxxatsyp3k7enxv4jshwlglv23cytkzvq8ld39drs8sq656yh2zn0aevrwu6uqctaklelhtpjnmgjdzmvwsh0kuxuwqf69fjeap9m5mev2qzpp27xfswhs5vgqmn9xzq\",\n\t\t\tvalid:          true,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\treturn &Invoice{\n\t\t\t\t\tNet:         &chaincfg.MainNetParams,\n\t\t\t\t\tTimestamp:   time.Unix(1496314658, 0),\n\t\t\t\t\tPaymentHash: &testPaymentHash,\n\t\t\t\t\tDescription: &testCupOfCoffee,\n\t\t\t\t\tDestination: testPubKey,\n\t\t\t\t\tFeatures:    emptyFeatures,\n\t\t\t\t}\n\t\t\t},\n\t\t\tbeforeEncoding: func(i *Invoice) {\n\t\t\t\t// Since this destination pubkey was recovered\n\t\t\t\t// from the signature, we must set it nil before\n\t\t\t\t// encoding to get back the same invoice string.\n\t\t\t\ti.Destination = nil\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// Please make a donation of any amount using rhash 0001020304050607080900010203040506070809000102030405060708090102 to me @03e7156ae33b0a208d0744199163177e909e80176e55d97a2f221ede0f934dd9ad\n\t\t\tencodedInvoice: \"lnbc1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdpl2pkx2ctnv5sxxmmwwd5kgetjypeh2ursdae8g6twvus8g6rfwvs8qun0dfjkxaq8rkx3yf5tcsyz3d73gafnh3cax9rn449d9p5uxz9ezhhypd0elx87sjle52x86fux2ypatgddc6k63n7erqz25le42c4u4ecky03ylcqca784w\",\n\t\t\tvalid:          true,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\treturn &Invoice{\n\t\t\t\t\tNet:         &chaincfg.MainNetParams,\n\t\t\t\t\tTimestamp:   time.Unix(1496314658, 0),\n\t\t\t\t\tPaymentHash: &testPaymentHash,\n\t\t\t\t\tDescription: &testPleaseConsider,\n\t\t\t\t\tDestination: testPubKey,\n\t\t\t\t\tFeatures:    emptyFeatures,\n\t\t\t\t}\n\t\t\t},\n\t\t\tbeforeEncoding: func(i *Invoice) {\n\t\t\t\t// Since this destination pubkey was recovered\n\t\t\t\t// from the signature, we must set it nil before\n\t\t\t\t// encoding to get back the same invoice string.\n\t\t\t\ti.Destination = nil\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// Same as above, pubkey set in 'n' field.\n\t\t\tencodedInvoice: \"lnbc241pveeq09pp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdqqnp4q0n326hr8v9zprg8gsvezcch06gfaqqhde2aj730yg0durunfhv66jd3m5klcwhq68vdsmx2rjgxeay5v0tkt2v5sjaky4eqahe4fx3k9sqavvce3capfuwv8rvjng57jrtfajn5dkpqv8yelsewtljwmmycq62k443\",\n\t\t\tvalid:          true,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\treturn &Invoice{\n\t\t\t\t\tNet:         &chaincfg.MainNetParams,\n\t\t\t\t\tMilliSat:    &testMillisat24BTC,\n\t\t\t\t\tTimestamp:   time.Unix(1503429093, 0),\n\t\t\t\t\tPaymentHash: &testPaymentHash,\n\t\t\t\t\tDestination: testPubKey,\n\t\t\t\t\tDescription: &testEmptyString,\n\t\t\t\t\tFeatures:    emptyFeatures,\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// Please send $3 for a cup of coffee to the same peer, within 1 minute\n\t\t\tencodedInvoice: \"lnbc2500u1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdq5xysxxatsyp3k7enxv4jsxqzpuaztrnwngzn3kdzw5hydlzf03qdgm2hdq27cqv3agm2awhz5se903vruatfhq77w3ls4evs3ch9zw97j25emudupq63nyw24cg27h2rspfj9srp\",\n\t\t\tvalid:          true,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\ti, _ := NewInvoice(\n\t\t\t\t\t&chaincfg.MainNetParams,\n\t\t\t\t\ttestPaymentHash,\n\t\t\t\t\ttime.Unix(1496314658, 0),\n\t\t\t\t\tAmount(testMillisat2500uBTC),\n\t\t\t\t\tDescription(testCupOfCoffee),\n\t\t\t\t\tDestination(testPubKey),\n\t\t\t\t\tExpiry(testExpiry60))\n\t\t\t\treturn i\n\t\t\t},\n\t\t\tbeforeEncoding: func(i *Invoice) {\n\t\t\t\t// Since this destination pubkey was recovered\n\t\t\t\t// from the signature, we must set it nil before\n\t\t\t\t// encoding to get back the same invoice string.\n\t\t\t\ti.Destination = nil\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// Please send 0.0025 BTC for a cup of nonsense (\u30ca\u30f3\u30bb\u30f3\u30b9 1\u676f) to the same peer, within 1 minute\n\t\t\tencodedInvoice: \"lnbc2500u1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdpquwpc4curk03c9wlrswe78q4eyqc7d8d0xqzpuyk0sg5g70me25alkluzd2x62aysf2pyy8edtjeevuv4p2d5p76r4zkmneet7uvyakky2zr4cusd45tftc9c5fh0nnqpnl2jfll544esqchsrny\",\n\t\t\tvalid:          true,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\ti, _ := NewInvoice(\n\t\t\t\t\t&chaincfg.MainNetParams,\n\t\t\t\t\ttestPaymentHash,\n\t\t\t\t\ttime.Unix(1496314658, 0),\n\t\t\t\t\tAmount(testMillisat2500uBTC),\n\t\t\t\t\tDescription(testCupOfNonsense),\n\t\t\t\t\tDestination(testPubKey),\n\t\t\t\t\tExpiry(testExpiry60))\n\t\t\t\treturn i\n\t\t\t},\n\t\t\tbeforeEncoding: func(i *Invoice) {\n\t\t\t\t// Since this destination pubkey was recovered\n\t\t\t\t// from the signature, we must set it nil before\n\t\t\t\t// encoding to get back the same invoice string.\n\t\t\t\ti.Destination = nil\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// Now send $24 for an entire list of things (hashed)\n\t\t\tencodedInvoice: \"lnbc20m1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqhp58yjmdan79s6qqdhdzgynm4zwqd5d7xmw5fk98klysy043l2ahrqscc6gd6ql3jrc5yzme8v4ntcewwz5cnw92tz0pc8qcuufvq7khhr8wpald05e92xw006sq94mg8v2ndf4sefvf9sygkshp5zfem29trqq2yxxz7\",\n\t\t\tvalid:          true,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\treturn &Invoice{\n\t\t\t\t\tNet:             &chaincfg.MainNetParams,\n\t\t\t\t\tMilliSat:        &testMillisat20mBTC,\n\t\t\t\t\tTimestamp:       time.Unix(1496314658, 0),\n\t\t\t\t\tPaymentHash:     &testPaymentHash,\n\t\t\t\t\tDescriptionHash: &testDescriptionHash,\n\t\t\t\t\tDestination:     testPubKey,\n\t\t\t\t\tFeatures:        emptyFeatures,\n\t\t\t\t}\n\t\t\t},\n\t\t\tbeforeEncoding: func(i *Invoice) {\n\t\t\t\t// Since this destination pubkey was recovered\n\t\t\t\t// from the signature, we must set it nil before\n\t\t\t\t// encoding to get back the same invoice string.\n\t\t\t\ti.Destination = nil\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// The same, on testnet, with a fallback address mk2QpYatsKicvFVuTAQLBryyccRXMUaGHP\n\t\t\tencodedInvoice: \"lntb20m1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqhp58yjmdan79s6qqdhdzgynm4zwqd5d7xmw5fk98klysy043l2ahrqsfpp3x9et2e20v6pu37c5d9vax37wxq72un98k6vcx9fz94w0qf237cm2rqv9pmn5lnexfvf5579slr4zq3u8kmczecytdx0xg9rwzngp7e6guwqpqlhssu04sucpnz4axcv2dstmknqq6jsk2l\",\n\t\t\tvalid:          true,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\treturn &Invoice{\n\t\t\t\t\tNet:             &chaincfg.TestNet3Params,\n\t\t\t\t\tMilliSat:        &testMillisat20mBTC,\n\t\t\t\t\tTimestamp:       time.Unix(1496314658, 0),\n\t\t\t\t\tPaymentHash:     &testPaymentHash,\n\t\t\t\t\tDescriptionHash: &testDescriptionHash,\n\t\t\t\t\tDestination:     testPubKey,\n\t\t\t\t\tFallbackAddr:    testAddrTestnet,\n\t\t\t\t\tFeatures:        emptyFeatures,\n\t\t\t\t}\n\t\t\t},\n\t\t\tbeforeEncoding: func(i *Invoice) {\n\t\t\t\t// Since this destination pubkey was recovered\n\t\t\t\t// from the signature, we must set it nil before\n\t\t\t\t// encoding to get back the same invoice string.\n\t\t\t\ti.Destination = nil\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// On mainnet, with fallback address 1RustyRX2oai4EYYDpQGWvEL62BBGqN9T with extra routing info to get to node 029e03a901b85534ff1e92c43c74431f7ce72046060fcf7a95c37e148f78c77255\n\t\t\tencodedInvoice: \"lnbc20m1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqhp58yjmdan79s6qqdhdzgynm4zwqd5d7xmw5fk98klysy043l2ahrqsfpp3qjmp7lwpagxun9pygexvgpjdc4jdj85frzjq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqqqqqqq9qqqvncsk57n4v9ehw86wq8fzvjejhv9z3w3q5zh6qkql005x9xl240ch23jk79ujzvr4hsmmafyxghpqe79psktnjl668ntaf4ne7ucs5csqh5mnnk\",\n\t\t\tvalid:          true,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\treturn &Invoice{\n\t\t\t\t\tNet:             &chaincfg.MainNetParams,\n\t\t\t\t\tMilliSat:        &testMillisat20mBTC,\n\t\t\t\t\tTimestamp:       time.Unix(1496314658, 0),\n\t\t\t\t\tPaymentHash:     &testPaymentHash,\n\t\t\t\t\tDescriptionHash: &testDescriptionHash,\n\t\t\t\t\tDestination:     testPubKey,\n\t\t\t\t\tFallbackAddr:    testRustyAddr,\n\t\t\t\t\tRouteHints:      [][]HopHint{testSingleHop},\n\t\t\t\t\tFeatures:        emptyFeatures,\n\t\t\t\t}\n\t\t\t},\n\t\t\tbeforeEncoding: func(i *Invoice) {\n\t\t\t\t// Since this destination pubkey was recovered\n\t\t\t\t// from the signature, we must set it nil before\n\t\t\t\t// encoding to get back the same invoice string.\n\t\t\t\ti.Destination = nil\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// On mainnet, with fallback address 1RustyRX2oai4EYYDpQGWvEL62BBGqN9T with extra routing info to go via nodes 029e03a901b85534ff1e92c43c74431f7ce72046060fcf7a95c37e148f78c77255 then 039e03a901b85534ff1e92c43c74431f7ce72046060fcf7a95c37e148f78c77255\n\t\t\tencodedInvoice: \"lnbc20m1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqhp58yjmdan79s6qqdhdzgynm4zwqd5d7xmw5fk98klysy043l2ahrqsfpp3qjmp7lwpagxun9pygexvgpjdc4jdj85fr9yq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvpeuqafqxu92d8lr6fvg0r5gv0heeeqgcrqlnm6jhphu9y00rrhy4grqszsvpcgpy9qqqqqqgqqqqq7qqzqj9n4evl6mr5aj9f58zp6fyjzup6ywn3x6sk8akg5v4tgn2q8g4fhx05wf6juaxu9760yp46454gpg5mtzgerlzezqcqvjnhjh8z3g2qqdhhwkj\",\n\t\t\tvalid:          true,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\treturn &Invoice{\n\t\t\t\t\tNet:             &chaincfg.MainNetParams,\n\t\t\t\t\tMilliSat:        &testMillisat20mBTC,\n\t\t\t\t\tTimestamp:       time.Unix(1496314658, 0),\n\t\t\t\t\tPaymentHash:     &testPaymentHash,\n\t\t\t\t\tDescriptionHash: &testDescriptionHash,\n\t\t\t\t\tDestination:     testPubKey,\n\t\t\t\t\tFallbackAddr:    testRustyAddr,\n\t\t\t\t\tRouteHints:      [][]HopHint{testDoubleHop},\n\t\t\t\t\tFeatures:        emptyFeatures,\n\t\t\t\t}\n\t\t\t},\n\t\t\tbeforeEncoding: func(i *Invoice) {\n\t\t\t\t// Since this destination pubkey was recovered\n\t\t\t\t// from the signature, we must set it nil before\n\t\t\t\t// encoding to get back the same invoice string.\n\t\t\t\ti.Destination = nil\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// On mainnet, with fallback (p2sh) address 3EktnHQD7RiAE6uzMj2ZifT9YgRrkSgzQX\n\t\t\tencodedInvoice: \"lnbc20m1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqhp58yjmdan79s6qqdhdzgynm4zwqd5d7xmw5fk98klysy043l2ahrqsfppj3a24vwu6r8ejrss3axul8rxldph2q7z9kk822r8plup77n9yq5ep2dfpcydrjwzxs0la84v3tfw43t3vqhek7f05m6uf8lmfkjn7zv7enn76sq65d8u9lxav2pl6x3xnc2ww3lqpagnh0u\",\n\t\t\tvalid:          true,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\treturn &Invoice{\n\t\t\t\t\tNet:             &chaincfg.MainNetParams,\n\t\t\t\t\tMilliSat:        &testMillisat20mBTC,\n\t\t\t\t\tTimestamp:       time.Unix(1496314658, 0),\n\t\t\t\t\tPaymentHash:     &testPaymentHash,\n\t\t\t\t\tDescriptionHash: &testDescriptionHash,\n\t\t\t\t\tDestination:     testPubKey,\n\t\t\t\t\tFallbackAddr:    testAddrMainnetP2SH,\n\t\t\t\t\tFeatures:        emptyFeatures,\n\t\t\t\t}\n\t\t\t},\n\t\t\tbeforeEncoding: func(i *Invoice) {\n\t\t\t\t// Since this destination pubkey was recovered\n\t\t\t\t// from the signature, we must set it nil before\n\t\t\t\t// encoding to get back the same invoice string.\n\t\t\t\ti.Destination = nil\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// On mainnet, please send $30 coffee beans supporting\n\t\t\t// features 9, 15 and 99, using secret 0x11...\n\t\t\tencodedInvoice: \"lnbc25m1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdq5vdhkven9v5sxyetpdeessp5zyg3zyg3zyg3zyg3zyg3zyg3zyg3zyg3zyg3zyg3zyg3zyg3zygs9q5sqqqqqqqqqqqqqqqpqsq67gye39hfg3zd8rgc80k32tvy9xk2xunwm5lzexnvpx6fd77en8qaq424dxgt56cag2dpt359k3ssyhetktkpqh24jqnjyw6uqd08sgptq44qu\",\n\t\t\tvalid:          true,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\treturn &Invoice{\n\t\t\t\t\tNet:         &chaincfg.MainNetParams,\n\t\t\t\t\tMilliSat:    &testMillisat25mBTC,\n\t\t\t\t\tTimestamp:   time.Unix(1496314658, 0),\n\t\t\t\t\tPaymentHash: &testPaymentHash,\n\t\t\t\t\tPaymentAddr: &specPaymentAddr,\n\t\t\t\t\tDescription: &testCoffeeBeans,\n\t\t\t\t\tDestination: testPubKey,\n\t\t\t\t\tFeatures: lnwire.NewFeatureVector(\n\t\t\t\t\t\tlnwire.NewRawFeatureVector(9, 15, 99),\n\t\t\t\t\t\tlnwire.Features,\n\t\t\t\t\t),\n\t\t\t\t}\n\t\t\t},\n\t\t\tbeforeEncoding: func(i *Invoice) {\n\t\t\t\t// Since this destination pubkey was recovered\n\t\t\t\t// from the signature, we must set it nil before\n\t\t\t\t// encoding to get back the same invoice string.\n\t\t\t\ti.Destination = nil\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// On mainnet, please send $30 coffee beans supporting\n\t\t\t// features 9, 15, 99, and 100, using secret 0x11...\n\t\t\tencodedInvoice: \"lnbc25m1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdq5vdhkven9v5sxyetpdeessp5zyg3zyg3zyg3zyg3zyg3zyg3zyg3zyg3zyg3zyg3zyg3zyg3zygs9q4psqqqqqqqqqqqqqqqpqsqq40wa3khl49yue3zsgm26jrepqr2eghqlx86rttutve3ugd05em86nsefzh4pfurpd9ek9w2vp95zxqnfe2u7ckudyahsa52q66tgzcp6t2dyk\",\n\t\t\tvalid:          true,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\treturn &Invoice{\n\t\t\t\t\tNet:         &chaincfg.MainNetParams,\n\t\t\t\t\tMilliSat:    &testMillisat25mBTC,\n\t\t\t\t\tTimestamp:   time.Unix(1496314658, 0),\n\t\t\t\t\tPaymentHash: &testPaymentHash,\n\t\t\t\t\tPaymentAddr: &specPaymentAddr,\n\t\t\t\t\tDescription: &testCoffeeBeans,\n\t\t\t\t\tDestination: testPubKey,\n\t\t\t\t\tFeatures: lnwire.NewFeatureVector(\n\t\t\t\t\t\tlnwire.NewRawFeatureVector(9, 15, 99, 100),\n\t\t\t\t\t\tlnwire.Features,\n\t\t\t\t\t),\n\t\t\t\t}\n\t\t\t},\n\t\t\tbeforeEncoding: func(i *Invoice) {\n\t\t\t\t// Since this destination pubkey was recovered\n\t\t\t\t// from the signature, we must set it nil before\n\t\t\t\t// encoding to get back the same invoice string.\n\t\t\t\ti.Destination = nil\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// On mainnet, with fallback (p2wpkh) address bc1qw508d6qejxtdg4y5r3zarvary0c5xw7kv8f3t4\n\t\t\tencodedInvoice: \"lnbc20m1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqhp58yjmdan79s6qqdhdzgynm4zwqd5d7xmw5fk98klysy043l2ahrqsfppqw508d6qejxtdg4y5r3zarvary0c5xw7kknt6zz5vxa8yh8jrnlkl63dah48yh6eupakk87fjdcnwqfcyt7snnpuz7vp83txauq4c60sys3xyucesxjf46yqnpplj0saq36a554cp9wt865\",\n\t\t\tvalid:          true,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\treturn &Invoice{\n\t\t\t\t\tNet:             &chaincfg.MainNetParams,\n\t\t\t\t\tMilliSat:        &testMillisat20mBTC,\n\t\t\t\t\tTimestamp:       time.Unix(1496314658, 0),\n\t\t\t\t\tPaymentHash:     &testPaymentHash,\n\t\t\t\t\tDescriptionHash: &testDescriptionHash,\n\t\t\t\t\tDestination:     testPubKey,\n\t\t\t\t\tFallbackAddr:    testAddrMainnetP2WPKH,\n\t\t\t\t\tFeatures:        emptyFeatures,\n\t\t\t\t}\n\t\t\t},\n\t\t\tbeforeEncoding: func(i *Invoice) {\n\t\t\t\t// Since this destination pubkey was recovered\n\t\t\t\t// from the signature, we must set it nil before\n\t\t\t\t// encoding to get back the same invoice string.\n\t\t\t\ti.Destination = nil\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// On mainnet, with fallback (p2wsh) address bc1qrp33g0q5c5txsp9arysrx4k6zdkfs4nce4xj0gdcccefvpysxf3qccfmv3\n\t\t\tencodedInvoice: \"lnbc20m1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqhp58yjmdan79s6qqdhdzgynm4zwqd5d7xmw5fk98klysy043l2ahrqsfp4qrp33g0q5c5txsp9arysrx4k6zdkfs4nce4xj0gdcccefvpysxf3qvnjha2auylmwrltv2pkp2t22uy8ura2xsdwhq5nm7s574xva47djmnj2xeycsu7u5v8929mvuux43j0cqhhf32wfyn2th0sv4t9x55sppz5we8\",\n\t\t\tvalid:          true,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\treturn &Invoice{\n\t\t\t\t\tNet:             &chaincfg.MainNetParams,\n\t\t\t\t\tMilliSat:        &testMillisat20mBTC,\n\t\t\t\t\tTimestamp:       time.Unix(1496314658, 0),\n\t\t\t\t\tPaymentHash:     &testPaymentHash,\n\t\t\t\t\tDescriptionHash: &testDescriptionHash,\n\t\t\t\t\tDestination:     testPubKey,\n\t\t\t\t\tFallbackAddr:    testAddrMainnetP2WSH,\n\t\t\t\t\tFeatures:        emptyFeatures,\n\t\t\t\t}\n\t\t\t},\n\t\t\tbeforeEncoding: func(i *Invoice) {\n\t\t\t\t// Since this destination pubkey was recovered\n\t\t\t\t// from the signature, we must set it nil before\n\t\t\t\t// encoding to get back the same invoice string.\n\t\t\t\ti.Destination = nil\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// Send 2500uBTC for a cup of coffee with a custom CLTV\n\t\t\t// expiry value.\n\t\t\tencodedInvoice: \"lnbc2500u1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdq5xysxxatsyp3k7enxv4jscqzysnp4q0n326hr8v9zprg8gsvezcch06gfaqqhde2aj730yg0durunfhv66ysxkvnxhcvhz48sn72lp77h4fxcur27z0he48u5qvk3sxse9mr9jhkltt962s8arjnzk8rk59yj5nw4p495747gksj30gza0crhzwjcpgxzy00\",\n\t\t\tvalid:          true,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\ti, _ := NewInvoice(\n\t\t\t\t\t&chaincfg.MainNetParams,\n\t\t\t\t\ttestPaymentHash,\n\t\t\t\t\ttime.Unix(1496314658, 0),\n\t\t\t\t\tAmount(testMillisat2500uBTC),\n\t\t\t\t\tDescription(testCupOfCoffee),\n\t\t\t\t\tDestination(testPubKey),\n\t\t\t\t\tCLTVExpiry(144),\n\t\t\t\t)\n\n\t\t\t\treturn i\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// Send 2500uBTC for a cup of coffee with a payment\n\t\t\t// address.\n\t\t\tencodedInvoice: \"lnbc2500u1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdq5xysxxatsyp3k7enxv4jsnp4q0n326hr8v9zprg8gsvezcch06gfaqqhde2aj730yg0durunfhv66sp5qszsvpcgpyqsyps8pqysqqgzqvyqjqqpqgpsgpgqqypqxpq9qcrsusq8nx2hdt3st3ankwz23xy9w7udvqq3f0mdlpc6ga5ew3y67u4qkx8vu72ejg5x6tqhyclm28r7r0mg6lx9x3vls9g6glp2qy3y34cpry54xp\",\n\t\t\tvalid:          true,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\ti, _ := NewInvoice(\n\t\t\t\t\t&chaincfg.MainNetParams,\n\t\t\t\t\ttestPaymentHash,\n\t\t\t\t\ttime.Unix(1496314658, 0),\n\t\t\t\t\tAmount(testMillisat2500uBTC),\n\t\t\t\t\tDescription(testCupOfCoffee),\n\t\t\t\t\tDestination(testPubKey),\n\t\t\t\t\tPaymentAddr(testPaymentAddr),\n\t\t\t\t)\n\n\t\t\t\treturn i\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// Decode a mainnet invoice while expecting active net to be testnet\n\t\t\tencodedInvoice: \"lnbc241pveeq09pp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdqqnp4q0n326hr8v9zprg8gsvezcch06gfaqqhde2aj730yg0durunfhv66jd3m5klcwhq68vdsmx2rjgxeay5v0tkt2v5sjaky4eqahe4fx3k9sqavvce3capfuwv8rvjng57jrtfajn5dkpqv8yelsewtljwmmycq62k443\",\n\t\t\tvalid:          false,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\treturn &Invoice{\n\t\t\t\t\tNet:         &chaincfg.TestNet3Params,\n\t\t\t\t\tMilliSat:    &testMillisat24BTC,\n\t\t\t\t\tTimestamp:   time.Unix(1503429093, 0),\n\t\t\t\t\tPaymentHash: &testPaymentHash,\n\t\t\t\t\tDestination: testPubKey,\n\t\t\t\t\tDescription: &testEmptyString,\n\t\t\t\t\tFeatures:    emptyFeatures,\n\t\t\t\t}\n\t\t\t},\n\t\t\tskipEncoding: true, // Skip encoding since we were given the wrong net\n\t\t},\n\t\t{\n\t\t\t// Decode a litecoin testnet invoice\n\t\t\tencodedInvoice: \"lntltc241pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqhp58yjmdan79s6qqdhdzgynm4zwqd5d7xmw5fk98klysy043l2ahrqsnp4q0n326hr8v9zprg8gsvezcch06gfaqqhde2aj730yg0durunfhv66m2eq2fx9uctzkmj30meaghyskkgsd6geap5qg9j2ae444z24a4p8xg3a6g73p8l7d689vtrlgzj0wyx2h6atq8dfty7wmkt4frx9g9sp730h5a\",\n\t\t\tvalid:          true,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\treturn &Invoice{\n\t\t\t\t\t// TODO(sangaman): create an interface for chaincfg.params\n\t\t\t\t\tNet:             &ltcTestNetParams,\n\t\t\t\t\tMilliSat:        &testMillisat24BTC,\n\t\t\t\t\tTimestamp:       time.Unix(1496314658, 0),\n\t\t\t\t\tPaymentHash:     &testPaymentHash,\n\t\t\t\t\tDescriptionHash: &testDescriptionHash,\n\t\t\t\t\tDestination:     testPubKey,\n\t\t\t\t\tFeatures:        emptyFeatures,\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// Decode a litecoin mainnet invoice\n\t\t\tencodedInvoice: \"lnltc241pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqhp58yjmdan79s6qqdhdzgynm4zwqd5d7xmw5fk98klysy043l2ahrqsnp4q0n326hr8v9zprg8gsvezcch06gfaqqhde2aj730yg0durunfhv66859t2d55efrxdlgqg9hdqskfstdmyssdw4fjc8qdl522ct885pqk7acn2aczh0jeht0xhuhnkmm3h0qsrxedlwm9x86787zzn4qwwwcpjkl3t2\",\n\t\t\tvalid:          true,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\treturn &Invoice{\n\t\t\t\t\tNet:             &ltcMainNetParams,\n\t\t\t\t\tMilliSat:        &testMillisat24BTC,\n\t\t\t\t\tTimestamp:       time.Unix(1496314658, 0),\n\t\t\t\t\tPaymentHash:     &testPaymentHash,\n\t\t\t\t\tDescriptionHash: &testDescriptionHash,\n\t\t\t\t\tDestination:     testPubKey,\n\t\t\t\t\tFeatures:        emptyFeatures,\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\t// Please send 0.01 BTC with payment metadata 0x01fafaf0.\n\t\t\tencodedInvoice: \"lnbc10m1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdp9wpshjmt9de6zqmt9w3skgct5vysxjmnnd9jx2mq8q8a04uqsp5zyg3zyg3zyg3zyg3zyg3zyg3zyg3zyg3zyg3zyg3zyg3zyg3zygs9q2gqqqqqqsgq7hf8he7ecf7n4ffphs6awl9t6676rrclv9ckg3d3ncn7fct63p6s365duk5wrk202cfy3aj5xnnp5gs3vrdvruverwwq7yzhkf5a3xqpd05wjc\",\n\t\t\tvalid:          true,\n\t\t\tdecodedInvoice: func() *Invoice {\n\t\t\t\treturn &Invoice{\n\t\t\t\t\tNet:         &chaincfg.MainNetParams,\n\t\t\t\t\tMilliSat:    &testMillisat10mBTC,\n\t\t\t\t\tTimestamp:   time.Unix(1496314658, 0),\n\t\t\t\t\tPaymentHash: &testPaymentHash,\n\t\t\t\t\tDescription: &testPaymentMetadata,\n\t\t\t\t\tDestination: testPubKey,\n\t\t\t\t\tPaymentAddr: &specPaymentAddr,\n\t\t\t\t\tFeatures: lnwire.NewFeatureVector(\n\t\t\t\t\t\tlnwire.NewRawFeatureVector(8, 14, 48),\n\t\t\t\t\t\tlnwire.Features,\n\t\t\t\t\t),\n\t\t\t\t\tMetadata: []byte{0x01, 0xfa, 0xfa, 0xf0},\n\t\t\t\t}\n\t\t\t},\n\t\t\tbeforeEncoding: func(i *Invoice) {\n\t\t\t\t// Since this destination pubkey was recovered\n\t\t\t\t// from the signature, we must set it nil before\n\t\t\t\t// encoding to get back the same invoice string.\n\t\t\t\ti.Destination = nil\n\t\t\t},\n\t\t},\n\t}\n\n\tfor i, test := range tests {\n\t\tvar decodedInvoice *Invoice\n\t\tnet := &chaincfg.MainNetParams\n\t\tif test.decodedInvoice != nil {\n\t\t\tdecodedInvoice = test.decodedInvoice()\n\t\t\tnet = decodedInvoice.Net\n\t\t}\n\n\t\tinvoice, err := Decode(test.encodedInvoice, net)\n\t\tif (err == nil) != test.valid {\n\t\t\tt.Errorf(\"Decoding test %d failed: %v\", i, err)\n\t\t\treturn\n\t\t}\n\n\t\tif test.valid {\n\t\t\tif err := compareInvoices(decodedInvoice, invoice); err != nil {\n\t\t\t\tt.Errorf(\"Invoice decoding result %d not as expected: %v\", i, err)\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\n\t\tif test.skipEncoding {\n\t\t\tcontinue\n\t\t}\n\n\t\tif test.beforeEncoding != nil {\n\t\t\ttest.beforeEncoding(decodedInvoice)\n\t\t}\n\n\t\tif decodedInvoice != nil {\n\t\t\treencoded, err := decodedInvoice.Encode(\n\t\t\t\ttestMessageSigner,\n\t\t\t)\n\t\t\tif (err == nil) != test.valid {\n\t\t\t\tt.Errorf(\"Encoding test %d failed: %v\", i, err)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif test.valid && test.encodedInvoice != reencoded {\n\t\t\t\tt.Errorf(\"Encoding %d failed, expected %v, got %v\",\n\t\t\t\t\ti, test.encodedInvoice, reencoded)\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t}\n}\n\n// TestNewInvoice tests that providing the optional arguments to the NewInvoice\n// method creates an Invoice that encodes to the expected string.",
      "length": 26045,
      "tokens": 1869,
      "embedding": []
    },
    {
      "slug": "func TestNewInvoice(t *testing.T) {",
      "content": "func TestNewInvoice(t *testing.T) {\n\tt.Parallel()\n\n\ttests := []struct {\n\t\tnewInvoice     func() (*Invoice, error)\n\t\tencodedInvoice string\n\t\tvalid          bool\n\t}{\n\t\t{\n\t\t\t// Both Description and DescriptionHash set.\n\t\t\tnewInvoice: func() (*Invoice, error) {\n\t\t\t\treturn NewInvoice(&chaincfg.MainNetParams,\n\t\t\t\t\ttestPaymentHash, time.Unix(1496314658, 0),\n\t\t\t\t\tDescriptionHash(testDescriptionHash),\n\t\t\t\t\tDescription(testPleaseConsider))\n\t\t\t},\n\t\t\tvalid: false, // Both Description and DescriptionHash set.\n\t\t},\n\t\t{\n\t\t\t// Invoice with no amount.\n\t\t\tnewInvoice: func() (*Invoice, error) {\n\t\t\t\treturn NewInvoice(\n\t\t\t\t\t&chaincfg.MainNetParams,\n\t\t\t\t\ttestPaymentHash,\n\t\t\t\t\ttime.Unix(1496314658, 0),\n\t\t\t\t\tDescription(testCupOfCoffee),\n\t\t\t\t)\n\t\t\t},\n\t\t\tvalid:          true,\n\t\t\tencodedInvoice: \"lnbc1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdq5xysxxatsyp3k7enxv4jshwlglv23cytkzvq8ld39drs8sq656yh2zn0aevrwu6uqctaklelhtpjnmgjdzmvwsh0kuxuwqf69fjeap9m5mev2qzpp27xfswhs5vgqmn9xzq\",\n\t\t},\n\t\t{\n\t\t\t// 'n' field set.\n\t\t\tnewInvoice: func() (*Invoice, error) {\n\t\t\t\treturn NewInvoice(&chaincfg.MainNetParams,\n\t\t\t\t\ttestPaymentHash, time.Unix(1503429093, 0),\n\t\t\t\t\tAmount(testMillisat24BTC),\n\t\t\t\t\tDescription(testEmptyString),\n\t\t\t\t\tDestination(testPubKey))\n\t\t\t},\n\t\t\tvalid:          true,\n\t\t\tencodedInvoice: \"lnbc241pveeq09pp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdqqnp4q0n326hr8v9zprg8gsvezcch06gfaqqhde2aj730yg0durunfhv66jd3m5klcwhq68vdsmx2rjgxeay5v0tkt2v5sjaky4eqahe4fx3k9sqavvce3capfuwv8rvjng57jrtfajn5dkpqv8yelsewtljwmmycq62k443\",\n\t\t},\n\t\t{\n\t\t\t// On mainnet, with fallback address 1RustyRX2oai4EYYDpQGWvEL62BBGqN9T with extra routing info to go via nodes 029e03a901b85534ff1e92c43c74431f7ce72046060fcf7a95c37e148f78c77255 then 039e03a901b85534ff1e92c43c74431f7ce72046060fcf7a95c37e148f78c77255\n\t\t\tnewInvoice: func() (*Invoice, error) {\n\t\t\t\treturn NewInvoice(&chaincfg.MainNetParams,\n\t\t\t\t\ttestPaymentHash, time.Unix(1496314658, 0),\n\t\t\t\t\tAmount(testMillisat20mBTC),\n\t\t\t\t\tDescriptionHash(testDescriptionHash),\n\t\t\t\t\tFallbackAddr(testRustyAddr),\n\t\t\t\t\tRouteHint(testDoubleHop),\n\t\t\t\t)\n\t\t\t},\n\t\t\tvalid:          true,\n\t\t\tencodedInvoice: \"lnbc20m1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqhp58yjmdan79s6qqdhdzgynm4zwqd5d7xmw5fk98klysy043l2ahrqsfpp3qjmp7lwpagxun9pygexvgpjdc4jdj85fr9yq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvpeuqafqxu92d8lr6fvg0r5gv0heeeqgcrqlnm6jhphu9y00rrhy4grqszsvpcgpy9qqqqqqgqqqqq7qqzqj9n4evl6mr5aj9f58zp6fyjzup6ywn3x6sk8akg5v4tgn2q8g4fhx05wf6juaxu9760yp46454gpg5mtzgerlzezqcqvjnhjh8z3g2qqdhhwkj\",\n\t\t},\n\t\t{\n\t\t\t// On simnet\n\t\t\tnewInvoice: func() (*Invoice, error) {\n\t\t\t\treturn NewInvoice(&chaincfg.SimNetParams,\n\t\t\t\t\ttestPaymentHash, time.Unix(1496314658, 0),\n\t\t\t\t\tAmount(testMillisat24BTC),\n\t\t\t\t\tDescription(testEmptyString),\n\t\t\t\t\tDestination(testPubKey))\n\t\t\t},\n\t\t\tvalid:          true,\n\t\t\tencodedInvoice: \"lnsb241pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdqqnp4q0n326hr8v9zprg8gsvezcch06gfaqqhde2aj730yg0durunfhv66jdgev3gnwg0aul7unhqlqvrkp23f0negjsw8ac9f6wa8w9nvppgp3updmr5znhze6l5zneztc0alknntn0wv8fkkgvjqwp0jss66cngqcj9tj6\",\n\t\t},\n\t\t{\n\t\t\t// On regtest\n\t\t\tnewInvoice: func() (*Invoice, error) {\n\t\t\t\treturn NewInvoice(&chaincfg.RegressionNetParams,\n\t\t\t\t\ttestPaymentHash, time.Unix(1496314658, 0),\n\t\t\t\t\tAmount(testMillisat24BTC),\n\t\t\t\t\tDescription(testEmptyString),\n\t\t\t\t\tDestination(testPubKey))\n\t\t\t},\n\t\t\tvalid:          true,\n\t\t\tencodedInvoice: \"lnbcrt241pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdqqnp4q0n326hr8v9zprg8gsvezcch06gfaqqhde2aj730yg0durunfhv66df5c8pqjjt4z4ymmuaxfx8eh5v7hmzs3wrfas8m2sz5qz56rw2lxy8mmgm4xln0ha26qkw6u3vhu22pss2udugr9g74c3x20slpcqjgq0el4h6\",\n\t\t},\n\t\t{\n\t\t\t// Create a litecoin testnet invoice\n\t\t\tnewInvoice: func() (*Invoice, error) {\n\t\t\t\treturn NewInvoice(&ltcTestNetParams,\n\t\t\t\t\ttestPaymentHash, time.Unix(1496314658, 0),\n\t\t\t\t\tAmount(testMillisat24BTC),\n\t\t\t\t\tDescriptionHash(testDescriptionHash),\n\t\t\t\t\tDestination(testPubKey))\n\t\t\t},\n\t\t\tvalid:          true,\n\t\t\tencodedInvoice: \"lntltc241pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqhp58yjmdan79s6qqdhdzgynm4zwqd5d7xmw5fk98klysy043l2ahrqsnp4q0n326hr8v9zprg8gsvezcch06gfaqqhde2aj730yg0durunfhv66m2eq2fx9uctzkmj30meaghyskkgsd6geap5qg9j2ae444z24a4p8xg3a6g73p8l7d689vtrlgzj0wyx2h6atq8dfty7wmkt4frx9g9sp730h5a\",\n\t\t},\n\t\t{\n\t\t\t// Create a litecoin mainnet invoice\n\t\t\tnewInvoice: func() (*Invoice, error) {\n\t\t\t\treturn NewInvoice(&ltcMainNetParams,\n\t\t\t\t\ttestPaymentHash, time.Unix(1496314658, 0),\n\t\t\t\t\tAmount(testMillisat24BTC),\n\t\t\t\t\tDescriptionHash(testDescriptionHash),\n\t\t\t\t\tDestination(testPubKey))\n\t\t\t},\n\t\t\tvalid:          true,\n\t\t\tencodedInvoice: \"lnltc241pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqhp58yjmdan79s6qqdhdzgynm4zwqd5d7xmw5fk98klysy043l2ahrqsnp4q0n326hr8v9zprg8gsvezcch06gfaqqhde2aj730yg0durunfhv66859t2d55efrxdlgqg9hdqskfstdmyssdw4fjc8qdl522ct885pqk7acn2aczh0jeht0xhuhnkmm3h0qsrxedlwm9x86787zzn4qwwwcpjkl3t2\",\n\t\t},\n\t}\n\n\tfor i, test := range tests {\n\n\t\tinvoice, err := test.newInvoice()\n\t\tif err != nil && !test.valid {\n\t\t\tcontinue\n\t\t}\n\t\tencoded, err := invoice.Encode(testMessageSigner)\n\t\tif (err == nil) != test.valid {\n\t\t\tt.Errorf(\"NewInvoice test %d failed: %v\", i, err)\n\t\t\treturn\n\t\t}\n\n\t\tif test.valid && test.encodedInvoice != encoded {\n\t\t\tt.Errorf(\"Encoding %d failed, expected %v, got %v\",\n\t\t\t\ti, test.encodedInvoice, encoded)\n\t\t\treturn\n\t\t}\n\t}\n}\n\n// TestMaxInvoiceLength tests that attempting to decode an invoice greater than\n// maxInvoiceLength fails with ErrInvoiceTooLarge.",
      "length": 5359,
      "tokens": 308,
      "embedding": []
    },
    {
      "slug": "func TestMaxInvoiceLength(t *testing.T) {",
      "content": "func TestMaxInvoiceLength(t *testing.T) {\n\tt.Parallel()\n\n\ttests := []struct {\n\t\tencodedInvoice string\n\t\texpectedError  error\n\t}{\n\t\t{\n\t\t\t// Valid since it is less than maxInvoiceLength.\n\t\t\tencodedInvoice: \"lnbc25m1pvjluezpp5qqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqqqsyqcyq5rqwzqfqypqdq5vdhkven9v5sxyetpdeesrzjq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvrzjq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvrzjq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvrzjq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvrzjq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvrzjq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvrzjq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvrzjq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvrzjq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvrzjq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvrzjq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvrzjq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvrzjq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvrzjq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvrzjq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvrzjq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvrzjq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvrzjq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvrzjq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvrzjq20q82gphp2nflc7jtzrcazrra7wwgzxqc8u7754cdlpfrmccae92qgzqvzq2ps8pqqqqqqpqqqqq9qqqvnp4q0n326hr8v9zprg8gsvezcch06gfaqqhde2aj730yg0durunfhv660a66stp9cgqfnp8xklqlxm655zp9x435k6px4hnsajsp00dtcgrxygq67f32qrmxvfk9qcs8mwhzxu8gxr24k2s7364jc9rn4xtn3ncq4t8cej\",\n\t\t},\n\t\t{\n\t\t\t// Invalid since it is greater than maxInvoiceLength.\n\t\t\tencodedInvoice: \"\",\n\t\t\texpectedError:  ErrInvoiceTooLarge,\n\t\t},\n\t}\n\n\tnet := &chaincfg.MainNetParams\n\n\tfor i, test := range tests {\n\t\t_, err := Decode(test.encodedInvoice, net)\n\t\tif err != test.expectedError {\n\t\t\tt.Errorf(\"Expected test %d to have error: %v, instead have: %v\",\n\t\t\t\ti, test.expectedError, err)\n\t\t\treturn\n\t\t}\n\t}\n}\n\n// TestInvoiceChecksumMalleability ensures that the malleability of the\n// checksum in bech32 strings cannot cause a signature to become valid and\n// therefore cause a wrong destination to be decoded for invoices where the\n// destination is extracted from the signature.",
      "length": 11552,
      "tokens": 115,
      "embedding": []
    },
    {
      "slug": "func TestInvoiceChecksumMalleability(t *testing.T) {",
      "content": "func TestInvoiceChecksumMalleability(t *testing.T) {\n\tprivKeyHex := \"a50f3bdf9b6c4b1fdd7c51a8bbf4b5855cf381f413545ed155c0282f4412a1b1\"\n\tprivKeyBytes, _ := hex.DecodeString(privKeyHex)\n\tchain := &chaincfg.SimNetParams\n\tvar payHash [32]byte\n\tts := time.Unix(0, 0)\n\n\tprivKey, _ := btcec.PrivKeyFromBytes(privKeyBytes)\n\tmsgSigner := MessageSigner{\n\t\tSignCompact: func(msg []byte) ([]byte, error) {\n\t\t\thash := chainhash.HashB(msg)\n\t\t\treturn ecdsa.SignCompact(privKey, hash, true)\n\t\t},\n\t}\n\topts := []func(*Invoice){Description(\"test\")}\n\tinvoice, err := NewInvoice(chain, payHash, ts, opts...)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\tencoded, err := invoice.Encode(msgSigner)\n\tif err != nil {\n\t\tt.Fatal(err)\n\t}\n\n\t// Changing a bech32 string which checksum ends in \"p\" to \"(q*)p\" can\n\t// cause the checksum to return as a valid bech32 string _but_ the\n\t// signature field immediately preceding it would be mutaded.  In rare\n\t// cases (about 3%) it is still seen as a valid signature and public\n\t// key recovery causes a different node than the originally intended\n\t// one to be derived.\n\t//\n\t// We thus modify the checksum here and verify the invoice gets broken\n\t// enough that it fails to decode.\n\tif !strings.HasSuffix(encoded, \"p\") {\n\t\tt.Logf(\"Invoice: %s\", encoded)\n\t\tt.Fatalf(\"Generated invoice checksum does not end in 'p'\")\n\t}\n\tencoded = encoded[:len(encoded)-1] + \"qp\"\n\n\t_, err = Decode(encoded, chain)\n\tif err == nil {\n\t\tt.Fatalf(\"Did not get expected error when decoding invoice\")\n\t}\n}\n",
      "length": 1389,
      "tokens": 196,
      "embedding": []
    },
    {
      "slug": "func compareInvoices(expected, actual *Invoice) error {",
      "content": "func compareInvoices(expected, actual *Invoice) error {\n\tif !reflect.DeepEqual(expected.Net, actual.Net) {\n\t\treturn fmt.Errorf(\"expected net %v, got %v\",\n\t\t\texpected.Net, actual.Net)\n\t}\n\n\tif !reflect.DeepEqual(expected.MilliSat, actual.MilliSat) {\n\t\treturn fmt.Errorf(\"expected milli sat %d, got %d\",\n\t\t\t*expected.MilliSat, *actual.MilliSat)\n\t}\n\n\tif expected.Timestamp != actual.Timestamp {\n\t\treturn fmt.Errorf(\"expected timestamp %v, got %v\",\n\t\t\texpected.Timestamp, actual.Timestamp)\n\t}\n\n\tif !compareHashes(expected.PaymentHash, actual.PaymentHash) {\n\t\treturn fmt.Errorf(\"expected payment hash %x, got %x\",\n\t\t\t*expected.PaymentHash, *actual.PaymentHash)\n\t}\n\n\tif !reflect.DeepEqual(expected.Description, actual.Description) {\n\t\treturn fmt.Errorf(\"expected description \\\"%s\\\", got \\\"%s\\\"\",\n\t\t\t*expected.Description, *actual.Description)\n\t}\n\n\tif !comparePubkeys(expected.Destination, actual.Destination) {\n\t\treturn fmt.Errorf(\"expected destination pubkey %x, got %x\",\n\t\t\texpected.Destination.SerializeCompressed(),\n\t\t\tactual.Destination.SerializeCompressed())\n\t}\n\n\tif !compareHashes(expected.DescriptionHash, actual.DescriptionHash) {\n\t\treturn fmt.Errorf(\"expected description hash %x, got %x\",\n\t\t\t*expected.DescriptionHash, *actual.DescriptionHash)\n\t}\n\n\tif expected.Expiry() != actual.Expiry() {\n\t\treturn fmt.Errorf(\"expected expiry %d, got %d\",\n\t\t\texpected.Expiry(), actual.Expiry())\n\t}\n\n\tif !reflect.DeepEqual(expected.FallbackAddr, actual.FallbackAddr) {\n\t\treturn fmt.Errorf(\"expected FallbackAddr %v, got %v\",\n\t\t\texpected.FallbackAddr, actual.FallbackAddr)\n\t}\n\n\tif len(expected.RouteHints) != len(actual.RouteHints) {\n\t\treturn fmt.Errorf(\"expected %d RouteHints, got %d\",\n\t\t\tlen(expected.RouteHints), len(actual.RouteHints))\n\t}\n\n\tfor i, routeHint := range expected.RouteHints {\n\t\terr := compareRouteHints(routeHint, actual.RouteHints[i])\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\n\tif !reflect.DeepEqual(expected.Features, actual.Features) {\n\t\treturn fmt.Errorf(\"expected features %v, got %v\",\n\t\t\texpected.Features, actual.Features)\n\t}\n\n\treturn nil\n}\n",
      "length": 1930,
      "tokens": 173,
      "embedding": []
    },
    {
      "slug": "func comparePubkeys(a, b *btcec.PublicKey) bool {",
      "content": "func comparePubkeys(a, b *btcec.PublicKey) bool {\n\tif a == b {\n\t\treturn true\n\t}\n\tif a == nil && b != nil {\n\t\treturn false\n\t}\n\tif b == nil && a != nil {\n\t\treturn false\n\t}\n\treturn a.IsEqual(b)\n}\n",
      "length": 132,
      "tokens": 35,
      "embedding": []
    },
    {
      "slug": "func compareHashes(a, b *[32]byte) bool {",
      "content": "func compareHashes(a, b *[32]byte) bool {\n\tif a == b {\n\t\treturn true\n\t}\n\tif a == nil && b != nil {\n\t\treturn false\n\t}\n\tif b == nil && a != nil {\n\t\treturn false\n\t}\n\treturn bytes.Equal(a[:], b[:])\n}\n",
      "length": 143,
      "tokens": 36,
      "embedding": []
    },
    {
      "slug": "func compareRouteHints(a, b []HopHint) error {",
      "content": "func compareRouteHints(a, b []HopHint) error {\n\tif len(a) != len(b) {\n\t\treturn fmt.Errorf(\"expected len routingInfo %d, got %d\",\n\t\t\tlen(a), len(b))\n\t}\n\n\tfor i := 0; i < len(a); i++ {\n\t\tif !comparePubkeys(a[i].NodeID, b[i].NodeID) {\n\t\t\treturn fmt.Errorf(\"expected routeHint nodeID %x, \"+\n\t\t\t\t\"got %x\", a[i].NodeID.SerializeCompressed(),\n\t\t\t\tb[i].NodeID.SerializeCompressed())\n\t\t}\n\n\t\tif a[i].ChannelID != b[i].ChannelID {\n\t\t\treturn fmt.Errorf(\"expected routeHint channelID \"+\n\t\t\t\t\"%d, got %d\", a[i].ChannelID, b[i].ChannelID)\n\t\t}\n\n\t\tif a[i].FeeBaseMSat != b[i].FeeBaseMSat {\n\t\t\treturn fmt.Errorf(\"expected routeHint feeBaseMsat %d, got %d\",\n\t\t\t\ta[i].FeeBaseMSat, b[i].FeeBaseMSat)\n\t\t}\n\n\t\tif a[i].FeeProportionalMillionths != b[i].FeeProportionalMillionths {\n\t\t\treturn fmt.Errorf(\"expected routeHint feeProportionalMillionths %d, got %d\",\n\t\t\t\ta[i].FeeProportionalMillionths, b[i].FeeProportionalMillionths)\n\t\t}\n\n\t\tif a[i].CLTVExpiryDelta != b[i].CLTVExpiryDelta {\n\t\t\treturn fmt.Errorf(\"expected routeHint cltvExpiryDelta \"+\n\t\t\t\t\"%d, got %d\", a[i].CLTVExpiryDelta, b[i].CLTVExpiryDelta)\n\t\t}\n\t}\n\n\treturn nil\n}\n",
      "length": 1023,
      "tokens": 105,
      "embedding": []
    }
  ]
}