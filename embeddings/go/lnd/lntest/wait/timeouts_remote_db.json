{
  "filepath": "../implementations/go/lnd/lntest/wait/timeouts_remote_db.go",
  "package": "wait",
  "sections": [
    {
      "slug": "//go:build kvdb_etcd || kvdb_postgres",
      "content": "//go:build kvdb_etcd || kvdb_postgres\n// +build kvdb_etcd kvdb_postgres\n\npackage wait\n\nimport \"time\"\n\nconst (\n\t// MinerMempoolTimeout is the max time we will wait for a transaction\n\t// to propagate to the mining node's mempool.\n\tMinerMempoolTimeout = time.Minute\n\n\t// ChannelOpenTimeout is the max time we will wait before a channel to\n\t// be considered opened.\n\tChannelOpenTimeout = time.Second * 30\n\n\t// ChannelCloseTimeout is the max time we will wait before a channel is\n\t// considered closed.\n\tChannelCloseTimeout = time.Second * 30\n\n\t// DefaultTimeout is a timeout that will be used for various wait\n\t// scenarios where no custom timeout value is defined.\n\tDefaultTimeout = time.Second * 30\n\n\t// AsyncBenchmarkTimeout is the timeout used when running the async\n\t// payments benchmark.\n\tAsyncBenchmarkTimeout = time.Minute * 2\n\n\t// NodeStartTimeout is the timeout value when waiting for a node to\n\t// become fully started.\n\tNodeStartTimeout = time.Minute * 2\n\n\t// SqliteBusyTimeout is the maximum time that a call to the sqlite db\n\t// will wait for the connection to become available.\n\tSqliteBusyTimeout = time.Second * 10\n\n\t// PaymentTimeout is the timeout used when sending payments.\n\tPaymentTimeout = time.Second * 60\n)\n",
      "length": 1152,
      "tokens": 183,
      "embedding": []
    }
  ]
}