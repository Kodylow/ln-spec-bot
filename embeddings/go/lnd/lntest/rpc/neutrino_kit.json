{
  "filepath": "../implementations/go/lnd/lntest/rpc/neutrino_kit.go",
  "package": "rpc",
  "sections": [
    {
      "slug": "func (h *HarnessRPC) Status(",
      "content": "func (h *HarnessRPC) Status(\n\treq *neutrinorpc.StatusRequest) *neutrinorpc.StatusResponse {\n\n\tif req == nil {\n\t\treq = &neutrinorpc.StatusRequest{}\n\t}\n\n\tctxt, cancel := context.WithTimeout(h.runCtx, DefaultTimeout)\n\tdefer cancel()\n\n\tresp, err := h.NeutrinoKit.Status(ctxt, req)\n\th.NoError(err, \"Status\")\n\n\treturn resp\n}\n\n// GetCFilter makes an RPC call to neutrino kit client's GetCFilter and asserts.",
      "length": 356,
      "tokens": 43,
      "embedding": []
    },
    {
      "slug": "func (h *HarnessRPC) GetCFilter(",
      "content": "func (h *HarnessRPC) GetCFilter(\n\treq *neutrinorpc.GetCFilterRequest) *neutrinorpc.GetCFilterResponse {\n\n\tctxt, cancel := context.WithTimeout(h.runCtx, DefaultTimeout)\n\tdefer cancel()\n\n\tresp, err := h.NeutrinoKit.GetCFilter(ctxt, req)\n\th.NoError(err, \"GetCFilter\")\n\n\treturn resp\n}\n\n// AddPeer makes an RPC call to neutrino kit client's AddPeer and asserts.",
      "length": 312,
      "tokens": 34,
      "embedding": []
    },
    {
      "slug": "func (h *HarnessRPC) AddPeer(",
      "content": "func (h *HarnessRPC) AddPeer(\n\treq *neutrinorpc.AddPeerRequest) *neutrinorpc.AddPeerResponse {\n\n\tctxt, cancel := context.WithTimeout(h.runCtx, DefaultTimeout)\n\tdefer cancel()\n\n\tresp, err := h.NeutrinoKit.AddPeer(ctxt, req)\n\th.NoError(err, \"AddPeer\")\n\n\treturn resp\n}\n",
      "length": 226,
      "tokens": 21,
      "embedding": []
    }
  ]
}