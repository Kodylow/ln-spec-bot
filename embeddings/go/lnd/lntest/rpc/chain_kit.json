{
  "filepath": "../implementations/go/lnd/lntest/rpc/chain_kit.go",
  "package": "rpc",
  "sections": [
    {
      "slug": "func (h *HarnessRPC) GetBestBlock(",
      "content": "func (h *HarnessRPC) GetBestBlock(\n\treq *chainrpc.GetBestBlockRequest) *chainrpc.GetBestBlockResponse {\n\n\tif req == nil {\n\t\treq = &chainrpc.GetBestBlockRequest{}\n\t}\n\n\tctxt, cancel := context.WithTimeout(h.runCtx, DefaultTimeout)\n\tdefer cancel()\n\n\tresp, err := h.ChainKit.GetBestBlock(ctxt, req)\n\th.NoError(err, \"GetBestBlock\")\n\n\treturn resp\n}\n\n// GetBlock makes an RPC call to chain kit client's GetBlock and asserts.",
      "length": 367,
      "tokens": 43,
      "embedding": []
    },
    {
      "slug": "func (h *HarnessRPC) GetBlock(",
      "content": "func (h *HarnessRPC) GetBlock(\n\treq *chainrpc.GetBlockRequest) *chainrpc.GetBlockResponse {\n\n\tif req == nil {\n\t\treq = &chainrpc.GetBlockRequest{}\n\t}\n\n\tctxt, cancel := context.WithTimeout(h.runCtx, DefaultTimeout)\n\tdefer cancel()\n\n\tresp, err := h.ChainKit.GetBlock(ctxt, req)\n\th.NoError(err, \"GetBlock\")\n\n\treturn resp\n}\n\n// GetBlockHash makes an RPC call to chain kit client's GetBlockHash and\n// asserts.",
      "length": 357,
      "tokens": 44,
      "embedding": []
    },
    {
      "slug": "func (h *HarnessRPC) GetBlockHash(",
      "content": "func (h *HarnessRPC) GetBlockHash(\n\treq *chainrpc.GetBlockHashRequest) *chainrpc.GetBlockHashResponse {\n\n\tif req == nil {\n\t\treq = &chainrpc.GetBlockHashRequest{}\n\t}\n\n\tctxt, cancel := context.WithTimeout(h.runCtx, DefaultTimeout)\n\tdefer cancel()\n\n\tresp, err := h.ChainKit.GetBlockHash(ctxt, req)\n\th.NoError(err, \"GetBlockHash\")\n\n\treturn resp\n}\n",
      "length": 294,
      "tokens": 30,
      "embedding": []
    }
  ]
}