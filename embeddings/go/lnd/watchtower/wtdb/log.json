{
  "filepath": "../implementations/go/lnd/watchtower/wtdb/log.go",
  "package": "wtdb",
  "sections": [
    {
      "slug": "func init() {",
      "content": "func init() {\n\tUseLogger(build.NewSubLogger(\"WTDB\", nil))\n}\n\n// DisableLog disables all library log output.  Logging output is disabled\n// by default until UseLogger is called.",
      "length": 158,
      "tokens": 21,
      "embedding": []
    },
    {
      "slug": "func DisableLog() {",
      "content": "func DisableLog() {\n\tUseLogger(btclog.Disabled)\n}\n\n// UseLogger uses a specified Logger to output package logging info.\n// This should be used in preference to SetLogWriter if the caller is also\n// using btclog.",
      "length": 186,
      "tokens": 30,
      "embedding": []
    },
    {
      "slug": "func UseLogger(logger btclog.Logger) {",
      "content": "func UseLogger(logger btclog.Logger) {\n\tlog = logger\n\tmigration1.UseLogger(logger)\n\tmigration2.UseLogger(logger)\n\tmigration3.UseLogger(logger)\n\tmigration4.UseLogger(logger)\n}\n\n// logClosure is used to provide a closure over expensive logging operations so\n// don't have to be performed when the logging level doesn't warrant it.",
      "length": 281,
      "tokens": 34,
      "embedding": []
    },
    {
      "slug": "type logClosure func() string // nolint:unused",
      "content": "type logClosure func() string // nolint:unused\n\n// String invokes the underlying function and returns the result.",
      "length": 65,
      "tokens": 10,
      "embedding": []
    },
    {
      "slug": "func (c logClosure) String() string {",
      "content": "func (c logClosure) String() string {\n\treturn c()\n}\n\n// newLogClosure returns a new closure over a function that returns a string\n// which itself provides a Stringer interface so that it can be used with the\n// logging system.",
      "length": 183,
      "tokens": 34,
      "embedding": []
    },
    {
      "slug": "func newLogClosure(c func() string) logClosure { // nolint:unused",
      "content": "func newLogClosure(c func() string) logClosure { // nolint:unused\n\treturn logClosure(c)\n}\n",
      "length": 22,
      "tokens": 3,
      "embedding": []
    }
  ]
}