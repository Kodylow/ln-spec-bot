{
  "filepath": "../implementations/go/lnd/queue/priority_queue.go",
  "package": "queue",
  "sections": [
    {
      "slug": "type PriorityQueueItem interface {",
      "content": "type PriorityQueueItem interface {\n\t// Less must return true if this item is ordered before other and false\n\t// otherwise.\n\tLess(other PriorityQueueItem) bool\n}\n",
      "length": 122,
      "tokens": 20,
      "embedding": []
    },
    {
      "slug": "type priorityQueue []PriorityQueueItem",
      "content": "type priorityQueue []PriorityQueueItem\n\n// Len returns the length of the priorityQueue.",
      "length": 47,
      "tokens": 8,
      "embedding": []
    },
    {
      "slug": "func (pq priorityQueue) Len() int { return len(pq) }",
      "content": "func (pq priorityQueue) Len() int { return len(pq) }\n\n// Less is used to order PriorityQueueItem items in the queue.",
      "length": 62,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (pq priorityQueue) Less(i, j int) bool {",
      "content": "func (pq priorityQueue) Less(i, j int) bool {\n\treturn pq[i].Less(pq[j])\n}\n\n// Swap swaps two items in the priorityQueue. Swap is used by heap.Interface.",
      "length": 103,
      "tokens": 16,
      "embedding": []
    },
    {
      "slug": "func (pq priorityQueue) Swap(i, j int) {",
      "content": "func (pq priorityQueue) Swap(i, j int) {\n\tpq[i], pq[j] = pq[j], pq[i]\n}\n\n// Push adds a new item the the priorityQueue.",
      "length": 75,
      "tokens": 15,
      "embedding": []
    },
    {
      "slug": "func (pq *priorityQueue) Push(x interface{}) {",
      "content": "func (pq *priorityQueue) Push(x interface{}) {\n\titem := x.(PriorityQueueItem)\n\t*pq = append(*pq, item)\n}\n\n// Pop removes the top item from the priorityQueue.",
      "length": 106,
      "tokens": 17,
      "embedding": []
    },
    {
      "slug": "func (pq *priorityQueue) Pop() interface{} {",
      "content": "func (pq *priorityQueue) Pop() interface{} {\n\told := *pq\n\tn := len(old)\n\titem := old[n-1]\n\told[n-1] = nil\n\t*pq = old[0 : n-1]\n\treturn item\n}\n\n// PriorityQueue wraps a standard heap into a self contained class.",
      "length": 156,
      "tokens": 31,
      "embedding": []
    },
    {
      "slug": "type PriorityQueue struct {",
      "content": "type PriorityQueue struct {\n\tqueue priorityQueue\n}\n\n// Len returns the length of the queue.",
      "length": 60,
      "tokens": 11,
      "embedding": []
    },
    {
      "slug": "func (pq *PriorityQueue) Len() int {",
      "content": "func (pq *PriorityQueue) Len() int {\n\treturn len(pq.queue)\n}\n\n// Empty returns true if the queue is empty.",
      "length": 66,
      "tokens": 12,
      "embedding": []
    },
    {
      "slug": "func (pq *PriorityQueue) Empty() bool {",
      "content": "func (pq *PriorityQueue) Empty() bool {\n\treturn len(pq.queue) == 0\n}\n\n// Push adds an item to the priority queue.",
      "length": 70,
      "tokens": 14,
      "embedding": []
    },
    {
      "slug": "func (pq *PriorityQueue) Push(item PriorityQueueItem) {",
      "content": "func (pq *PriorityQueue) Push(item PriorityQueueItem) {\n\theap.Push(&pq.queue, item)\n}\n\n// Pop removes the top most item from the queue.",
      "length": 76,
      "tokens": 13,
      "embedding": []
    },
    {
      "slug": "func (pq *PriorityQueue) Pop() PriorityQueueItem {",
      "content": "func (pq *PriorityQueue) Pop() PriorityQueueItem {\n\treturn heap.Pop(&pq.queue).(PriorityQueueItem)\n}\n\n// Top returns the top most item from the queue without removing it.",
      "length": 116,
      "tokens": 16,
      "embedding": []
    },
    {
      "slug": "func (pq *PriorityQueue) Top() PriorityQueueItem {",
      "content": "func (pq *PriorityQueue) Top() PriorityQueueItem {\n\treturn pq.queue[0]\n}\n",
      "length": 20,
      "tokens": 3,
      "embedding": []
    }
  ]
}