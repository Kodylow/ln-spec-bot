{
  "filepath": "../implementations/go/lnd/macaroons/auth.go",
  "package": "macaroons",
  "sections": [
    {
      "slug": "type MacaroonCredential struct {",
      "content": "type MacaroonCredential struct {\n\t*macaroon.Macaroon\n}\n\n// RequireTransportSecurity implements the PerRPCCredentials interface.",
      "length": 91,
      "tokens": 8,
      "embedding": []
    },
    {
      "slug": "func (m MacaroonCredential) RequireTransportSecurity() bool {",
      "content": "func (m MacaroonCredential) RequireTransportSecurity() bool {\n\treturn true\n}\n\n// GetRequestMetadata implements the PerRPCCredentials interface. This method\n// is required in order to pass the wrapped macaroon into the gRPC context.\n// With this, the macaroon will be available within the request handling scope\n// of the ultimate gRPC server implementation.",
      "length": 289,
      "tokens": 45,
      "embedding": []
    },
    {
      "slug": "func (m MacaroonCredential) GetRequestMetadata(ctx context.Context,",
      "content": "func (m MacaroonCredential) GetRequestMetadata(ctx context.Context,\n\turi ...string) (map[string]string, error) {\n\n\tmacBytes, err := m.MarshalBinary()\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tmd := make(map[string]string)\n\tmd[\"macaroon\"] = hex.EncodeToString(macBytes)\n\treturn md, nil\n}\n\n// NewMacaroonCredential returns a copy of the passed macaroon wrapped in a\n// MacaroonCredential struct which implements PerRPCCredentials.",
      "length": 345,
      "tokens": 46,
      "embedding": []
    },
    {
      "slug": "func NewMacaroonCredential(m *macaroon.Macaroon) (MacaroonCredential, error) {",
      "content": "func NewMacaroonCredential(m *macaroon.Macaroon) (MacaroonCredential, error) {\n\tms := MacaroonCredential{}\n\n\t// The macaroon library's Clone() method has a subtle bug that doesn't\n\t// correctly clone all caveats. We need to use our own, safe clone\n\t// function instead.\n\tvar err error\n\tms.Macaroon, err = SafeCopyMacaroon(m)\n\tif err != nil {\n\t\treturn ms, err\n\t}\n\n\treturn ms, nil\n}\n",
      "length": 289,
      "tokens": 51,
      "embedding": []
    }
  ]
}