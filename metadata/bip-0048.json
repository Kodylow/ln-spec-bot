{
  "BIP": "48",
  "Layer": "Applications",
  "Title": "Multi-Script Hierarchy for Multi-Sig Wallets",
  "Author": "Fontaine <dentondevelopment@protonmail.com>",
  "Comments-Summary": "No comments",
  "Comments-URI": "https://github.com/bitcoin/bips/wiki/Comments:BIP-0048",
  "Status": "Proposed",
  "Type": "Standards Track",
  "Created": "2020-12-16",
  "License": "MIT",
  "sections": [
    {
      "header": "Abstract",
      "content": "This BIP defines a logical hierarchy for deterministic multi-sig wallets\nbased on an algorithm described in BIP-0067 (BIP67 from now on),\nBIP-0032 (BIP32 from now on), purpose scheme described in BIP-0043\n(BIP43 from now on), and multi-account hierarchy described in BIP-0044\n(BIP44 from now on).\n\nThis BIP is a particular application of BIP43."
    },
    {
      "header": "Copyright",
      "content": "This BIP falls under the MIT License."
    },
    {
      "header": "Motivation",
      "content": "The motivation of this BIP is to define the existing industry wide\npractice of utilizing m/48\\' derivation paths in hierarchical\ndeterministic multi-sig wallets so that other developers may benefit\nfrom a standard. This BIP allows for future script types to easily be\nappended to the specification so that a new BIP is not required for\nevery future script type.\n\nThe hierarchy proposed in this paper is quite comprehensive. It allows\nthe handling of multiple accounts, external and internal chains per\naccount, multiple script types and millions of addresses per chain.\n\nThis paper was inspired from BIP44."
    },
    {
      "header": "Backwards compatibility {#backwards_compatibility}",
      "content": "Currently a number of wallets utilize the \u200e`m/48'` derivation scheme for\nHD multi-sig accounts. This BIP is intended to maintain the \\*existing\\*\nreal world use of the \u200e`m/48'` derivation. No breaking changes are made\nso as to avoid \\\"loss of funds\\\" to existing users. Wallets which\ncurrently support the \u200e`m/48'` derivation will not need to make any\nchanges to comply with this BIP."
    },
    {
      "header": "Specification",
      "content": "### Key sorting {#key_sorting}\n\nAny wallet that supports BIP48 inherently supports deterministic key\nsorting as per BIP67 so that all possible multi-signature\naddresses/scripts are derived from deterministically sorted public keys."
    },
    {
      "header": "Path levels {#path_levels}",
      "content": "We define the following 6 levels in BIP32 path:\n\nm / purpose' / coin_type' / account' / script_type' / change / address_index\n\n`h` or `'` in the path indicates that BIP32 hardened derivation is used.\n\nEach level has a special meaning, described in the chapters below."
    },
    {
      "header": "Purpose",
      "content": "Purpose is a constant set to 48\\' following the BIP43 recommendation. It\nindicates that the subtree of this node is used according to this\nspecification.\n\nHardened derivation is used at this level."
    },
    {
      "header": "Coin type {#coin_type}",
      "content": "One master node (seed) can be used for multiple Bitcoin networks.\nSharing the same space for various networks has some disadvantages.\n\nAvoiding reusing addresses across networks and improving privacy issues.\n\nCoin type `0` for mainnet and `1` for testnet.\n\nHardened derivation is used at this level."
    },
    {
      "header": "Account",
      "content": "This level splits the key space into independent user identities,\nfollowing the BIP44 pattern, so the wallet never mixes the coins across\ndifferent accounts.\n\nUsers can use these accounts to organize the funds in the same fashion\nas bank accounts; for donation purposes (where all addresses are\nconsidered public), for saving purposes, for common expenses etc.\n\nAccounts are numbered from index 0 in sequentially increasing manner.\nThis number is used as child index in BIP32 derivation.\n\nHardened derivation is used at this level."
    },
    {
      "header": "Script",
      "content": "This level splits the key space into two separate `script_type`(s). To\nprovide forward compatibility for future script types this specification\ncan be easily extended.\n\nCurrently the only script types covered by this BIP are Native Segwit\n(p2wsh) and Nested Segwit (p2sh-p2wsh).\n\nThe following path represents Nested Segwit (p2sh-p2wsh) mainnet,\naccount 0: `1'`: Nested Segwit (p2sh-p2wsh)\n`m/48'/0'/0'/1'``</br>`{=html}\n\nThe following path represents Native Segwit (p2wsh) mainnet, account 0:\n`2'`: Native Segwit (p2wsh) `m/48'/0'/0'/2'``</br>`{=html}\n\nThe recommended default for wallets is pay to witness script hash\n`m/48'/0'/0'/2'`.\n\nTo add new script types submit a PR to this specification and include it\nin the list above: `X'`: Future script type\n`m/48'/0'/0'/X'``</br>`{=html}"
    },
    {
      "header": "Change",
      "content": "Constant 0 is used for external chain and constant 1 for internal chain\n(also known as change addresses). External chain is used for addresses\nthat are meant to be visible outside of the wallet (e.g. for receiving\npayments). Internal chain is used for addresses which are not meant to\nbe visible outside of the wallet and is used for return transaction\nchange.\n\nPublic derivation is used at this level."
    },
    {
      "header": "Index",
      "content": "Addresses are numbered from index 0 in sequentially increasing manner.\nThis number is used as child index in BIP32 derivation.\n\nPublic derivation is used at this level."
    },
    {
      "header": "Examples",
      "content": "--------- --------- ------------ ---------- --------- ------------------------------------\nnetwork   account   script       chain      address   path\nmainnet   first     p2wsh        external   first     m / 48\\' / 0\\' / 0\\' / 2\\' / 0 / 0\nmainnet   first     p2wsh        external   second    m / 48\\' / 0\\' / 0\\' / 2\\' / 0 / 1\nmainnet   first     p2wsh        change     first     m / 48\\' / 0\\' / 0\\' / 2\\' / 1 / 0\nmainnet   first     p2wsh        change     second    m / 48\\' / 0\\' / 0\\' / 2\\' / 1 / 1\nmainnet   second    p2wsh        external   first     m / 48\\' / 0\\' / 1\\' / 2\\' / 0 / 0\nmainnet   second    p2wsh        external   second    m / 48\\' / 0\\' / 1\\' / 2\\' / 0 / 1\ntestnet   first     p2sh-p2wsh   external   first     m / 48\\' / 1\\' / 0\\' / 1\\' / 0 / 0\ntestnet   first     p2wsh        external   second    m / 48\\' / 1\\' / 0\\' / 2\\' / 0 / 1\ntestnet   first     p2wsh        change     first     m / 48\\' / 1\\' / 0\\' / 2\\' / 1 / 0\ntestnet   first     p2wsh        change     second    m / 48\\' / 1\\' / 0\\' / 2\\' / 1 / 1\ntestnet   second    p2wsh        external   first     m / 48\\' / 1\\' / 1\\' / 2\\' / 0 / 0\ntestnet   second    p2wsh        external   second    m / 48\\' / 1\\' / 1\\' / 2\\' / 0 / 1\ntestnet   second    p2wsh        change     first     m / 48\\' / 1\\' / 1\\' / 2\\' / 1 / 0\ntestnet   second    p2wsh        change     second    m / 48\\' / 1\\' / 1\\' / 2\\' / 1 / 1\n--------- --------- ------------ ---------- --------- ------------------------------------"
    },
    {
      "header": "Reference",
      "content": "-   [BIP67 - Deterministic Pay-to-script-hash multi-signature addresses\nthrough public key sorting](bip-0067.mediawiki \"wikilink\")\n-   [BIP32 - Hierarchical Deterministic\nWallets](bip-0032.mediawiki \"wikilink\")\n-   [BIP43 - Purpose Field for Deterministic\nWallets](bip-0043.mediawiki \"wikilink\")\n-   [BIP44 - Multi-Account Hierarchy for Deterministic\nWallets](bip-0044.mediawiki \"wikilink\")"
    }
  ]
}