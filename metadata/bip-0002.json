{
  "BIP": "2",
  "Title": "BIP process, revised",
  "Author": "Luke Dashjr <luke+bip@dashjr.org>",
  "Comments-Summary": "No comments yet.",
  "Comments-URI": "https://github.com/bitcoin/bips/wiki/Comments:BIP-0002",
  "Status": "Active",
  "Type": "Process",
  "Created": "2016-02-03",
  "License": "BSD-2-Clause",
  "Replaces": "1",
  "sections": [
    {
      "header": "Abstract",
      "content": "A Bitcoin Improvement Proposal (BIP) is a design document providing\ninformation to the Bitcoin community, or describing a new feature for\nBitcoin or its processes or environment. The BIP should provide a\nconcise technical specification of the feature and a rationale for the\nfeature.\n\nWe intend BIPs to be the primary mechanisms for proposing new features,\nfor collecting community input on an issue, and for documenting the\ndesign decisions that have gone into Bitcoin. The BIP author is\nresponsible for building consensus within the community and documenting\ndissenting opinions.\n\nBecause the BIPs are maintained as text files in a versioned repository,\ntheir revision history is the historical record of the feature proposal.\n\nThis particular BIP replaces BIP 1 with a more well-defined and clear\nprocess."
    },
    {
      "header": "Copyright",
      "content": "This BIP is dual-licensed under the Open Publication License and BSD\n2-clause license."
    },
    {
      "header": "BIP workflow {#bip_workflow}",
      "content": "The BIP process begins with a new idea for Bitcoin. Each potential BIP\nmust have a champion \\-- someone who writes the BIP using the style and\nformat described below, shepherds the discussions in the appropriate\nforums, and attempts to build community consensus around the idea. The\nBIP champion (a.k.a. Author) should first attempt to ascertain whether\nthe idea is BIP-able. Small enhancements or patches to a particular\npiece of software often don\\'t require standardisation between multiple\nprojects; these don\\'t need a BIP and should be injected into the\nrelevant project-specific development workflow with a patch submission\nto the applicable issue tracker. Additionally, many ideas have been\nbrought forward for changing Bitcoin that have been rejected for various\nreasons. The first step should be to search past discussions to see if\nan idea has been considered before, and if so, what issues arose in its\nprogression. After investigating past work, the best way to proceed is\nby posting about the new idea to the [Bitcoin development mailing\nlist](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev).\n\nVetting an idea publicly before going as far as writing a BIP is meant\nto save both the potential author and the wider community time. Asking\nthe Bitcoin community first if an idea is original helps prevent too\nmuch time being spent on something that is guaranteed to be rejected\nbased on prior discussions (searching the internet does not always do\nthe trick). It also helps to make sure the idea is applicable to the\nentire community and not just the author. Just because an idea sounds\ngood to the author does not mean it will work for most people in most\nareas where Bitcoin is used.\n\nOnce the champion has asked the Bitcoin community as to whether an idea\nhas any chance of acceptance, a draft BIP should be presented to the\n[Bitcoin development mailing\nlist](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev).\nThis gives the author a chance to flesh out the draft BIP to make it\nproperly formatted, of high quality, and to address additional concerns\nabout the proposal. Following a discussion, the proposal should be\nsubmitted to the [BIPs git repository](https://github.com/bitcoin/bips)\nas a pull request. This draft must be written in BIP style as described\nbelow, and named with an alias such as \\\"bip-johndoe-infinitebitcoins\\\"\nuntil an editor has assigned it a BIP number (authors MUST NOT\nself-assign BIP numbers).\n\nBIP authors are responsible for collecting community feedback on both\nthe initial idea and the BIP before submitting it for review. However,\nwherever possible, long open-ended discussions on public mailing lists\nshould be avoided. Strategies to keep the discussions efficient include:\nsetting up a separate SIG mailing list for the topic, having the BIP\nauthor accept private comments in the early design phases, setting up a\nwiki page or git repository, etc. BIP authors should use their\ndiscretion here.\n\nIt is highly recommended that a single BIP contain a single key proposal\nor new idea. The more focused the BIP, the more successful it tends to\nbe. If in doubt, split your BIP into several well-focused ones.\n\nWhen the BIP draft is complete, a BIP editor will assign the BIP a\nnumber, label it as Standards Track, Informational, or Process, and\nmerge the pull request to the BIPs git repository. The BIP editors will\nnot unreasonably reject a BIP. Reasons for rejecting BIPs include\nduplication of effort, disregard for formatting rules, being too\nunfocused or too broad, being technically unsound, not providing proper\nmotivation or addressing backwards compatibility, or not in keeping with\nthe Bitcoin philosophy. For a BIP to be accepted it must meet certain\nminimum criteria. It must be a clear and complete description of the\nproposed enhancement. The enhancement must represent a net improvement.\nThe proposed implementation, if applicable, must be solid and must not\ncomplicate the protocol unduly.\n\nThe BIP author may update the draft as necessary in the git repository.\nUpdates to drafts should also be submitted by the author as pull\nrequests."
    },
    {
      "header": "Transferring BIP Ownership {#transferring_bip_ownership}",
      "content": "It occasionally becomes necessary to transfer ownership of BIPs to a new\nchampion. In general, we\\'d like to retain the original author as a\nco-author of the transferred BIP, but that\\'s really up to the original\nauthor. A good reason to transfer ownership is because the original\nauthor no longer has the time or interest in updating it or following\nthrough with the BIP process, or has fallen off the face of the \\'net\n(i.e. is unreachable or not responding to email). A bad reason to\ntransfer ownership is because you don\\'t agree with the direction of the\nBIP. We try to build consensus around a BIP, but if that\\'s not\npossible, you can always submit a competing BIP.\n\nIf you are interested in assuming ownership of a BIP, send a message\nasking to take over, addressed to both the original author and the BIP\neditors. If the original author doesn\\'t respond to email in a timely\nmanner, the BIP editors will make a unilateral decision (it\\'s not like\nsuch decisions can\\'t be reversed :)."
    },
    {
      "header": "BIP Editors {#bip_editors}",
      "content": "The current BIP editors are:\n\n-   Luke Dashjr (<luke_bipeditor@dashjr.org>)\n-   Kalle Alm (<karljohan-alm@garage.co.jp>)"
    },
    {
      "header": "BIP Editor Responsibilities & Workflow {#bip_editor_responsibilities_workflow}",
      "content": "The BIP editors subscribe to the Bitcoin development mailing list.\nOff-list BIP-related correspondence should be sent (or CC\\'d) to the BIP\neditors.\n\nFor each new BIP that comes in an editor does the following:\n\n-   Read the BIP to check if it is ready: sound and complete. The ideas\nmust make technical sense, even if they don\\'t seem likely to be\naccepted.\n-   The title should accurately describe the content.\n-   The BIP draft must have been sent to the Bitcoin development mailing\nlist for discussion.\n-   Motivation and backward compatibility (when applicable) must be\naddressed.\n-   The defined Layer header must be correctly assigned for the given\nspecification.\n-   Licensing terms must be acceptable for BIPs.\n\nIf the BIP isn\\'t ready, the editor will send it back to the author for\nrevision, with specific instructions.\n\nOnce the BIP is ready for the repository it should be submitted as a\n\\\"pull request\\\" to the [BIPs git\nrepository](https://github.com/bitcoin/bips) where it may get further\nfeedback.\n\nThe BIP editor will:\n\n-   Assign a BIP number in the pull request.\n\n```{=html}\n<!-- -->\n```\n-   Merge the pull request when it is ready.\n\n```{=html}\n<!-- -->\n```\n-   List the BIP in [README.mediawiki](README.mediawiki \"wikilink\")\n\nThe BIP editors are intended to fulfill administrative and editorial\nresponsibilities. The BIP editors monitor BIP changes, and update BIP\nheaders as appropriate."
    },
    {
      "header": "BIP format and structure {#bip_format_and_structure}",
      "content": "### Specification\n\nBIPs should be written in mediawiki format.\n\nEach BIP should have the following parts:\n\n-   Preamble \\-- Headers containing metadata about the BIP ([see\nbelow](#BIP_header_preamble \"wikilink\")).\n\n```{=html}\n<!-- -->\n```\n-   Abstract \\-- A short (\\~200 word) description of the technical issue\nbeing addressed.\n\n```{=html}\n<!-- -->\n```\n-   Copyright \\-- The BIP must be explicitly licensed under acceptable\ncopyright terms ([see below](#BIP_licensing \"wikilink\")).\n\n```{=html}\n<!-- -->\n```\n-   Specification \\-- The technical specification should describe the\nsyntax and semantics of any new feature. The specification should be\ndetailed enough to allow competing, interoperable implementations\nfor any of the current Bitcoin platforms.\n\n```{=html}\n<!-- -->\n```\n-   Motivation \\-- The motivation is critical for BIPs that want to\nchange the Bitcoin protocol. It should clearly explain why the\nexisting protocol is inadequate to address the problem that the BIP\nsolves.\n\n```{=html}\n<!-- -->\n```\n-   Rationale \\-- The rationale fleshes out the specification by\ndescribing what motivated the design and why particular design\ndecisions were made. It should describe alternate designs that were\nconsidered and related work. The rationale should provide evidence\nof consensus within the community and discuss important objections\nor concerns raised during discussion.\n\n```{=html}\n<!-- -->\n```\n-   Backwards compatibility \\-- All BIPs that introduce backwards\nincompatibilities must include a section describing these\nincompatibilities and their severity. The BIP must explain how the\nauthor proposes to deal with these incompatibilities.\n\n```{=html}\n<!-- -->\n```\n-   Reference implementation \\-- The reference implementation must be\ncompleted before any BIP is given status \\\"Final\\\", but it need not\nbe completed before the BIP is accepted. It is better to finish the\nspecification and rationale first and reach consensus on it before\nwriting code. The final implementation must include test code and\ndocumentation appropriate for the Bitcoin protocol."
    },
    {
      "header": "BIP header preamble {#bip_header_preamble}",
      "content": "Each BIP must begin with an RFC 822 style header preamble. The headers\nmust appear in the following order. Headers marked with \\\"\\*\\\" are\noptional and are described below. All other headers are required.\n\nBIP: <BIP number, or \"?\" before being assigned>\n* Layer: <Consensus (soft fork) | Consensus (hard fork) | Peer Services | API/RPC | Applications>\nTitle: <BIP title; maximum 44 characters>\nAuthor: <list of authors' real names and email addrs>\n* Discussions-To: <email address>\n* Comments-Summary: <summary tone>\nComments-URI: <links to wiki page for comments>\nStatus: <Draft | Active | Proposed | Deferred | Rejected |\nWithdrawn | Final | Replaced | Obsolete>\nType: <Standards Track | Informational | Process>\nCreated: <date created on, in ISO 8601 (yyyy-mm-dd) format>\nLicense: <abbreviation for approved license(s)>\n* License-Code: <abbreviation for code under different approved license(s)>\n* Post-History: <dates of postings to bitcoin mailing list, or link to thread in mailing list archive>\n* Requires: <BIP number(s)>\n* Replaces: <BIP number>\n* Superseded-By: <BIP number>\n\nThe Layer header (only for Standards Track BIPs) documents which layer\nof Bitcoin the BIP applies to. See [BIP\n123](bip-0123.mediawiki \"wikilink\") for definitions of the various BIP\nlayers. Activation of this BIP implies activation of BIP 123.\n\nThe Author header lists the names and email addresses of all the\nauthors/owners of the BIP. The format of the Author header value must be\n\n`\u00a0Random\u00a0J.\u00a0User\u00a0<address@dom.ain>`\n\nIf there are multiple authors, each should be on a separate line\nfollowing RFC 2822 continuation line conventions.\n\nWhile a BIP is in private discussions (usually during the initial Draft\nphase), a Discussions-To header will indicate the mailing list or URL\nwhere the BIP is being discussed. No Discussions-To header is necessary\nif the BIP is being discussed privately with the author, or on the\nbitcoin email mailing lists.\n\nThe Type header specifies the type of BIP: Standards Track,\nInformational, or Process.\n\nThe Created header records the date that the BIP was assigned a number,\nwhile Post-History is used to record when new versions of the BIP are\nposted to bitcoin mailing lists. Dates should be in yyyy-mm-dd format,\ne.g. 2001-08-14. Post-History is permitted to be a link to a specific\nthread in a mailing list archive.\n\nBIPs may have a Requires header, indicating the BIP numbers that this\nBIP depends on.\n\nBIPs may also have a Superseded-By header indicating that a BIP has been\nrendered obsolete by a later document; the value is the number of the\nBIP that replaces the current document. The newer BIP must have a\nReplaces header containing the number of the BIP that it rendered\nobsolete."
    },
    {
      "header": "Auxiliary Files {#auxiliary_files}",
      "content": "BIPs may include auxiliary files such as diagrams. Auxiliary files\nshould be included in a subdirectory for that BIP, or must be named\nBIP-XXXX-Y.ext, where \\\"XXXX\\\" is the BIP number, \\\"Y\\\" is a serial\nnumber (starting at 1), and \\\"ext\\\" is replaced by the actual file\nextension (e.g. \\\"png\\\")."
    },
    {
      "header": "BIP types {#bip_types}",
      "content": "There are three kinds of BIP:\n\n-   A Standards Track BIP describes any change that affects most or all\nBitcoin implementations, such as a change to the network protocol, a\nchange in block or transaction validity rules, or any change or\naddition that affects the interoperability of applications using\nBitcoin. Standards Track BIPs consist of two parts, a design\ndocument and a reference implementation.\n-   An Informational BIP describes a Bitcoin design issue, or provides\ngeneral guidelines or information to the Bitcoin community, but does\nnot propose a new feature. Informational BIPs do not necessarily\nrepresent a Bitcoin community consensus or recommendation, so users\nand implementors are free to ignore Informational BIPs or follow\ntheir advice.\n-   A Process BIP describes a process surrounding Bitcoin, or proposes a\nchange to (or an event in) a process. Process BIPs are like\nStandards Track BIPs but apply to areas other than the Bitcoin\nprotocol itself. They may propose an implementation, but not to\nBitcoin\\'s codebase; they often require community consensus; unlike\nInformational BIPs, they are more than recommendations, and users\nare typically not free to ignore them. Examples include procedures,\nguidelines, changes to the decision-making process, and changes to\nthe tools or environment used in Bitcoin development. Any meta-BIP\nis also considered a Process BIP."
    },
    {
      "header": "BIP status field {#bip_status_field}",
      "content": "### Specification {#specification_1}\n\nThe typical paths of the status of BIPs are as follows:\n\n`<img src=\"bip-0002/process.png\">`{=html}`</img>`{=html}\n\nChampions of a BIP may decide on their own to change the status between\nDraft, Deferred, or Withdrawn. A BIP editor may also change the status\nto Deferred when no progress is being made on the BIP.\n\nA BIP may only change status from Draft (or Rejected) to Proposed, when\nthe author deems it is complete, has a working implementation (where\napplicable), and has community plans to progress it to the Final status.\n\nBIPs should be changed from Draft or Proposed status, to Rejected\nstatus, upon request by any person, if they have not made progress in\nthree years. Such a BIP may be changed to Draft status if the champion\nprovides revisions that meaningfully address public criticism of the\nproposal, or to Proposed status if it meets the criteria required as\ndescribed in the previous paragraph.\n\nA Proposed BIP may progress to Final only when specific criteria\nreflecting real-world adoption has occurred. This is different for each\nBIP depending on the nature of its proposed changes, which will be\nexpanded on below. Evaluation of this status change should be\nobjectively verifiable, and/or be discussed on the development mailing\nlist.\n\nWhen a Final BIP is no longer relevant, its status may be changed to\nReplaced or Obsolete (which is equivalent to Replaced). This change must\nalso be objectively verifiable and/or discussed.\n\nA process BIP may change status from Draft to Active when it achieves\nrough consensus on the mailing list. Such a proposal is said to have\nrough consensus if it has been open to discussion on the development\nmailing list for at least one month, and no person maintains any\nunaddressed substantiated objections to it. Addressed or obstructive\nobjections may be ignored/overruled by general agreement that they have\nbeen sufficiently addressed, but clear reasoning must be given in such\ncircumstances."
    },
    {
      "header": "Progression to Final status {#progression_to_final_status}",
      "content": "A soft-fork BIP strictly requires a clear miner majority expressed by\nblockchain voting (eg, using BIP 9). In addition, if the economy seems\nwilling to make a \\\"no confidence\\\" hard-fork (such as a change in\nproof-of-work algorithm), the soft-fork does not become Final for as\nlong as such a hard-fork might have majority support, or at most three\nmonths. Soft-fork BIPs may also set additional requirements for their\nadoption. Because of the possibility of changes to miner dynamics,\nespecially in light of delegated voting (mining pools), it is highly\nrecommended that a supermajority vote around 95% be required by the BIP\nitself, unless rationale is given for a lower threshold.\n\nA hard-fork BIP requires adoption from the entire Bitcoin economy,\nparticularly including those selling desirable goods and services in\nexchange for bitcoin payments, as well as Bitcoin holders who wish to\nspend or would spend their bitcoins (including selling for other\ncurrencies) differently in the event of such a hard-fork. Adoption must\nbe expressed by de facto usage of the hard-fork in practice (ie, not\nmerely expressing public support, although that is a good step to\nestablish agreement before adoption of the BIP). This economic adoption\ncannot be established merely by a super-majority, except by literally\nforcing the minority to accept the hard-fork (whether this is viable or\nnot is outside the scope of this document).\n\nPeer services BIPs should be observed to be adopted by at least 1% of\npublic listening nodes for one month.\n\nAPI/RPC and application layer BIPs must be implemented by at least two\nindependent and compatible software applications.\n\nSoftware authors are encouraged to publish summaries of what BIPs their\nsoftware supports to aid in verification of status changes. Good\nexamples of this at the time of writing this BIP, can be observed in\n[Bitcoin Core\\'s doc/bips.md\nfile](https://github.com/bitcoin/bitcoin/blob/master/doc/bips.md) as\nwell as [Bitcoin Wallet for Android\\'s wallet/README.specs.md\nfile](https://github.com/bitcoin-wallet/bitcoin-wallet/blob/master/wallet/README.specs.md).\n\nThese criteria are considered objective ways to observe the de facto\nadoption of the BIP, and are not to be used as reasons to oppose or\nreject a BIP. Should a BIP become actually and unambiguously adopted\ndespite not meeting the criteria outlined here, it should still be\nupdated to Final status."
    },
    {
      "header": "Rationale",
      "content": "Why is this necessary at all?\n\n-   BIP 1 defines an ambiguous criteria for the Status field of BIPs,\nwhich is often a source of confusion. As a result, many BIPs with\nsignificant real-world use have been left as Draft or Proposed\nstatus longer than appropriate. By giving objective criteria to\njudge the progression of BIPs, this proposal aims to help keep the\nStatus accurate and up-to-date.\n\nHow is the entire Bitcoin economy defined by people selling\ngoods/services and holders?\n\n-   For Bitcoin to function as a currency, it must be accepted as\npayment. Bitcoins have no value if you cannot acquire anything in\nexchange for them. If everyone accepting such payments requires a\nparticular set of consensus rules, \\\"bitcoins\\\" are de facto defined\nby that set of rules - this is already the case today. If those\nconsensus rules are expected to broaden (as with a hard-fork), those\nmerchants need to accept payments made under the new set of rules,\nor they will reject \\\"bitcoins\\\" as invalid. Holders are relevant to\nthe degree in that they choose the merchants they wish to spend\ntheir bitcoins with, and could also as a whole decide to sell under\none set of consensus rules or the other, thus flooding the market\nwith bitcoins and crashing the price.\n\nWhy aren\\'t `<x>`{=html} included in the economy?\n\n-   Some entities may, to some degree, also be involved in offering\ngoods and/or services in exchange for bitcoins, thus in that\ncapacity (but not their capacity as `<x>`{=html}) be involved in the\neconomy.\n-   Miners are not included in the economy, because they merely \\*rely\non\\* others to sell/spend their otherwise-worthless mined produce.\nTherefore, they must accept everyone else\\'s direction in deciding\nthe consensus rules.\n-   Exchanges are not included in the economy, because they merely\nprovide services of connecting the merchants and users who wish to\ntrade. Even if all exchanges were to defect from Bitcoin, those\nmerchants and users can always trade directly and/or establish their\nown exchanges.\n-   Developers are not included in the economy, since they merely write\ncode, and it is up to others to decide to use that code or not.\n\nBut they\\'re doing something important and have invested a lot in\nBitcoin! Shouldn\\'t they be included in such an important decision?\n\n-   This BIP does not aim to address what \\\"should\\\" be the basis of\ndecisions. Such a statement, no matter how perfect in its\njustification, would be futile without some way to force others to\nuse it. The BIP process does not aim to be a kind of forceful\n\\\"governance\\\" of Bitcoin, merely to provide a collaborative\nrepository for proposing and providing information on standards,\nwhich people may voluntarily adopt or not. It can only hope to\nachieve accuracy in regard to the \\\"Status\\\" field by striving to\nreflect the reality of \\*how things actually are\\*, rather than\n\\*how they should be\\*.\n\nWhat if a single merchant wishes to block a hard-fork?\n\n-   This BIP addresses only the progression of the BIP Status field, not\nthe deployment of the hard-fork (or any other change) itself.\n-   Regardless, one shop cannot operate in a vacuum: if they are indeed\nalone, they will soon find themselves no longer selling in exchange\nfor bitcoin payments, as nobody else would exist willing to use the\nprevious blockchain to pay them. If they are no longer selling, they\ncease to meet the criteria herein which enables their veto.\n\nHow about a small number of merchants (maybe only two) who sell products\nto each other?\n\n-   In this scenario, it would seem the previous Bitcoin is alive and\nworking, and that the hard-fork has failed. How to resolve such a\nsplit is outside the scope of this BIP.\n\nHow can economic agreement veto a soft-fork?\n\n-   The group of miners is determined by the consensus rules for the\ndynamic-membership multi-party signature (for Bitcoin, the\nproof-of-work algorithm), which can be modified with a hard-fork.\nThus, if the same conditions required to modify this group are met\nin opposition to a soft-fork, the miner majority supporting the\nsoft-fork is effectively void because the economy can decide to\nreplace them with another group of would-be miners who do not\nsupport the soft-fork.\n\nWhat happens if the economy decides to hard-fork away from a\ncontroversial soft-fork, more than three months later?\n\n-   The controversial soft-fork, in this circumstance, changes from\nFinal to Replaced status to reflect the nature of the hard-fork\nreplacing the previous (final) soft-fork.\n\nWhat is the ideal percentage of listening nodes needed to adopt peer\nservices proposals?\n\n-   This is unknown, and set rather arbitrarily at this time. For a\nrandom selection of peers to have at least one other peer\nimplementing the extension, 13% or more would be necessary, but\nnodes could continue to scan the network for such peers with perhaps\nsome reasonable success. Furthermore, service bits exist to help\nidentification upfront.\n\nWhy is it necessary for at least two software projects to release an\nimplementation of API/RPC and application layer BIPs, before they become\nFinal?\n\n-   If there is only one implementation of a specification, there is no\nother program for which a standard interface is used with or needed.\n-   Even if there are only two projects rather than more, some standard\ncoordination between them exists.\n\nWhat if a BIP is proposed that only makes sense for a single specific\nproject?\n\n-   The BIP process exists for standardisation between independent\nprojects. If something only affects one project, it should be done\nthrough that project\\'s own internal processes, and never be\nproposed as a BIP in the first place."
    },
    {
      "header": "BIP comments {#bip_comments}",
      "content": "### Specification {#specification_2}\n\nEach BIP should, in its preamble, link to a public wiki page with a\nsummary tone of the comments on that page. Reviewers of the BIP who\nconsider themselves qualified, should post their own comments on this\nwiki page. The comments page should generally only be used to post final\ncomments for a completed BIP. If a BIP is not yet completed, reviewers\nshould instead post on the applicable development mailing list thread to\nallow the BIP author(s) to address any concerns or problems pointed out\nby the review.\n\nSome BIPs receive exposure outside the development community prior to\ncompletion, and other BIPs might not be completed at all. To avoid a\nsituation where critical BIP reviews may go unnoticed during this\nperiod, reviewers may, at their option, still post their review on the\ncomments page, provided they first post it to the mailing list and plan\nto later remove or revise it as applicable based on the completed\nversion. Such revisions should be made by editing the previous review\nand updating the timestamp. Reviews made prior to the complete version\nmay be removed if they are no longer applicable and have not been\nupdated in a timely manner (eg, within one month).\n\nPages must be named after the full BIP number (eg, \\\"BIP 0001\\\") and\nplaced in the \\\"Comments\\\" namespace. For example, the link for BIP 1\nwill be <https://github.com/bitcoin/bips/wiki/Comments:BIP-0001> .\n\nComments posted to this wiki should use the following format:\n\n`\u00a0\u00a0\u00a0``<Your opinion>`{=html}`\u00a0--``<Your name>`{=html}`,\u00a0<Date\u00a0of\u00a0posting,\u00a0as\u00a0YYYY-MM-DD>`\n\nBIPs may also choose to list a second forum for BIP comments, in\naddition to the BIPs wiki. In this case, the second forum\\'s URI should\nbe listed below the primary wiki\\'s URI.\n\nAfter some time, the BIP itself may be updated with a summary tone of\nthe comments. Summary tones may be chosen from the following, but this\nBIP does not intend to cover all possible nuances and other summaries\nmay be used as needed:\n\n-   No comments yet.\n-   Unanimously Recommended for implementation\n-   Unanimously Discourage for implementation\n-   Mostly Recommended for implementation, with some Discouragement\n-   Mostly Discouraged for implementation, with some Recommendation\n\nFor example, the preamble to BIP 1 might be updated to include the line:\n\n`\u00a0\u00a0\u00a0Comments-Summary:\u00a0No\u00a0comments\u00a0yet.`\\\n`\u00a0\u00a0\u00a0Comments-URI:\u00a0`[`https://github.com/bitcoin/bips/wiki/Comments:BIP-0001`](https://github.com/bitcoin/bips/wiki/Comments:BIP-0001)\\\n`\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0`[`https://some-other-wiki.org/BIP_1_Comments`](https://some-other-wiki.org/BIP_1_Comments)\n\nThese fields must follow the \\\"Discussions-To\\\" header defined in BIP 1\n(if that header is not present, it should follow the position where it\nwould be present; generally this is immediately above the Status\nheader).\n\nTo avoid doubt: comments and status are unrelated metrics to judge a\nBIP, and neither should be directly influencing the other."
    },
    {
      "header": "Rationale {#rationale_1}",
      "content": "What is the purpose of BIP comments?\n\n-   Various BIPs have been adopted (the criteria required for \\\"Final\\\"\nStatus) despite being considered generally inadvisable. Some\npresently regard BIPs as a \\\"good idea\\\" simply by virtue of them\nbeing assigned a BIP number. Due to the low barrier of entry for\nsubmission of new BIPs, it seems advisable for a way for reviewers\nto express their opinions on them in a way that is consumable to the\npublic without needing to review the entire development discussion.\n\nWill BIP comments be censored or limited to particular\nparticipants/\\\"experts\\\"?\n\n-   Participants should freely refrain from commenting outside of their\narea of knowledge or expertise. However, comments should not be\ncensored, and participation should be open to the public."
    },
    {
      "header": "BIP licensing {#bip_licensing}",
      "content": "### Specification {#specification_3}\n\nNew BIPs may be accepted with the following licenses. Each new BIP must\nidentify at least one acceptable license in its preamble. The License\nheader in the preamble must be placed after the Created header. Each\nlicense must be referenced by their respective abbreviation given below.\n\nFor example, a preamble might include the following License header:\n\n`\u00a0\u00a0\u00a0License:\u00a0BSD-2-Clause`\\\n`\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0GNU-All-Permissive`\n\nIn this case, the BIP text is fully licensed under both the OSI-approved\nBSD 2-clause license as well as the GNU All-Permissive License, and\nanyone may modify and redistribute the text provided they comply with\nthe terms of \\*either\\* license. In other words, the license list is an\n\\\"OR choice\\\", not an \\\"AND also\\\" requirement.\n\nIt is also possible to license source code differently from the BIP\ntext. An optional License-Code header is placed after the License\nheader. Again, each license must be referenced by their respective\nabbreviation given below.\n\nFor example, a preamble specifying the optional License-Code header\nmight look like:\n\n`\u00a0\u00a0\u00a0License:\u00a0BSD-2-Clause`\\\n`\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0GNU-All-Permissive`\\\n`\u00a0\u00a0\u00a0License-Code:\u00a0GPL-2.0+`\n\nIn this case, the code in the BIP is not available under the BSD or\nAll-Permissive licenses, but only under the terms of the GNU General\nPublic License (GPL), version 2 or newer. If the code were to be\navailable under \\*only\\* version 2 exactly, the \\\"+\\\" symbol should be\nremoved from the license abbreviation. For a later version (eg, GPL\n3.0), you would increase the version number (and retain or remove the\n\\\"+\\\" depending on intent).\n\n`\u00a0\u00a0\u00a0License-Code:\u00a0GPL-2.0\u00a0\u00a0\u00a0#\u00a0This\u00a0refers\u00a0to\u00a0GPL\u00a0v2.0\u00a0*only*,\u00a0no\u00a0later\u00a0license\u00a0versions\u00a0are\u00a0acceptable.`\\\n`\u00a0\u00a0\u00a0License-Code:\u00a0GPL-2.0+\u00a0\u00a0#\u00a0This\u00a0refers\u00a0to\u00a0GPL\u00a0v2.0\u00a0*or\u00a0later*.`\\\n`\u00a0\u00a0\u00a0License-Code:\u00a0GPL-3.0\u00a0\u00a0\u00a0#\u00a0This\u00a0refers\u00a0to\u00a0GPL\u00a0v3.0\u00a0*only*,\u00a0no\u00a0later\u00a0license\u00a0versions\u00a0are\u00a0acceptable.`\\\n`\u00a0\u00a0\u00a0License-Code:\u00a0GPL-3.0+\u00a0\u00a0#\u00a0This\u00a0refers\u00a0to\u00a0GPL\u00a0v3.0\u00a0*or\u00a0later*.`\n\nIn the event that the licensing for the text or code is too complicated\nto express with a simple list of alternatives, the list should instead\nbe replaced with the single term \\\"Complex\\\". In all cases, details of\nthe licensing terms must be provided in the Copyright section of the\nBIP.\n\nBIPs are not required to be \\*exclusively\\* licensed under approved\nterms, and may also be licensed under unacceptable licenses \\*in\naddition to\\* at least one acceptable license. In this case, only the\nacceptable license(s) should be listed in the License and License-Code\nheaders."
    },
    {
      "header": "Recommended licenses {#recommended_licenses}",
      "content": "-   BSD-2-Clause: [OSI-approved BSD 2-clause\nlicense](https://opensource.org/licenses/BSD-2-Clause)\n-   BSD-3-Clause: [OSI-approved BSD 3-clause\nlicense](https://opensource.org/licenses/BSD-3-Clause)\n-   CC0-1.0: [Creative Commons CC0 1.0\nUniversal](https://creativecommons.org/publicdomain/zero/1.0/)\n-   GNU-All-Permissive: [GNU All-Permissive\nLicense](http://www.gnu.org/prep/maintain/html_node/License-Notices-for-Other-Files.html)\n\nIn addition, it is recommended that literal code included in the BIP be\ndual-licensed under the same license terms as the project it modifies.\nFor example, literal code intended for Bitcoin Core would ideally be\ndual-licensed under the MIT license terms as well as one of the above\nwith the rest of the BIP text."
    },
    {
      "header": "Not recommended, but acceptable licenses {#not_recommended_but_acceptable_licenses}",
      "content": "-   Apache-2.0: [Apache License, version\n2.0](http://www.apache.org/licenses/LICENSE-2.0)\n-   BSL-1.0: [Boost Software License, version\n1.0](http://www.boost.org/LICENSE_1_0.txt)\n-   CC-BY-4.0: [Creative Commons Attribution 4.0\nInternational](https://creativecommons.org/licenses/by/4.0/)\n-   CC-BY-SA-4.0: [Creative Commons Attribution-ShareAlike 4.0\nInternational](https://creativecommons.org/licenses/by-sa/4.0/)\n-   MIT: [Expat/MIT/X11 license](https://opensource.org/licenses/MIT)\n-   AGPL-3.0+: [GNU Affero General Public License (AGPL), version 3 or\nnewer](http://www.gnu.org/licenses/agpl-3.0.en.html)\n-   FDL-1.3: [GNU Free Documentation License, version\n1.3](http://www.gnu.org/licenses/fdl-1.3.en.html)\n-   GPL-2.0+: [GNU General Public License (GPL), version 2 or\nnewer](http://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html)\n-   LGPL-2.1+: [GNU Lesser General Public License (LGPL), version 2.1 or\nnewer](http://www.gnu.org/licenses/old-licenses/lgpl-2.1.en.html)"
    },
    {
      "header": "Not acceptable licenses {#not_acceptable_licenses}",
      "content": "All licenses not explicitly included in the above lists are not\nacceptable terms for a Bitcoin Improvement Proposal unless a later BIP\nextends this one to add them. However, BIPs predating the acceptance of\nthis BIP were allowed under other terms, and should use these\nabbreviation when no other license is granted:\n\n-   OPL: [Open Publication License, version\n1.0](http://opencontent.org/openpub/)\n-   PD: Released into the public domain"
    },
    {
      "header": "Rationale {#rationale_2}",
      "content": "BIP 1 allowed the Open Publication License or releasing into the public\ndomain; was this insufficient?\n\n-   The OPL is generally regarded as obsolete, and not a license\nsuitable for new publications.\n-   Many are unfamiliar with the OPL terms, and may just prefer to use\nthe public domain rather than license under uncertain terms.\n-   The OPL license terms allowed for the author to prevent publication\nand derived works, which was widely considered inappropriate for\nBitcoin standards.\n-   Public domain is not universally recognised as a legitimate action,\nthus it is inadvisable.\n\nWhy are there software licenses included?\n\n-   Some BIPs, especially consensus layer, may include literal code in\nthe BIP itself which may not be available under the exact license\nterms of the BIP.\n-   Despite this, not all software licenses would be acceptable for\ncontent included in BIPs.\n\nWhy is Public Domain no longer acceptable for new BIPs?\n\n-   In some jurisdictions, public domain is not recognised as a\nlegitimate legal action, leaving the BIP simply copyrighted with no\nredistribution or modification allowed at all."
    },
    {
      "header": "Changes from BIP 1 {#changes_from_bip_1}",
      "content": "-   Acceptable licenses are entirely rechosen, allowing a wide variety\nof open licenses, while prohibiting the problematic older choices.\n-   Accepted Status has been renamed to Proposed.\n-   An implementation is now required (when applicable) before BIPs can\nproceed to Proposed Status.\n-   BIP Comments are newly introduced.\n-   The License preamble headers have been added.\n-   The Layer header is included from BIP 123.\n-   Non-image auxiliary files are permitted in the bip-XXXX\nsubdirectory.\n-   Email addresses are now required for authors.\n-   The Post-History header may be provided as a link instead of a\nsimple date.\n-   Markdown format is no longer permitted for BIPs.\n-   The Resolution header has been dropped, as it is not applicable to a\ndecentralised system where no authority exists to make final\ndecisions."
    },
    {
      "header": "See Also {#see_also}",
      "content": "-   [BIP 1: BIP Purpose and Guidelines](bip-0001.mediawiki \"wikilink\")\n-   [BIP 123: BIP Classification](bip-0123.mediawiki \"wikilink\")\n-   [RFC 7282: On Consensus and Humming in the\nIETF](https://tools.ietf.org/html/rfc7282)"
    }
  ]
}
